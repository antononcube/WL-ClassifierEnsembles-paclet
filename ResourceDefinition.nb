Notebook[{

Cell[CellGroupData[{
Cell["AntonAntonov/ClassifierEnsembles", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1956818453,ExpressionUUID->"48abacc1-dc34-4237-8b4b-ee06f08dc9de"],

Cell["\<\
Creation of- and classification with ensembles of classifiers\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{3.932253182024925*^9},
 CellTags->{"Description", "TemplateCell"},
 CellID->1683169413,ExpressionUUID->"6ed8f752-5a6b-4935-8749-43921ea6a580"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"a0ba5364-34ea-4768-86b5-3f4ada688b50"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "/Volumes/Macintosh HD/Users/antonov/WL-ClassifierEnsembles-paclet", 
   "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"49066314-c53b-4a1a-a4d0-346039e508f9"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1328626547,ExpressionUUID->"8f73d224-900c-4707-8e8f-590c44dc7f13"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a934b975-f15d-4d83-be2c-1732ea4ce488"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->691413923,ExpressionUUID->"578536e0-775c-4fc7-94d5-70faf5cdadc9"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"361b1af7-737e-433f-8908-a963b2cfede0"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1964410737,ExpressionUUID->"0d16c91f-ba0e-4cbc-b2d5-5e1afbcc0730"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9ed10771-559b-49d2-b5cd-513cfa8e2ec0"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->437667781,ExpressionUUID->"1d992372-d750-43aa-a7cb-51effa0bd848"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ensemblesofclassifiers.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "Ensemblesofclassifiers.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "Ensemblesofclassifiers.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->896721398,ExpressionUUID->"6c27d01d-c353-4fd6-9287-179716285c60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"5f1df00b-60fe-4c25-9e79-cdbc4a9ae4f0"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->750904292,ExpressionUUID->"701a843a-5647-44e2-b84c-57f46c781515"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"39230fec-b75d-41c3-9755-91f0e33aeae9"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1834525872,ExpressionUUID->"00484a40-aa71-439a-afd2-da78cad8d21b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ClassifyByThreshold.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ClassifyByThreshold.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ClassifyByThreshold.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1453610725,ExpressionUUID->"e2ec8717-d7a9-403c-8e83-4d219cc361a7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierConfusionMatrix.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierConfusionMatrix.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierConfusionMatrix.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1061486803,ExpressionUUID->"5c9dbf6b-f10d-4208-bee5-2acc037d9004"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierMeasurements.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierMeasurements.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierMeasurements.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1262042392,ExpressionUUID->"765ef28c-2dec-423f-aea5-b0bfc910b8b6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifier.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifier.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifier.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->450500925,ExpressionUUID->"6ad20a64-9618-42f5-a696-eb761dbd1eda"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierProbabilities.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierProbabilities.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierProbabilities.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1689190800,ExpressionUUID->"b2f350a7-afa3-4742-93e0-c8435ea75746"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierROCData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierROCData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierROCData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->495962260,ExpressionUUID->"a2ef9cb6-e342-4ddd-8e55-4af10027dc81"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierROCPlots.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierROCPlots.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierROCPlots.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1253669813,ExpressionUUID->"7538f6d1-e34d-46c4-90df-c8759aaab353"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifierVotes.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifierVotes.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifierVotes.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1466486374,ExpressionUUID->"a0e27ebb-1751-40e0-90e7-312df7c79a09"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassifyByThreshold.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassifyByThreshold.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassifyByThreshold.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->566671199,ExpressionUUID->"f318c426-d63c-4147-8710-54458b3fb30d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EnsembleClassify.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EnsembleClassify.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EnsembleClassify.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2100350795,ExpressionUUID->"e3bffc3e-3864-4dd1-87b8-7d5bcd2dc939"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResamplingEnsembleClassifier.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ResamplingEnsembleClassifier.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ResamplingEnsembleClassifier.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->259622179,ExpressionUUID->"194a77b5-8893-4550-bb65-52781e92ffd0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"7ee65586-a7e0-4ebe-80f7-f6c2ac657d2f"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1930675396,ExpressionUUID->"57d6dae3-7876-442b-aa84-b8b0989e67c0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{
    "\"ROCforclassifierensemblesbootstrappingdamagingandinterpolation.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "ROCforclassifierensemblesbootstrappingdamagingandinterpolation.nb"}]},
    
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "ROCforclassifierensemblesbootstrappingdamagingandinterpolation.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->105187648,ExpressionUUID->"c750b8fe-5c68-4dc9-83b1-2e628833f55c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"86a4a464-5de4-4179-9495-6db05090feb8"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->559789944,ExpressionUUID->"7ade5816-920a-4ed1-8642-ac0052f1dc4c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ClassifierEnsembles.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ClassifierEnsembles.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ClassifierEnsembles.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->263731301,ExpressionUUID->"ecff0155-05aa-4c32-8807-09e6b01efeda"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->125728499,ExpressionUUID->"57745db3-1c2a-408f-9d2c-5093900d446a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2142457692,ExpressionUUID->"b90224de-de06-4da0-b4da-d4bf36f79de9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     FileNameJoin[{
       NotebookDirectory[], "README.md"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "README.md"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->455849767,ExpressionUUID->"1a37a7d4-e0c8-4a0f-8a24-b950f84d74ce"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1428120195,ExpressionUUID->"8b8ae0b6-4e89-4ea4-97ef-63a5241e3438"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2138878493,ExpressionUUID->"605f12ba-6644-487c-b14b-f1dced958acd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bdda64c3-adab-4aba-bdd4-ad54d2616b67"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"5dcaee98-f3fd-456c-9110-915912ef3615"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2ddbf8a0-db09-46b2-bc45-9640fc145490"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"7ba6c90a-87d7-4ce2-8104-35ce753c859d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsfc/O7MruVYIY8Bq8BVOGTOEJQAJmIP1AQrw9nP11d8r/l12uJP3tLOme
nVTZy8suO53ufe69//a//M//+N/+1bZt/+vf/P9//Mf//H/+/b/8y3/+v//p
n5v/8D/+93/97//1X/7df/lne/vXP//ZHzx48ODBgwcPHjx48ODBgwcPHjx4
8ODBgwcPHjx48ODBgwcPHjx48ODBgwcPHjx48ODBgwcPHjx48ODBgwcPHjx4
8ODBgwcPHjx48ODBgwcPHijYnv+hpg+eUjz42/DP/2CbaHu+uKlWvw1/R5YP
rsK5rQW28jP/B4Is/4oaPOgB75XTJ4jHMwR8+/x3ChNZQhXsCbyE98FVEBOz
cID0vgQFfN38Y4+1KrVMm91asaZU3Ka4D5pwk/ln3Wt4R653mv9gRvu5+QPA
8Z0JXPZ9cEds6Ph1xQoV2PNvuHoL1yEzkyVuEWsz97nvTOCy74M7YkPHryuW
pSAUgMz/+b9emMjMZIlbxtqsfe47E7js++COOHH+jQ9nrXl1d4Dx3vPfyi1j
IfM/V6C7FPdBFzatd+hmli0Ixf96kSs4LumOIjEx/8bGun5GH2sJMnqrxNqM
fWE5oaPq+uCW2JTeEXt8YfB+L1v7w8oRSo7ssCrYDnfB+fqTd74IYmZysEzN
hQJtJu2tnV0esiwuNb1N2x+3BkMrXacSzSV6cD1E7yttKj6P9TFSudQxg+Z/
25iDEoSbSCexKoOqLvMw0tLrOjgpRVHVa6FGb7HHKzHaGIGHBZrDg18Cuxm9
oVE/oSMH2Xcfo/FDR2/VXc4/G13dyVi0SFZUdkjTLOPgJPT58x3sixq+Lpm0
d2C3UPTVrLFUDy6D2YybPOyxh5gz8dg0Q+XbwaFgZzQ7sf78sfNWH9Wb878p
i8MdcV5SWbWKelyZl5llUMIxT3YknOP4NiArdVAz6Y2VenAdxhkgzTicMT9u
2kMbXyVdrPq5Co4/RpP3PxVGMRna0k4v2WKqXKDDMTl0ZmTBBj6ehkK5y0Ju
QyzxOe08kw9FwyEIbRsJRPU++HJs4/i9Fob1j43iwzYGD9FrwoKt7jvtXsbN
NVLG996xYIqUU2CpMmAMpmU6CDpGi4sx59+gNAsrqqEMtD7iO/M7YtFQm3wE
P/hq8NZR5n+jbeGNlvLSyT4+9KY+jI1XUfrppBDKduWzMKYyUgmVYbkwcxZK
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
7UKx4noAjEPVPouxjDiXnpyJytgSZMzSLkCSV0hh11LnsDhmy3ZJV8HcZ0KE
N9RYOuXipemYqHRs5AfP//gAmB5//MekQN4YEbPECA9aPH43ksxCDL2UUse1
MVvdhdyyMCurAEBEN8RYKuXqldk4ABuRL7gOMR89XlADkklTztvl8586RBw5
aiGHXEmxZGnMVvpwa4t7JtkJiOiWFEOjXL4wGRdYK3r3wh6nAyXgiXTlfPX8
Z04wgxz5kN1nYeDh3/NJOeT88wuWrU5z0cyIc0gqkcqvyyUA1o2sN13riEv/
Huh6oHn05Zx4U4esDlYw9hqk2H+MB0nbeGKDFece8xidzR8LdO61pfAgDoIq
CWVJ5fVcVhch077joZr7kbN8Tww90DQac4ZL0z//ufNLIcVPyvC6IBsfM7E4
JLLJwdbE8FiXQhwFvdQ1sjOmuYyH7wViH45n9ETyCRB5pOYfCZZIojFlWGly
/rHAy5CKsI2nvVszOqxqgXgthaOMlchnDY5zHe6PS1UkP2Sa8DYuKT7Kjx/q
/hqETcmEuPuB75rxTzfOdJ4fu0Q+ANtqZGJspHmtSd/J5rCoz7/6oWpyX4Mf
FYNYmQTLznmpFY6aj2KnRFubMYbIum/+8wm0ZgxKbZ3/VMolZIJspFEn519+
dBIeg/safNLV5p+sbMOfRxXkoR6XlJW+YBFDtYbLkGpRd993XTT+lRfHWAEk
E04opjoDlfk/Xl/fN9JMLoreZZkSHoP7GmwbG1Wpjq1Q3UOW26aOuGRTinJy
MfAmdfd9V3RcSuLXZBwI7SD5Q3QKMpE21orb5Pzv9OONbBnc12Ab1AxTvNGC
DJabzJJesrTHRwPhu3L+wffdwC6YfyREJe2aV8PwNs1/XnoNmbAbnc+3A3Mc
Vnexqry7btrWe+3MUtgYFWrzf9TuSF71V14lDCca6Vi73RMgMuuY/6rwNRkH
WmcJqsJryATeeINuzvwrL/qShDgoY1I/xlYQhdbXeuPFYGf3Ss1+rqXP8Mdh
eHZFoG71Not7I31V9rKMp3PqT7iITGhiMDgQT7JKI7z3LdqBhqxd/gA4NLzk
bFrTv/Z3ZP6V93rpM/wxWJ7eI4nOVTD/gVoXfUXG8/NfVd2QamzLPY/LXb0U
7Jv4/LNoRpIr3n0PMLHbmAQVtq2d/2teAa6chynJV2Q8O/91zdVEM7ZGW3+k
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
GLhdfuH+gaIs+YKMtQV55D99+uWhBfeuPSXnhL7mf8kH5cIj687pv6NXA5oz
6E+K3sz/+/Yi9qOP5SW/KLc++m/rVsx1Cv9JGVDzv6n5v0jtIrElS5TMmH5s
f2e7knPr8ohMOwHvmv+rvJYsMXJ9eoL5v61h75j+if/Cg8A4AO9NyJIlo3Kx
678x/97ttOf2tPlv+nKN/5LHypXWxCP4gcfd7Oln8z8ArQ8As7JkyZ+SafM3
6nmab4A2BG9xvpehJUuWpGXWlIpzaeYLypIlS35B/C8n1vgvWfLPyBr/JUv+
YVnTv2TJvyxr+pcs+bdlDf+SJUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmS
JUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyJCvr30JasuTflTX/35ev/Lug/2bd
Pxy0c3eX/2w1/8WaP1wG/m3w+ux6fIdx23+WJ/Rah7hC5f6T1v39nm6bmJXd
WK8DZku+L+bvgtEVkn9H9LmT++tjbCM2Cw0mE+LtikN/a43WBqeQ0T0UhCbO
DULoMSnSH/6vHsk7u0uM6m6Y09is5mfJzdJMW6LHh+3cZo00lkVGEJvrhXb+
x2gADKK6L4FYNCetQKCCg9Au2aCDlPjsyCxiRW/S03M2ljm7F14qPnDic2Z+
qeZ5yVRpon/F/bG5r5nRCOcH3AOLZseoATWCAR3CJ6yniCKCQdocyVzB/Dnn
JtEKbNMorx9mlAhmxw0K2N6aQjhEBg+BUSK1cgDr8iIW19lwt8guMAu675uo
8utHZ35UW6nxaNb14cKNEbnxp5ClYIHFPtZ0aPH82xyhAEmixYq4hqwgpl9q
QKBbF37Hq7CCJLQ+Jme3JRu5ZCOi8S+ZKGFbvjd1cZXRWRnffe+L9x/guWCb
ZHMFNw4Vgnaou8vEoCluptes2rHiksRoaETcqr1Eu5DgAl5rQJBbgKutHZpd
QPlijC03EzOcf/NoAAEtmSoutfJeNAhZOC+bu5I1h0NnYLyOdOxX/KVT32Rb
iUby/YRW3KYkCVJyBLMB8T2sEy0ZNuNQKTulcP5RPeEp69IEV0Ba1fw7Bh7K
ZthoUqLrALhFbGpBv+hG0zqqUthMFdj69jCEi12xPNtpDRq1+TYluGLJ7Zom
t8GG8+/fMHQAioUJSGrLUdKjYwPGedKe8bkqkUS8MK3+XUJmIYhZzL89nkFX
+fosmSK2suDaNYdecM9towWe2NaXLLzeB2wdTenRuWlOnDVacIZSC6xJr9H8
a2bmEiXah+iOPXDgwdBwkokSiU0yFrsisQTXxMyT2uzabmA5L5kiusXj54Uu
Dxuo9+KxpZetb7XVhAzNvx2y19a5oToa03d5Qa26GVOVwDjT4tZcuhWTFcO0
Od/I/7mJktysEcgrKNyRgiOHirB8ttv57ya1Gaa7qcvnkiliesE0mFxSDSfN
TJ3FImjXzSrq4dHNDrjqC4eD2l8xNQF4NMsEtqo75YxulOnjTmz4lWYT2aKw
N4Plc4aSnJ5/EIlI7SYSC12SrOKkNoXTO1WXXBbVC64J3Qzh+Td4fhqb0TKa
ionqJqe/WY+KF7CwkKwHQU5oq75Zo5TQRKuc6ET7lQZI+LDRoeCdutwZqmFe
SXZ039g0CH48qySpTVJOZHXJZbGFPBbPTVNXuWTKI7vDuIBuzw3tiPXdZvdO
/d4JY9rUwaKMoMeagj5cJxqVJRquNL0yPv/NpM7yPG69g/78G8Jqjc2/f0cQ
tzJFqiGW3Ce4LW0Zzg1xw9vS9hiZMgNs/XuSfP5xWLKjgCIxtNc2RYJ7oUGF
icfnAR2BdMKuJlkiWfMzeQBRI8kFGYXzY6+DpB7+bUBLbhDXhLAkm9HZfIvI
5tD4vDW1KbzTK3Y04vmXoQBFRC3RqqLdYXBEPFs0AijITNhBkpu2g9GW518B
gJJjN1smqZVTdcmYoCY0K76lXFsaq/z8gyeG2XTaHi1qFz/pjJroTGvIWvU0
nDX/elTjGHHYZFpBgYyKN/dErbp9VsyYf1GNNf93S/OF99kP5l/qAvPs/BOd
FmAAP7X53803sSDXM61KDzsYp7lyF4ZBJ6skbMREgfbn3xCN1M2KVbVZrSW1
dKouGZHmi2wHgc+/VHLzk5x/vWxBIkzsEcBbbyjGZtGUHW9VBAg7FvQ05k9D
BOWh8+8fuw0n2Z7jp+65DUKiKxFdn9VOUjcLtmS6kF6wC9wI9KpYsEaYAGeD
boEygMLczz7kferaMZp/0Pi4Wfsuc3mG5SnNP6s58wlCoitRkMYuSGrzaOsI
uElAgkHHMRvUVfLeWUECATDtU8zT4yfn36JZR2rNnGs0JTZO4jF6zwKgnbAR
B4IAiwVL4GMhKxh5vw+Sagna+Nf83yU+v2Yh6kuO42rGqtgrbafX8U1OkgZH
cyOzvVVTMHAO5a3zC7rflwedceGSq5+9NhPs8Vxw2FizRV2FknrsreH/hHQS
7Oc/iVry8k9ImAI4/4m8+UTX/HZkzd8/Lqv+nxEy/0uWLPkHxD9o1/gvWfKv
yHrRXrLk35U1/0uWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmS
JUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmS
JUuWLFmyZMmSJUuWLFmyZMmSJUuWLFki5X/b3yhw
    "], {{0, 1024.}, {1024., 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, Interleaving -> None, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{408.2734375, Automatic},
  ImageSizeRaw->{1024., 1024.},
  PlotRange->{{0, 1024.}, {0, 1024.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.9322943808401127`*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"9f69225f-e263-4fce-a011-9a3276c2fa9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f8ef4f15-ebaf-4a48-a562-69c464a31271"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"5735395e-222a-44e5-9534-4e3ecec09f3b"],

Cell["\<\
Functions for creating Machine Learning classifier ensembles and making \
classifications using averaged probabilities, votes, and thresholds.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932253243651092*^9, 3.932253303616144*^9}, {
  3.932295227820627*^9, 3.932295228222126*^9}, {3.932295409444502*^9, 
  3.932295412871077*^9}, {3.932298205163471*^9, 3.932298208148542*^9}, {
  3.932298294454165*^9, 3.932298296340726*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"af912534-e465-4599-88d0-4a8912c8c8f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "da6ba8f2-2794-4ea4-9a73-1e3fccd68d07"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"a25f368f-cede-41c4-8b5f-9da6f9969b2f"],

Cell[TextData[{
 "Classifier ensembles are ",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "5d97ff5f-1cdf-4f7e-808c-2ef770f4f5a9"],
 " objects that have ",
 Cell[BoxData[
  ButtonBox["Classify",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "3a461153-6f6c-4f6d-a2ae-6a9536f19787"],
 "-made objects as values."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293110378771*^9}, {
  3.9322931981184187`*^9, 3.9322932185937033`*^9}},
 CellID->1085166244,ExpressionUUID->"89c6df86-06d0-48ae-8477-2075478f4c0b"],

Cell[TextData[{
 "The function that makes classifier ensembles, ",
 Cell[BoxData[
  ButtonBox["EnsembleClassifier",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/ClassifierEnsembles/ref/EnsembleClassifier"]], 
  "InlineFormula",ExpressionUUID->"8f4328ea-12af-4dba-8299-9120f58a6caf"],
 ", can take data arguments that ",
 Cell[BoxData[
  ButtonBox["Classify",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "e58460e6-f885-415a-a43f-bd2873adc08b"],
 " can take."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293111988484*^9}, {
  3.932293224811088*^9, 3.9322932322373867`*^9}, {3.9322960733304768`*^9, 
  3.932296074655386*^9}},
 CellID->610778949,ExpressionUUID->"b0b5eefc-7457-43ad-a3ae-ff9c8ff5f65e"],

Cell[TextData[{
 "Classifier creations using data resampling specifications can be made with ",
 Cell[BoxData[
  ButtonBox["ResamplingEnsembleClassifier",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/VariableImportanceByClassifiers/ref/\
ResamplingEnsembleClassifier"]], "InlineFormula",ExpressionUUID->
  "03a8e619-7096-49ed-a1bf-5e2a3dab4edf"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932296076475266*^9, 3.932296159315612*^9}, {
  3.93229722042844*^9, 3.932297238742434*^9}},
 CellID->1142390441,ExpressionUUID->"6ccad46f-688e-4b76-b145-1c0a6e96baa4"],

Cell[TextData[{
 "A classifier ensemble is created with a list of names of the algorithms \
used by ",
 Cell[BoxData[
  ButtonBox["Classify",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "ed5bb5f7-d686-44bf-8384-b4e1b89fcfb7"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293113055175*^9}, 
   3.932293235831292*^9},
 CellID->531700189,ExpressionUUID->"1b1ba255-d934-4fe3-ae6c-944607f82fa3"],

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  ButtonBox["Automatic",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "b749ec5f-aeaf-4605-af4a-9e6b629e0eac"],
 " all (relevant) classifier making algorithms for the given data are used."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.9322931141604958`*^9}, 
   3.932293240641018*^9},
 CellID->714413559,ExpressionUUID->"862938ef-b65b-42df-a00a-4f55b3d4e43b"],

Cell["\<\
A given record is classified by default using the average probabilities for \
the labels given by the classifiers.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293115376737*^9}},
 CellID->1506631879,ExpressionUUID->"a06c259b-054b-4455-abbd-3750039f4ed6"],

Cell["\<\
A given record can be also classified by using the number of classifier votes \
for the labels.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293116430434*^9}},
 CellID->1125421230,ExpressionUUID->"0e14b6c6-1a65-4134-a842-59985d420049"],

Cell["Thresholds for the individual labels can be specified.", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293117519718*^9}},
 CellID->1814591297,ExpressionUUID->"c500d508-9ce2-4157-aa8b-f9ce98c989f5"],

Cell[TextData[{
 "Ensemble classifier measurements can be computed with ",
 Cell[BoxData[
  ButtonBox["EnsembleClassifierMeasurements",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/ClassifierEnsembles/ref/\
EnsembleClassifierMeasurements"]], "InlineFormula",ExpressionUUID->
  "73e153a1-ec86-497d-87e5-e6527631624c"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.9322973285708303`*^9, 3.932297372417395*^9}},
 CellID->1069477196,ExpressionUUID->"8d8d7dfe-cf2f-4a9f-a84c-60cab72b2d42"],

Cell[TextData[{
 "Ensemble classifier results can be processed and visualized with Reciever \
Operating Characteristic (ROC) functions of the paclet ",
 ButtonBox["\"ROCFunctions\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.932293108355548*^9, 3.932293166069624*^9}, {
  3.932293270856917*^9, 3.93229327085813*^9}, {3.932295337428405*^9, 
  3.932295367128436*^9}, {3.932297375269596*^9, 3.932297376155703*^9}},
 CellID->329663671,ExpressionUUID->"45887069-7913-4ab3-805c-1520b62cc369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "88231fea-e4f4-49b3-aa46-a4bfc570e7ca"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"24e9241f-75b7-4980-bd7f-3c410abb9857"],

Cell["AntonAntonov`ClassifierEnsembles`", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.93225157552584*^9, 3.932251585739871*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->310388821,ExpressionUUID->"458c5f82-4bde-4744-92e3-83bd69a1ec58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "708ddb57-9467-47be-a16e-32edcbd956c1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"59b825ab-c72c-4a22-85e3-8a9b7e702227"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Guides/Ensemblesofclassifiers.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"a44a880e-0814-4bf3-82ab-c4392ef3fd83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dd51e0a5-4c06-4887-97ea-d628a1d7a3a8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"381a0f6f-fab7-46cf-95e6-fc2189694e95"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "62e7ae5f-18f3-4234-8a29-8b68a3598abf"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"52e78b40-328e-4183-ac98-72fbd3c05901"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[21]:=",
 CellID->996717066,ExpressionUUID->"1da49b0b-b0be-47a2-9604-444ffc1332e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<AntonAntonov`ClassifierEnsembles`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[22]:=",
 CellID->172764492,ExpressionUUID->"a8e5edac-36ba-447d-8af4-94d8ae6cfd6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellLabel->"In[236]:=",
 CellID->462042388,ExpressionUUID->"9f7819d6-1c27-49f4-b2e5-0aa11b274374"],

Cell["Get training data:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932251684695414*^9, 3.932251689577181*^9}},
 CellID->657007628,ExpressionUUID->"dcba7d80-bbd8-435f-a18e-5127f244f0a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "@*", "List"}], ")"}], "@@@", "data"}], ")"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"___", ",", "_Missing", ",", "___"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932251610569993*^9, 3.932251616668548*^9}},
 CellLabel->"In[1]:=",
 CellID->1250247880,ExpressionUUID->"4c6f8ec0-336e-4373-87f4-6f6bc6640a79"],

Cell["Get testing data:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9322516920947104`*^9, 3.932251695966352*^9}},
 CellID->2010608312,ExpressionUUID->"794083fb-febe-463f-aada-30d20da44d6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "@*", "List"}], ")"}], "@@@", "data"}], ")"}], "[", 
    
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"___", ",", "_Missing", ",", "___"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932251610569993*^9, 3.932251616668548*^9}, 
   3.9322516503845587`*^9},
 CellLabel->"In[4]:=",
 CellID->231973877,ExpressionUUID->"2f83a3b2-7413-49ce-a377-65bc91818f5a"],

Cell["Summarize the training and testing data:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932295428747064*^9, 3.932295450174206*^9}},
 CellID->808237337,ExpressionUUID->"c64c1fc9-acad-4c9a-a30e-bcff50816611"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"Expression", "SequenceIcon", 
      GridBox[{{
         RowBox[{
           TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["Sequence", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["2", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1112", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   Sequence[
    Transpose[{
      Map[Style[#, FontFamily -> "Helvetic"]& , {"Training", "Testing"}], {
       ResourceFunction["RecordsSummary"][$CellContext`trainingData], 
       ResourceFunction["RecordsSummary"][$CellContext`testData]}}], 
    TableHeadings -> {"Data", "Summary"}],
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932251838708789*^9, 3.932251869060526*^9}, {
  3.93229545844943*^9, 3.9322955367260427`*^9}, {3.932295596373973*^9, 
  3.9322957423030577`*^9}},
 CellLabel->"In[7]:=",
 CellID->1122213554,ExpressionUUID->"7f6b6562-cd32-4270-a37d-eb26b0ed7fc9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Data\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Summary\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     StyleBox["\<\"Training\"\>",
      StripOnInput->False,
      FontFamily->"Helvetic"], 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 column 1\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "354"},
              {"\<\"1st\"\>", "197"},
              {"\<\"2nd\"\>", "181"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 column 2\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", "0.3333`"},
              {"\<\"1st Qu\"\>", "21.`"},
              {"\<\"Median\"\>", "27.`"},
              {"\<\"Mean\"\>", "29.41643893442623`"},
              {"\<\"3rd Qu\"\>", "38.`"},
              {"\<\"Max\"\>", "80.`"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 column 3\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "460"},
              {"\<\"female\"\>", "272"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 column 4\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "427"},
              {"\<\"survived\"\>", "305"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]},
    {"2", 
     StyleBox["\<\"Testing\"\>",
      StripOnInput->False,
      FontFamily->"Helvetic"], 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 column 1\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"3rd\"\>", "147"},
              {"\<\"1st\"\>", "87"},
              {"\<\"2nd\"\>", "80"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 column 2\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", "0.1667`"},
              {"\<\"1st Qu\"\>", "21.`"},
              {"\<\"Median\"\>", "30.`"},
              {"\<\"Mean\"\>", "30.964437579617833`"},
              {"\<\"3rd Qu\"\>", "40.`"},
              {"\<\"Max\"\>", "76.`"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 column 3\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"male\"\>", "198"},
              {"\<\"female\"\>", "116"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"4 column 4\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"died\"\>", "192"},
              {"\<\"survived\"\>", "122"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.9322518407628717`*^9, 3.932251869365815*^9}, {
   3.9322954679409647`*^9, 3.9322955169703197`*^9}, {3.9322956052332497`*^9, 
   3.932295615728332*^9}, {3.9322956468647346`*^9, 3.932295689126924*^9}, {
   3.932295721374029*^9, 3.932295745492138*^9}, 3.932296675381159*^9},
 CellLabel->"Out[7]=",
 CellID->1440462401,ExpressionUUID->"194ae4ac-cdeb-4476-8531-8f3630e4ea72"]
}, Open  ]],

Cell[TextData[{
 "Create a classifier ensemble using ",
 Cell[BoxData[
  ButtonBox["Classify",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "dd589cdd-2e56-46c8-98e6-f08836b4c73d"],
 " method names:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932251680263335*^9, 3.932251703547596*^9}, {
  3.932252684208414*^9, 3.932252710778096*^9}},
 CellID->1511978997,ExpressionUUID->"a71f8f3b-68d0-4c29-87e9-904d6fdfadf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aCLs", "=", 
   RowBox[{"EnsembleClassifier", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<LogisticRegression\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
       "\"\<RandomForest\>\"", ",", "\"\<GradientBoostedTrees\>\"", ",", 
       "\"\<NaiveBayes\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"trainingData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}]}], "]"}], "]"}], "->", 
      RowBox[{"trainingData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aCLs", "//", "Rasterize"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932251680263335*^9, 3.9322517151819363`*^9}, 
   3.932251951834653*^9, {3.932252620623564*^9, 3.932252669573124*^9}, {
   3.9322542396041107`*^9, 3.9322542463701773`*^9}},
 CellLabel->"In[8]:=",
 CellID->1341840057,ExpressionUUID->"bd9493a2-da93-484a-b684-7732c43627a8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQeU1VT3t0ER6dJEEBBEQUBAKb4gRaSDgkgvghSVjiBNioAFqVIE6b0r
Ioji0HuV3hEYev+G8lKv4KvzPf/sxVkxN7cxM8wo+7fWzMo9OTnZ5+RkP3vn
5ibPNm1Xvdkj8eLF65iIf9WbfFyqQ4cm3Wqk5EOtDzu2bP7hB+9X+rDTB80/
6FCk6aMU/slfC+r/33KkSqX6h+vWrVsRERH/T6VSuen27duxfY6qVKo4JHwC
nuHGjRsseFQqlU2cFJwanCDElrF9pqpUqrgigWZs+yeVKu6KEyQiIiK2z1SV
ShVXJJehYtszqVRxV3JNJrbPVJVKFVeEQ4htt6RSxXUpN1UqlZFyU6UKKOWm
SqUyUm6qVAGl3FSpVEbKTZUqoB4kN8+fP3/p0qUHtjuVShWqooWbP//8838D
6ejRo2vXruW//2rSVNRNii3dvn173759sW2FKjRdvXr1119/9VPhQXJz5MiR
33///QPbnUqlCqjLly/36tWrd+/eW7ZsiYwZbp47d+7UqVMOaH711VcDBw7k
v390enNz165dbBIV82jQ+55h18Io6vjx46+99trJkydZHjVq1MGDB82qYcOG
MfKhNli7du358+cHUxNYN2zY0HXVxYsXGXkzqqdPnx47dmyolvgXs6hQoUJB
HqYZM2YMHjzYddX27dsnT55sPm7atOmXX34J1ZhBgwZ17949yMqdOnVavnw5
C+PGjfvggw98VRNuhoeH97Z05MiRmDtDlZsqVVzTb7/91rVr1wsXLuANImOA
m4TuEyZMmDRpEpgwhWSaA++J5ZC4+d13361bty4q5g0YMACOB1MYRc2dO/eN
N96Q5UyZMhUoUODmzZvyMWXKlFA11AZ/+OGHw4cPB1OTdClPnjyuqzji8eLF
a9++vXwkXsqePXuolvgXEQgsvnbtWjCV4VqrVq1cVwEvTJ03b558JMp67733
QjVm8+bNq1atCrJylSpVvv32WxZOnDjx5JNP+qom3Lx79y4nzujRo6F5zJ2h
yk2VKq4JL/rll1+ajzGRb+7ZswePt2jRomjJN4WbeOY5c+ZAB7KV1atXX79+
nVVkCtu2bZs9ezZ8we9RcuzYMeMzWWBfS5cu/eKLL6ZNm0ayYNq0F5LQnT17
lkLcPrugZe9mESkGWMShseCxSLF3716DRRFr33zzTVmGmyCgZ8+e8tFwky60
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
auY6bZ8+fTBJ7jnBG2TMmNHcA2NE4k87cIH8tH379nZq4I2NZxaBSCBr/2bN
obt37+Ku2ZB81n9PXXvka3gDcpMxn/J3kV7R97Vr1zpq0s1u3bq5Gr9jxw4G
36TkiAOBzebqQZEiRQw3RaAWskA3x62qvsqjws0333yTyMS1pveRivTBTSY/
0ZH5mDZtWv/cZI+lSpVy3an/uWrv6WeffVa4cGGzql69ejI9YpGb5vtNiAk3
7RdsT5069fXXX0+fPh2GmsreD0NQbqrioILh5rlz5+RbleC1b9++4K/TLlmy
5PI9eazbIT755JNnnnnm2LFjpHtdunTBrYkB5G6knN5UMrK7kUOHDrEtZyXL
t27devbZZ3v27GlqmhtX7ty54/C6Dsp8+OGH+EC8faT1i7nu3buLAYabNE4F
bI60vtpLmTIlyJBrbgTbcrly2rRpOXPmtMPCyNUbV65cGXzItsTk8j0mbX70
0UdyXRQb2rZtS5sBe+rdI1/DG5CbDnGwSHDwhN6rSLg4FmSR1CEfLFq0KL0w
WyVJkgRaQX/Jl/GNyZMn5+hjD/tlWbg5ceJEWpCRxJ0afPgqN4oKNzlSmCeb
MzcI1cyq4LnJEZGJff369datW7Psn5v0gkiJ8IzDyhGEgMePHzet+Zmr9p4y
RcmO5RL3unXrEiZMKN+tRyM3Q71Oa+R6wRbDiN/4aKDp/fA95aYqDiogN/Go
iRMn5szlnHXzOj71n//85+zZs/YSX9y0Sxymx3qWBTkIqRDe23gG1lIHt5Yq
VSpQ9fbbb+N7fbkRTr06derIzbePPfZY8eLF7Q8vmjRpEo4Fh0kFhzN0UAZP
9d5772FMihQpGArALS7Ifj/t+PHjWSWYI67OkSMHluOon3/+eUkbcYPsjkaw
nJ0WKlQIpyHbwj5vb4ypVatWxez06dOzX7kzGU+FRyVvJemGziyEhYUF7Kl3
j3wNL9wUrxsZHDfJF7y/Yhbh/3H1WA4O2AuDZv/yjriC4cIAsYoRLlasGIeV
fhEalS5dmpYjLaIVLFiQcsDE6HXq1Ek291Vu5MpNRszVVHLtdOnS2UvgCIPJ
YWIXFSpUkJusIn0cqXnz5nGMvJtlzB9//HG6SdxF74SbjmvUNWvWJG6RZYIB
zjI2oUflypUzNzlH+p2rjp7SCLOOnVJu7qD2s9PIELlpbg0iwgmJm643CCHC
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
cWZGMTIctYiICEqYSMwE6pNa7t+//z1LskeS1u+++07q0MfGjRsTKEroRbzU
sWPH2rVrDxs2TPZojKF9DoSrVZ573Lx79y4nDsPCfIvt81ilUj044UW//PJL
8zEmuIlvGTVq1Pjx48k9pSQq12mFm7du3cJF4+J27tyJJ8eHSwms2bNnDxyE
jGKJuQaIjwWmgA/3jqsXf+uxkMdHAMFQ3LhxAxTKtUEQPG7cOBZoE1PZ0aJF
i9i72N+/f/8NltjwgiX2fuzYMbupNWrUmDlzpsdCVfr06fHemTNnpqZB1eHD
h9OlS8cgTJ48mYW1a9dS+Mgjj3zwwQd4+FSpUpUpU+bHH3989dVXOUasevzx
xwEoPaIOOMO8ZMmS0SNgBCVHjBhBO4kTJ8YM/9x0NaZDhw5EFFKHZi9evMiO
EiRIQOYF6WgWuDM4adKkWbduHVHH008//Y2lDBkyHD9+nMqwGGytXLnSmDpv
3rxMmTIxCJ988gn1sXPkyJGVKlUiOIFQNOgJxM2hQ4cWKFCA8ffYuEmyXLJk
SYgMxytXrkwJbC1evDjN5s+fP2vWrPQOblaoUIFVdIquSZ2CBQvSBfYouSTt
t23blvjnhRdekAljjGHGNmnSxNcMt1+npb5yU6V6qPQAuImI/L/66it7ua/7
go4ePQo++B8MN8XaFStW4EKl5PTp05QA6M8++wwIenPTE+g6LQMiKRVJ38aN
Gz0WN+GjrGXVwYMHsZB9bbPEgiRcjsuSmzZtevnll2VHgioWyLzq169vUDV2
7FiSHakPcTp37uyxuCnpf7ly5bCBBYYOknps3MydO7dsVb58eYIEFihftmwZ
tCVBW7x4cUBuehvjys18+fJJCbs+c+aMx4IXewR/yZMnn2MJpAIdKufNm9fs
RUylfWguJexIhggDABx7z5IliycQN+Hy7t27CSEIYww3IT7Rkcf6qjpRokQc
VpiIJR6Lki1atJDdQUPP37kp48nhk1XMGQ4xGz7zzDMy+MaYQ4cOvfTSS7t2
7XI1TLmpUj3MejDcRHh1/D9Zm6Oc3E0SNxbAJXVILvgv6PTPTbkSuH79epII
KZEsEmKyjN9mc0keSSohaTDcpCYZFvkUieTVq1c9Fjdx2rKWFA9fCphof4kl
UIWPdXWtL7744ubNmz02VGEe2VDXrl0FVWS+5ks0+tW0aVOPxU15RDDpEvEA
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
gl/wUe4lA2qDBg0i35QronB2+PDhtEaJPMrVsYnru07k/uf06dNXrVr1xRdf
9NiwBRDJGSFXhgwZ5s6dS8m2bduyZs1K5XLlyiVLlgwoYzYLdhbfvHnzrbfe
ypQpEzWbNGniCfSCEo+VfWfJkqVbt27y0Rjgsd4kAqxNTce7S1ztVwUv5aZK
9TArVr7f9MVTkixoRULkh5sieXWX696BkePeV/IsRyN8dLw6xFHi2MT7PSMe
i3Te7/Uw8n47iX1sFy5cCMK8tyKPdnyXGl0/9vR+d4l/+1V+pNxUqR5mga2m
TZu2bNlSHvoUXdyMRrly85+uKVOmkMzGthWq+5Rw8+DBg5w47733nvczulUq
1cOjaOHmf6NbUTdJpYpG2fNNlUr1kEu5qVIFlHJTpVIZRQs3Vap/t5SbKpXK
SLmpUgWUclOlUhkpN1WqgFJuqlQqI+WmShVQyk2VSmWEQ3D9raJKpRJxgig3
VSqVUURExI0bN2LbM6lUcVecIMpNlUpldOvWLXwCnkGzTpXKIU4KgWYU38yr
Uqn+ZZLLUCqVylsRERHElrF9jqpUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVK
pVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUqodIt27d
ioiIiO2HsalUcVT6ZF2VSmWXPFlXH0qvUnnLPJRen6+rUqmMBJqx7Z9Uqrgr
TpCIiIjYPlNVKlVc0f/Tl26rVH6lL91WqVR24RBi2y2pVHFdyk2VSmWk3FSp
Akq5qVKpjJSbKlVAKTdVKpWRclOlCijlpkqlMoo6N3/++ef/BtLRo0fXrl3L
f//VpKlocXSxpQMHDty8eTO2rVCFpvXr1/u/q1y5qVKpjGKCm6dOnXJA86uv
vho4cCD//aPTm5vHjx/fsWNHVMy7fv26N8hcC6OuBg0afP/99yz89NNPS5cu
NeUU7t69O9TWBg0a1L179yArd+rUafny5a6rRo0adfDgQfNx2LBhly9fDtUY
/6pdu/b8+fODqblv376GDRu6rrp48SKTxEyA06dPjx07NlRLmM+FChVimgVT
ecaMGYMHD2YhPDy8QIECGOCn2dg+U1UqVaxp9OjRvXv3njp1qnyMdm7ivYcP
H47TMyVkmgPvieWQuLlp06aZM2dGxbzZs2dv2LAhmMKoK2HChGI/AE2SJMmR
I0ek/K233mLAQ21t8+bNq1atCrJylSpVvv32W9dVmTJlAgomTkiZMiXRSKjG
+NcPP/xw+PDhYGr++uuvefLkcV3122+/xYsXr3379vJxy5Yt2bNnD9WS27dv
Q9tr164FU5nIpFWrVrJcrFgxe6jjkHCzX79+nDs//vhjrJ7BKpXqQatevXoX
Lly4cuWKfIx2bkLMr7/+evr06ewi6vmm4SY4hiPwLiwsTPKCnTt3bty4ESc2
a9YsyebIIufOnSsb7tmzB8e7fft2EgpCBdy1adNeeODAgZUrV0r51q1bt23b
RrKM/1yxYgVdWL16tfy4lT0uXLgQS6gjlcFERESEYygee+wxw00Q8Prrr8vm
hps03qNHj3feeWfcuHGyCcNC1kN9Usv9+/e/ZwmrPFbS+t1330kdOt64ceNe
vXqdPHlS2unYsSNZHsmjtOOfmxjTs2dP+SjcZKwMMn755RcZ5GbNmjGYderU
mTBhAoPAVCGN5Tiy6tatW0OHDqWEoWNZrJoyZQp9kfGUywLSwbp16zK80jiD
TI/o4IIFCzxBcDN+/PhLlizx/J2bHNZGjRp16NCBdNVjJa0grE+fPuxozZo1
7AubidakcsuWLekd+e+kSZPatWtHNzmssoohql+/fvPmzWXC2LlZvHhx2a+r
hJtMg7Nnz2JJbJ7AKpXqgathw4b2jzFxnRZHCiJBjym57+83DTfx5N988w3u
DpwJHPFyn3766fr16+Hpl19+GR4efvXqVUpkQ2iIoz5//jwb0uyZM2dMm/ZC
lnG/kp7geCHXwYMHaQQc79q1iwCAjA/2sWsoRgmA4D+VgQhUtZtKQpc8eXJJ
68AEFcjygIvHxs2CBQu2aNHi+++/f/nll2UVbMVj4+Tz58+fNWtWQAllKlSo
wKovvvgCUkgdNmQr4IjPl/bbtm3LOLzwwgvTpk3z+OXmM888A/RTp069bt06
zz1uQsPHH39cKvTv35/WWHjkkUc++OADGJ0qVaoyZcowCK+++ipj67GuA5ct
W5a8kvKPP/5YrMqXLx/QJ1IqV64clSksVKgQLdALVsF0+AUlR4wYMXny5MSJ
Ex87dsw/N9OnT8+2mTNnJrQz3KSbdAGgc1xYBbwIohIkSMCxGDBgAM2+//77
DE6aNGmkg/SL3hFjUMLgYG2uXLkoh565c+eeM2dO165dc+TI4fk7N+kXo+Rr
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
beXrOi37Jcx4++23iT34iIV4ez46rlIGtNM+PYxoykwShxIlSmS46WtwIi1u
EjWZ25yM4CaD/4glDk1kIG56z8m9e/dSH2J62wYo7U356amfOennRIgMhZu/
+5AfbtrzTaJHc8GWgwg6CZiVm6p/oqKRm5wanLm0yfLy5ctHjRrFx7/++ivy
nmOX62x2gVqyJNxszZo106RJI/lLixYtqlSpYur45yaJm3itxyzhxPgvO8Jd
kAhINZKUrFmzmhZ8cVOu0969exdytWvXjmWsMo2gLFmykAz+//bOO8qq4o7j
QGSVJjUubekSRIKURQwQKbIUCRBA2F1ACUeELIYSmiwgRWCXIl0wIEWKIQjI
QmQhtIiUUJYiZSG4QWrAsxIRhBdM4uZz7u8w5/rue3ffvi0g/L5/vHPf3Llz
Z+bO/D7zu2VGXu4yZMcr5K/4Ajdv3uRArDQDfthnbhr7PClGTN5EMpmXgnO4
eRgXODe9qtdf4v7CEY4el4NhA8MeHDqvi0VV73CIYcaMGTO8YjZt2hSkpvmR
k5v45s8//zxV3bp16/Dw8AYNGkg4jgkhjFUYgy1cuNDEd89nZrjpUjlwc8mS
Jc7Dnfdp3bnpbJNr1qzBHfaZt8C56dImXTpCWjZz8/rd55tyy8XcsKWKFi1a
BM2vXLliYjpv2Co3VfenspCb4o6Zx5Rnzpzx4qbcZzMikPgQVv4+99xzws3Y
2Fh713bnJrDA+9izZ48zPy7mAmts7mKJ7NxEAwcOxNNk4+mnn2ZgLIGYiAIF
CuDSJicnE5kRvoTjpBAuJRVB3rVr12Jp7VMwOU+6dOnSMmXK2A8UVa5ceejQ
obIdODe9qtdf4v7CjQ4dOtSlSxfcLi8QQ6j3HYJxxh83GjRoUNWqVZ0etymd
1ys61apVo8LleRyOpOGmiHY1depUmor9+xGXfGaGmy6Vw9WUG8hecnKTsZO9
TcbExLhzEy+b+D5fmiUprizX12fO7SV1aZNZxc0g7tO63LCFpIy4MBcGms7J
95SbqvtT6XKTDkIz9tltnXrttddKly6NHWDcS49w5yadgmH2tWvXODXdmW3h
JvaNyO+9996dO3cY4WMwXbiZZr2wAXMZuKZZz0blkaK7ucCU4SjJ7TiZmdO8
T8tGQkICvg/Gn/BRo0aVK1eOPk4mhw0bhpVmDE/pqlevHhUVRQ4ZOdetW7dr
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
UOKxZrUNCwuD0fKg1s7NUaNGNWzYsFu3bvLXuXYJe2UyfCpc/c0gpNxUqR5m
5by/6Y+nYtU/+eQTF256LCZOmzYtPj4e8OFaCkeEm8B36tSp7JIFTdgFNHEb
iQ8mUlJSYNDy5cuJMGXKFFnFw2NNRkpIXFwcu+DplStXoAzpcKC4qAkJCXYn
12NNVA6MSpQoUbVqVVAosBZuolatWpUqVYq9ZgHHvn37FitWrEyZMs2bN4+J
iSGkfPnyXrPpUgQOqVatGlATkLksUCLq3r07kWWb1OrVqyfbEB8awmv561y7
JCkpiWRLliwZEREBncVnVwUu5aZK9TAr559vuty/Xbdu3ebNm925Kfryyy+d
y394rBUunId4fdrJgV5zreNsen1CQiJmzY7blpzngp7+VgNxrk5CHkwI28WL
F3dOG042vJYOyegCJS5yrkKS+Wv90Eq5qVI9zIqNjcUDMlP0Zwk3s1BZRY37
SsnJyfKcUfUjlXBz0KBB9J0FCxbc0x6sUqnusTLPzetZrSwxdCpVFiqjn2ar
VKoHWMpNlSpdKTdVKpWRPvNSqdKVclOlUhkpN1WqdKXcVKlURspNlSpdKTdV
KpURBsHftxUqlcpjfZek3FSpVEapqale3zaqVCq76CDKTZVKZXTr1i1sApZB
vU6Vykt0CoFmlqzwqFKpHhjJbSiVSuVUamoqY8t73UdVKpVKpVKpVCqVSqVS
qVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQqlUqlUqlUKpVKpVKpVCqVSqVSqVQq
lUqlUqlUKpVKpVKpVDmtW7dupaam3uvZMVWq+1Q61blKpbJLpjrXVUJUKqfM
KiE64blKpTISaN5r+6RS3b+ig6Smpt7rnqpSqe4XyW2oe22ZVKr7V3JP5l73
VJVKdb8Ig3CvzZJKdb9LualSqYyUmypVulJuqlQqI+WmSpWulJsqlcoo89z8
85//fD2LJElliaG7V0pOTv7222/vdS5UGdPu3bvd345TbqpUKqOc4eY//vGP
Tz/9lN+McvOLL744fPhwZrJ348YNJ8h8BmZe3bt3X716NRsbNmzYsmWLCSfw
s88+y2hqU6dOHTFiRICRhwwZsm3bNp+75s2bd+rUKfN35syZ165dy2hm3NWl
S5d169YFEvPEiRMvv/yyz11ffvnllClTTAO4ePHi/PnzM5oT2nN4eDgtLZDI
K1asmDZtGhspKSl16tQhAy7JptuVrl69qq/dqlQPpN59990xY8YsXbpU/mY5
N69cuXLgwAEvaL799tuYRH7d0enk5t/+9rcPPvggM9lbuXLlnj17AgnMvEJC
QiT/ADR//vyff/65hLdr144Kz2hq+/bt++tf/xpg5LZt2/7pT3/yuats2bJA
wYwTihQpwmgko5lx19q1a8+cORNIzP3799eoUcPnrtOnT+fKlWvgwIHyl1b0
5JNPZjQnt2/fhrbffPNNIJEZmfTt21e2GzZsaB/qeEm4GR8fT99JSEjw2bPe
e+892mrO9WSVSpVTio6OZmD8r3/9S/5mOTe3bt0KH3ErTAie5pS7Yjs4buJM
wRF4l5iYKH7BkSNH9u7dixH74x//KN4cXuSaNWvkwGPHjmF4Dx06hEPBUAFz
bdK0ByYnJ+/YsUPCDx48mJSUdOHCBezn9u3bly9f/sknn8hHOpzx448/JifE
kchgAufCqyry5s1ruAkCmjRpIocbbpL4yJEju3XrtmDBAjmEOsHrIT6u5cmT
J1+1RK48ltO6atUqiUPBf/Ob34wePfr8+fOSzuDBg/HycB4lHXdukpk333xT
/go3qSuDjI0bN0ol9+7dm8qMjIxcuHAhlUBTwY2lqbDr1q1bM2bMIISqY1ty
9f7771MWqU+5LSAFjIqKonolcSqZElHA9evXewLgZu7cuf/yl794fshNLmuP
Hj0GDRpEu/JYTisImzBhAifauXMn5yLPs2fPlsgxMTGUDv938eLFAwYMoJhc
VtlFFXXt2rVPnz7SYOzcbNSokZzXp4SbNIPLly+TE589S7mpUj2oevnll+1/
s5ybX3311aJFi+bOnYvjmYX+Jpb8nXfewdyBM4EjVm7s2LG7d++GpxMnTkxJ
Sfn6668JkQOhIYaaPHAgyV66dMmkaQ9kG/Mr7gmGF3KdOnWKRMDx0aNHZ82a
hccH+zg1FCMEQPBLZCACVe1ZxaErVKiQuHVgggh4eZTaY+Nm3bp1f/vb365e
vbpWrVqyC7ZisTHytWvXrlChAqCEMi1btmTX+PHjIYXE4UCOAo7YfEm/X79+
1MPPfvazZcuWeVy5Wa5cOaBfrFixXbt2ee5yExo++uijEmHSpEmkxkaePHle
e+01GF20aNEXXniBSvjFL35B3Xqs+8DNmzfHryT8jTfekFzVrFkT6F+8eDEi
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
ffS+1v8BQC6j1Q==
    "], {{0, 253.}, {616., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{616., 253.},
  PlotRange->{{0, 616.}, {0, 253.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.9322520074361773`*^9, 3.932252673205326*^9, 
  3.932254250109688*^9, 3.932296678691287*^9},
 CellLabel->"Out[9]=",
 CellID->1325934041,ExpressionUUID->"d59ffbd0-8f23-4542-88f8-0e29d042ca73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classify a record", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.932251745631837*^9, 3.932251754601475*^9}, {
  3.932252042737541*^9, 3.932252045596477*^9}},
 CellLabel->"In[3]:=",
 CellID->2080236591,ExpressionUUID->"9cf34503-b63c-468e-833d-513dbc2fff11"],

Cell["Classify a record with the ensemble:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932252195727182*^9, 3.932252209035183*^9}},
 CellID->642189380,ExpressionUUID->"0281c936-913e-4572-8286-a8e538786587"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassify", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322519873683453`*^9, 3.932251993123703*^9}, {
  3.932284925004348*^9, 3.932284925476491*^9}},
 CellLabel->"In[1]:=",
 CellID->1179109518,ExpressionUUID->"f5cd1f7b-464f-419e-9834-91bec0f2fd3a"],

Cell[BoxData["\<\"died\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.932252010744104*^9, 3.93225275187262*^9, 3.932284925763503*^9, {
   3.932296678783403*^9, 3.932296681860896*^9}},
 CellLabel->"Out[1]=",
 CellID->707662459,ExpressionUUID->"772dd33d-b3cd-4027-be67-73c09aa0dbc3"]
}, Open  ]],

Cell["\<\
Classify a record using classifier votes and specifying 2 to be the threshold \
for the label \"survived\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932252216059269*^9, 3.932252293752584*^9}},
 CellID->1903151356,ExpressionUUID->"d069ecca-b54a-4af5-ab68-0fc2aed06c6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifyByThreshold", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"\"\<survived\>\"", "->", "2"}], ",", "\"\<Votes\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322519873683453`*^9, 3.93225199553763*^9}, {
  3.932284928163789*^9, 3.932284928604496*^9}},
 CellLabel->"In[2]:=",
 CellID->1591428917,ExpressionUUID->"adc54622-f666-44cd-a263-82bd3f3b1aa5"],

Cell[BoxData["\<\"died\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.932252012037387*^9, 3.93225275340506*^9, 3.932284928848641*^9, {
   3.932296678803782*^9, 3.932296681893279*^9}},
 CellLabel->"Out[2]=",
 CellID->918511327,ExpressionUUID->"73b86484-69fb-48e0-babc-033af59e9290"]
}, Open  ]],

Cell["\<\
Classify a record using the mean of the probabilities given by each \
classifier and a threshold for \"survived\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9322522430135393`*^9, 3.932252250169545*^9}, {
  3.9322523009509487`*^9, 3.93225235421245*^9}},
 CellID->1206417214,ExpressionUUID->"4acd358f-355b-455e-88ee-cfe3e2dfaa46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifyByThreshold", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"\"\<survived\>\"", "->", "0.2"}], ",", 
   "\"\<ProbabilitiesMean\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322519873683453`*^9, 3.9322519975320063`*^9}, {
  3.9322849333301687`*^9, 3.932284933800705*^9}},
 CellLabel->"In[3]:=",
 CellID->993323270,ExpressionUUID->"65438f98-eca0-4ca9-aacc-0fee505b5c1c"],

Cell[BoxData["\<\"survived\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.932252007767128*^9, 3.932252013572966*^9}, 
   3.932252356941534*^9, 3.932252754463614*^9, 3.9322849340699*^9, {
   3.932296678834494*^9, 3.9322966819265003`*^9}},
 CellLabel->"Out[3]=",
 CellID->1307418253,ExpressionUUID->"6b7a2d86-7640-4b14-842d-119ab566d7fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classify a list of records using a threshold", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.932252035586248*^9, 3.932252053311001*^9}},
 CellLabel->"In[4]:=",
 CellID->2030886173,ExpressionUUID->"219bedd5-8cf0-4396-959d-43c1bd6b865f"],

Cell["\<\
Classify a list of records and return \"survived\" if it gets at least two \
votes:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932252065064316*^9, 3.932252067084276*^9}, {
  3.932252366897564*^9, 3.932252375865528*^9}},
 CellID->1352727999,ExpressionUUID->"eda6fc54-06d8-4a40-9617-70dcb29c7c90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifyByThreshold", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "12"}], ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"\"\<survived\>\"", "->", "2"}], ",", "\"\<Votes\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932252077573979*^9, 3.9322520787835913`*^9}},
 CellLabel->"In[1]:=",
 CellID->2141731844,ExpressionUUID->"faba091c-2bee-44ed-b8a1-d85ac4ca0f53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"survived\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"survived\"\>", ",", "\<\"died\"\>", 
   ",", "\<\"survived\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>"}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.932252079303945*^9, 3.932252756311501*^9, {3.932296678876355*^9, 
   3.932296683405673*^9}},
 CellLabel->"Out[1]=",
 CellID->647965539,ExpressionUUID->"2fc1df72-110a-43d2-8ceb-652adebc44ae"]
}, Open  ]],

Cell["\<\
Return \"survived\" if its average probability is at least 0.7:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932252089658725*^9, 3.932252092394145*^9}},
 CellID->1900356925,ExpressionUUID->"110383ee-cb10-40e6-8935-f258594781a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifyByThreshold", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "12"}], ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"\"\<survived\>\"", "->", "0.7"}], ",", 
   "\"\<ProbabilitiesMean\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322520980001507`*^9, 3.932252098931728*^9}},
 CellLabel->"In[2]:=",
 CellID->62996127,ExpressionUUID->"1198c9eb-d566-4611-b709-75eb2bdc7d81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"survived\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"survived\"\>", ",", "\<\"died\"\>", 
   ",", "\<\"survived\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>"}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.9322520995605783`*^9, 3.9322527577423353`*^9, {3.932296678914062*^9, 
   3.93229668344969*^9}},
 CellLabel->"Out[2]=",
 CellID->467240036,ExpressionUUID->"4a848ac5-66d7-41e4-a1c3-4f42f6dbdac2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellLabel->"In[3]:=",
 CellID->964056545,ExpressionUUID->"1f8a040a-4e7b-4133-86f8-a3d4cd860ee4"],

Cell[CellGroupData[{

Cell["Probabilities and votes", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.9322850717596827`*^9, 3.932285077610373*^9}},
 CellLabel->"In[1]:=",
 CellID->822288975,ExpressionUUID->"b2cb24c1-0fe5-4bf6-9b53-6c08471a4d43"],

Cell["Get the probabilities:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932284768929607*^9, 3.9322847787542763`*^9}, 
   3.932284944873214*^9},
 CellID->677641367,ExpressionUUID->"e5eead2b-fb9d-46d7-9df1-77588d76682d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifierProbabilities", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322519873683453`*^9, 3.9322519975320063`*^9}, {
  3.932284703610045*^9, 3.932284754319881*^9}, {3.932284936050729*^9, 
  3.932284936903719*^9}},
 CellLabel->"In[1]:=",
 CellID->2046531863,ExpressionUUID->"a47fad46-8b5f-4a22-acc6-610a07a964ba"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"died\"\>", "\[Rule]", "0.6013251987797223`"}], ",", 
   RowBox[{"\<\"survived\"\>", "\[Rule]", "0.39867480122027776`"}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.9322847546741047`*^9, 3.932284937279015*^9, 
  3.932296685762629*^9},
 CellLabel->"Out[1]=",
 CellID->2027651749,ExpressionUUID->"5740a88c-cfb6-4020-b415-a1ebb327fb8e"]
}, Open  ]],

Cell["Get the votes:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932284768929607*^9, 3.9322847787542763`*^9}, {
  3.932284944873214*^9, 3.932284953444396*^9}},
 CellID->150155850,ExpressionUUID->"b7b9bcbe-0272-475a-a0ea-3420d9d66018"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EnsembleClassifierVotes", "[", 
  RowBox[{"aCLs", ",", 
   RowBox[{"testData", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", 
      RowBox[{"1", ";;", 
       RowBox[{"-", "2"}]}]}], "]"}], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322519873683453`*^9, 3.9322519975320063`*^9}, {
  3.932284703610045*^9, 3.932284754319881*^9}, {3.932284936050729*^9, 
  3.932284958979604*^9}},
 CellLabel->"In[2]:=",
 CellID->376085725,ExpressionUUID->"3f2a4df3-fdd0-48fb-94f5-1066d3feeffc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"died\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"survived\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.9322847546741047`*^9, {3.932284937279015*^9, 3.932284959420641*^9}, 
   3.932296685798316*^9},
 CellLabel->"Out[2]=",
 CellID->324951200,ExpressionUUID->"613a342c-ad95-4808-aed4-d0fc44291862"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifier measurements", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.932296663789784*^9, 3.932296667278883*^9}},
 CellLabel->"In[3]:=",
 CellID->1403222767,ExpressionUUID->"5436ae89-84d0-473c-8080-75d016b114c2"],

Cell["Compute classifier measurements:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.9322965793226213`*^9, 3.9322965868969803`*^9}, {
  3.932296697730775*^9, 3.932296700600655*^9}},
 CellID->706009371,ExpressionUUID->"f428878f-d1c3-4dad-a125-c30ff8d3bcd8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"measures", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", "\"\<Precision\>\"", ",", "\"\<Recall\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EnsembleClassifierMeasurements", "[", 
   RowBox[{"aCLs", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"testData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}], "\[Rule]", 
      RowBox[{"testData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
    "measures"}], "]"}], "//", 
  RowBox[{
   RowBox[{"AssociationThread", "[", 
    RowBox[{"measures", ",", "#"}], "]"}], "&"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.7066572643935966`*^9, 3.706657287592332*^9}, {
  3.706657318429618*^9, 3.706657333931768*^9}, {3.9322967258817463`*^9, 
  3.93229679007598*^9}},
 CellLabel->"In[4]:=",
 CellID->1139785810,ExpressionUUID->"a3c1dfaf-1e41-42c0-846f-0e2bce0c67e6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.8089171974522293`"}], ",", 
   RowBox[{"\<\"Precision\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"died\"\>", "\[Rule]", "0.8173076923076924`"}], ",", 
      RowBox[{"\<\"survived\"\>", "\[Rule]", "0.7924528301886792`"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Recall\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"died\"\>", "\[Rule]", "0.8854166666666666`"}], ",", 
      RowBox[{"\<\"survived\"\>", "\[Rule]", "0.6885245901639344`"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.932296639595319*^9, 3.932296685863949*^9, 
  3.932296757969034*^9, 3.932296790689764*^9},
 CellLabel->"Out[5]=",
 CellID->1377092173,ExpressionUUID->"aa29aa5e-5ce9-452c-ab27-0cc5176d1a4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Threshold classification with ROC", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.932252113667615*^9, 3.932252118787959*^9}},
 CellLabel->"In[2]:=",
 CellID->1974945497,ExpressionUUID->"ee38f3fa-4ca0-42dc-95fc-bd470b9c4a71"],

Cell[TextData[{
 "Compute Receiver Operating Characteristic (ROC) for a range of thresholds \
for the label \"survived\" (using the paclet ",
 ButtonBox["\"ROCFunctions\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"],
 "):"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932252511833583*^9, 3.932252584881721*^9}, 
   3.932253634320396*^9, {3.932288622444438*^9, 3.932288674015827*^9}},
 CellID->392949083,ExpressionUUID->"6b4f17e2-54b1-45b8-8fda-573bb86aba38"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rocRange", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "1", ",", "0.05"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"aROCs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"cres", "=", 
        RowBox[{"EnsembleClassifyByThreshold", "[", 
         RowBox[{"aCLs", ",", 
          RowBox[{"testData", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
          RowBox[{"\"\<survived\>\"", "->", "i"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"ToROCAssociation", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"AntonAntonov/ROCFunctions\"", ",", 
                "\"AntonAntonov`ROCFunctions`ToROCAssociation\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "AntonAntonov/ROCFunctions", 
               "AntonAntonov`ROCFunctions`ToROCAssociation"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "AntonAntonov/ROCFunctions", 
          "AntonAntonov`ROCFunctions`ToROCAssociation"],
         TaggingRules -> {
          "Paclet" -> "AntonAntonov/ROCFunctions", "Symbol" -> 
           "AntonAntonov`ROCFunctions`ToROCAssociation"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<survived\>\"", ",", "\"\<died\>\""}], "}"}], ",", 
         RowBox[{"testData", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "cres"}], "]"}]}], ")"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "rocRange"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  InterpretationBox[
   FrameBox[
    TagBox[
     TooltipBox[
      PaneBox[GridBox[{
         {
          ItemBox[
           GraphicsBox[
            {Thickness[0.0025], 
             {FaceForm[{RGBColor[
              0.9607843137254902, 0.5058823529411764, 0.19607843137254902`], 
              Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                22.863691329956055`}, {205., 212.31669425964355`}, {
                246.01799774169922`, 235.99870109558105`}, {369.0710144042969,
                 307.0436840057373}, {369.0710144042969, 
                117.59068870544434`}, {205., 22.863691329956055`}}, {{
                30.928985595703125`, 307.0436840057373}, {153.98200225830078`,
                 235.99870109558105`}, {195., 212.31669425964355`}, {195., 
                22.863691329956055`}, {30.928985595703125`, 
                117.59068870544434`}, {30.928985595703125`, 
                307.0436840057373}}, {{200., 410.42970085144043`}, {
                364.0710144042969, 315.7036876678467}, {241.01799774169922`, 
                244.65868949890137`}, {200., 220.97669792175293`}, {
                158.98200225830078`, 244.65868949890137`}, {
                35.928985595703125`, 315.7036876678467}, {200., 
                410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                "]}]}, 
             {FaceForm[{RGBColor[
              0.5529411764705883, 0.6745098039215687, 0.8117647058823529], 
              Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}}}, {{{44.92900085449219, 282.59088134765625`}, {
               181.00001525878906`, 204.0298843383789}, {181.00001525878906`, 
               46.90887451171875}, {44.92900085449219, 125.46986389160156`}, {
               44.92900085449219, 282.59088134765625`}}}]}, 
             {FaceForm[{RGBColor[
              0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
              Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}}}, {{{355.0710144042969, 282.59088134765625`}, {
               355.0710144042969, 125.46986389160156`}, {219., 
               46.90887451171875}, {219., 204.0298843383789}, {
               355.0710144042969, 282.59088134765625`}}}]}, 
             {FaceForm[{RGBColor[
              0.6901960784313725, 0.5882352941176471, 0.8117647058823529], 
              Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
               315.4997024536133}, {200., 236.93968200683594`}, {
               63.928985595703125`, 315.4997024536133}, {200., 
               394.0606994628906}}}]}},
            BaselinePosition->Scaled[0.15],
            ImageSize->10]], 
          ItemBox[
           StyleBox[
            RowBox[{"ROCPlot", " "}],
            ShowAutoStyles->False,
            ShowStringCharacters->False,
            FontSize->0.9 Inherited,
            FontColor->GrayLevel[0.1]]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->{Left, Baseline},
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      RowBox[{"PacletSymbol", "[", 
        RowBox[{
         "\"AntonAntonov/ROCFunctions\"", ",", 
          "\"AntonAntonov`ROCFunctions`ROCPlot\""}], "]"}],
      TooltipStyle->{ShowAutoStyles -> True, ShowStringCharacters -> True}],
     Annotation[#, 
      Style[
       Defer[
        PacletSymbol[
        "AntonAntonov/ROCFunctions", "AntonAntonov`ROCFunctions`ROCPlot"]], 
       ShowStringCharacters -> True], "Tooltip"]& ],
    Background->RGBColor[0.968, 0.976, 0.984],
    BaselinePosition->Baseline,
    DefaultBaseStyle->{},
    FrameMargins->{{0, 0}, {1, 1}},
    FrameStyle->RGBColor[0.831, 0.847, 0.85],
    RoundingRadius->4],
   PacletSymbol[
   "AntonAntonov/ROCFunctions", "AntonAntonov`ROCFunctions`ROCPlot"],
   TaggingRules -> {
    "Paclet" -> "AntonAntonov/ROCFunctions", "Symbol" -> 
     "AntonAntonov`ROCFunctions`ROCPlot"},
   BoxID -> "PacletSymbolBox",
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"rocRange", ",", "aROCs", ",", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932252403396356*^9, 3.932252447091559*^9}, {
   3.932252498459427*^9, 3.932252508298195*^9}, {3.932288617273859*^9, 
   3.932288619453994*^9}, 3.932288813747892*^9, 3.9322888663551397`*^9},
 CellLabel->"In[1]:=",
 CellID->827513197,ExpressionUUID->"eb7c47c2-b3ea-482b-a92f-2c17eb9a953b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
     NCache[
      Rational[5, 9], 0.5555555555555556], 
     NCache[
      Rational[5, 9], 0.5555555555555556], 1], 
    LineBox[NCache[{{1, 1}, {1, 1}, {1, Rational[121, 122]}, {
       Rational[45, 64], Rational[59, 61]}, {
       Rational[59, 192], Rational[105, 122]}, {
       Rational[7, 24], Rational[52, 61]}, {
       Rational[25, 96], Rational[99, 122]}, {
       Rational[41, 192], Rational[95, 122]}, {
       Rational[35, 192], Rational[89, 122]}, {
       Rational[31, 192], Rational[87, 122]}, {
       Rational[11, 96], Rational[42, 61]}, {
       Rational[19, 192], Rational[79, 122]}, {
       Rational[5, 64], Rational[73, 122]}, {
       Rational[1, 48], Rational[32, 61]}, {
       Rational[1, 48], Rational[63, 122]}, {
       Rational[1, 48], Rational[30, 61]}, {
       Rational[1, 48], Rational[24, 61]}, {
       Rational[1, 64], Rational[19, 61]}, {
       Rational[1, 96], Rational[5, 61]}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {
       1, 0.9918032786885246}, {0.703125, 0.9672131147540983}, {
       0.3072916666666667, 0.860655737704918}, {0.2916666666666667, 
       0.8524590163934426}, {0.2604166666666667, 0.8114754098360656}, {
       0.21354166666666666`, 0.7786885245901639}, {0.18229166666666666`, 
       0.7295081967213115}, {0.16145833333333334`, 0.7131147540983607}, {
       0.11458333333333333`, 0.6885245901639344}, {0.09895833333333333, 
       0.6475409836065574}, {0.078125, 0.5983606557377049}, {
       0.020833333333333332`, 0.5245901639344263}, {0.020833333333333332`, 
       0.5163934426229508}, {0.020833333333333332`, 0.4918032786885246}, {
       0.020833333333333332`, 0.39344262295081966`}, {0.015625, 
       0.3114754098360656}, {0.010416666666666666`, 0.08196721311475409}, {0, 
       0}, {0, 0}}]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
    LineBox[NCache[{{1, 1}, {1, 1}, {1, Rational[121, 122]}, {
       Rational[45, 64], Rational[59, 61]}, {
       Rational[59, 192], Rational[105, 122]}, {
       Rational[7, 24], Rational[52, 61]}, {
       Rational[25, 96], Rational[99, 122]}, {
       Rational[41, 192], Rational[95, 122]}, {
       Rational[35, 192], Rational[89, 122]}, {
       Rational[31, 192], Rational[87, 122]}, {
       Rational[11, 96], Rational[42, 61]}, {
       Rational[19, 192], Rational[79, 122]}, {
       Rational[5, 64], Rational[73, 122]}, {
       Rational[1, 48], Rational[32, 61]}, {
       Rational[1, 48], Rational[63, 122]}, {
       Rational[1, 48], Rational[30, 61]}, {
       Rational[1, 48], Rational[24, 61]}, {
       Rational[1, 64], Rational[19, 61]}, {
       Rational[1, 96], Rational[5, 61]}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {
       1, 0.9918032786885246}, {0.703125, 0.9672131147540983}, {
       0.3072916666666667, 0.860655737704918}, {0.2916666666666667, 
       0.8524590163934426}, {0.2604166666666667, 0.8114754098360656}, {
       0.21354166666666666`, 0.7786885245901639}, {0.18229166666666666`, 
       0.7295081967213115}, {0.16145833333333334`, 0.7131147540983607}, {
       0.11458333333333333`, 0.6885245901639344}, {0.09895833333333333, 
       0.6475409836065574}, {0.078125, 0.5983606557377049}, {
       0.020833333333333332`, 0.5245901639344263}, {0.020833333333333332`, 
       0.5163934426229508}, {0.020833333333333332`, 0.4918032786885246}, {
       0.020833333333333332`, 0.39344262295081966`}, {0.015625, 
       0.3114754098360656}, {0.010416666666666666`, 0.08196721311475409}, {0, 
       0}, {0, 0}}]], {
     TagBox[
      TooltipBox[PointBox[{1, 1}],
       "0.`"],
      Annotation[#, 0., "Tooltip"]& ], 
     TagBox[
      TooltipBox[PointBox[{1, 1}],
       "0.05`"],
      Annotation[#, 0.05, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[NCache[{1, Rational[121, 122]}, {1, 0.9918032786885246}]],
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[45, 64], Rational[59, 61]}, {0.703125, 
         0.9672131147540983}]],
       "0.15000000000000002`"],
      Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[59, 192], Rational[105, 122]}, {0.3072916666666667, 
         0.860655737704918}]],
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[7, 24], Rational[52, 61]}, {0.2916666666666667, 
         0.8524590163934426}]],
       "0.25`"],
      Annotation[#, 0.25, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[25, 96], Rational[99, 122]}, {0.2604166666666667, 
         0.8114754098360656}]],
       "0.30000000000000004`"],
      Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[41, 192], Rational[95, 122]}, {0.21354166666666666`, 
         0.7786885245901639}]],
       "0.35000000000000003`"],
      Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[35, 192], Rational[89, 122]}, {0.18229166666666666`, 
         0.7295081967213115}]],
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[31, 192], Rational[87, 122]}, {0.16145833333333334`, 
         0.7131147540983607}]],
       "0.45`"],
      Annotation[#, 0.45, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[11, 96], Rational[42, 61]}, {0.11458333333333333`, 
         0.6885245901639344}]],
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[19, 192], Rational[79, 122]}, {0.09895833333333333, 
         0.6475409836065574}]],
       "0.55`"],
      Annotation[#, 0.55, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[5, 64], Rational[73, 122]}, {0.078125, 
         0.5983606557377049}]],
       "0.6000000000000001`"],
      Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 48], Rational[32, 61]}, {0.020833333333333332`, 
         0.5245901639344263}]],
       "0.65`"],
      Annotation[#, 0.65, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 48], Rational[63, 122]}, {0.020833333333333332`, 
         0.5163934426229508}]],
       "0.7000000000000001`"],
      Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 48], Rational[30, 61]}, {0.020833333333333332`, 
         0.4918032786885246}]],
       "0.75`"],
      Annotation[#, 0.75, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 48], Rational[24, 61]}, {0.020833333333333332`, 
         0.39344262295081966`}]],
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 64], Rational[19, 61]}, {0.015625, 
         0.3114754098360656}]],
       "0.8500000000000001`"],
      Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       PointBox[
        NCache[{Rational[1, 96], Rational[5, 61]}, {0.010416666666666666`, 
         0.08196721311475409}]],
       "0.9`"],
      Annotation[#, 0.9, "Tooltip"]& ], 
     TagBox[
      TooltipBox[PointBox[{0, 0}],
       "0.9500000000000001`"],
      Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
     TagBox[
      TooltipBox[PointBox[{0, 0}],
       "1.`"],
      Annotation[#, 1., "Tooltip"]& ]}, 
    {GrayLevel[0], 
     InsetBox["0.`", {1, 1}, NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.05`", {1, 1}, NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.1`", 
      NCache[{1, Rational[121, 122]}, {1, 0.9918032786885246}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.15000000000000002`", 
      NCache[{Rational[45, 64], Rational[59, 61]}, {0.703125, 
       0.9672131147540983}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.2`", 
      NCache[{Rational[59, 192], Rational[105, 122]}, {0.3072916666666667, 
       0.860655737704918}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.25`", 
      NCache[{Rational[7, 24], Rational[52, 61]}, {0.2916666666666667, 
       0.8524590163934426}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.30000000000000004`", 
      NCache[{Rational[25, 96], Rational[99, 122]}, {0.2604166666666667, 
       0.8114754098360656}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.35000000000000003`", 
      NCache[{Rational[41, 192], Rational[95, 122]}, {0.21354166666666666`, 
       0.7786885245901639}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.4`", 
      NCache[{Rational[35, 192], Rational[89, 122]}, {0.18229166666666666`, 
       0.7295081967213115}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.45`", 
      NCache[{Rational[31, 192], Rational[87, 122]}, {0.16145833333333334`, 
       0.7131147540983607}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.5`", 
      NCache[{Rational[11, 96], Rational[42, 61]}, {0.11458333333333333`, 
       0.6885245901639344}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.55`", 
      NCache[{Rational[19, 192], Rational[79, 122]}, {0.09895833333333333, 
       0.6475409836065574}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.6000000000000001`", 
      NCache[{Rational[5, 64], Rational[73, 122]}, {0.078125, 
       0.5983606557377049}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.65`", 
      NCache[{Rational[1, 48], Rational[32, 61]}, {0.020833333333333332`, 
       0.5245901639344263}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.7000000000000001`", 
      NCache[{Rational[1, 48], Rational[63, 122]}, {0.020833333333333332`, 
       0.5163934426229508}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.75`", 
      NCache[{Rational[1, 48], Rational[30, 61]}, {0.020833333333333332`, 
       0.4918032786885246}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.8`", 
      NCache[{Rational[1, 48], Rational[24, 61]}, {0.020833333333333332`, 
       0.39344262295081966`}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.8500000000000001`", 
      NCache[{Rational[1, 64], Rational[19, 61]}, {0.015625, 
       0.3114754098360656}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.9`", 
      NCache[{Rational[1, 96], Rational[5, 61]}, {0.010416666666666666`, 
       0.08196721311475409}], NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["0.9500000000000001`", {0, 0}, NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]], 
     InsetBox["1.`", {0, 0}, NCache[
      ImageScaled[{0, Rational[3, 2]}], ImageScaled[{0, 1.5}]]]}}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox[
     "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
     TraditionalForm]},
  GridLines->Automatic]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.9322524502834797`*^9, 3.932252503159837*^9}, 
   3.932252587546484*^9, 3.932252760079071*^9, 3.9322888148582687`*^9, 
   3.932288867631485*^9, 3.932296686760817*^9},
 CellLabel->"Out[3]=",
 CellID->220047586,ExpressionUUID->"201e05d5-12f5-4fff-8a7b-af616b13b136"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.9322873287769003`*^9, 3.9322873307568274`*^9}},
 CellLabel->"In[4]:=",
 CellID->715316130,ExpressionUUID->"e88c19ff-bbc4-44b4-b116-48de117790bf"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["EnsembleClassifier",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/ClassifierEnsembles/ref/EnsembleClassifier"]], 
  "InlineFormula",ExpressionUUID->"afb598e6-8ad9-46a0-965d-63003c1db3b3"],
 " can take data arguments that ",
 Cell[BoxData[
  ButtonBox["Classify",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "71b0fca0-ef38-4036-8b02-7d43b48bd81a"],
 " can take. Here is a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Dataset", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Dataset",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3c87b010-8963-40ce-b3d8-dc8e889b1491"],
 " object for the built-in Titanic data:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932287705326449*^9, 3.932287728974532*^9}, {
  3.932287760867085*^9, 3.932287808057045*^9}, {3.9322944016854877`*^9, 
  3.93229440992841*^9}},
 CellID->2001238632,ExpressionUUID->"6076286b-a4e1-4d6a-a517-ea4d5915940f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dsTitanic", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ExampleDataset\>\"", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322873362484083`*^9, 3.932287507270236*^9}, 
   3.932287731475258*^9},
 CellLabel->"In[1]:=",
 CellID->1125814679,ExpressionUUID->"7b67fab1-b6ad-4a5e-bea0-8d29bac300f8"],

Cell[TextData[{
 "Here we split that ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Dataset", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Dataset",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "287d5494-13d6-49e7-96bd-68b846893d10"],
 " object into two (training and testing):"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9322877332570047`*^9, 3.93228775720273*^9}, 
   3.93229441670634*^9},
 CellID->1102341191,ExpressionUUID->"fbfda7e5-a008-4b39-93f2-49d25b43a054"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dsTraining", ",", "dsTesting"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", "dsTitanic", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "dsTitanic", "]"}], "*", "0.8"}], "//", 
      "Floor"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "/@", 
  RowBox[{"{", 
   RowBox[{"dsTraining", ",", "dsTesting"}], "}"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9322873362484083`*^9, 3.932287507270236*^9}, 
   3.932287731475258*^9},
 CellLabel->"In[2]:=",
 CellID->898142531,ExpressionUUID->"dfbf14b8-4a3d-409c-95af-492a145df4ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {
         StyleBox["\<\"1 passenger class\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"3rd\"\>", "560"},
            {"\<\"1st\"\>", "265"},
            {"\<\"2nd\"\>", "222"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"2 passenger age\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"Min\"\>", "0.1667`"},
            {"\<\"1st Qu\"\>", "21.`"},
            {"\<\"Median\"\>", "28.`"},
            {"\<\"Mean\"\>", "29.967040613931523`"},
            {"\<\"3rd Qu\"\>", "39.`"},
            {"\<\"Max\"\>", "76.`"},
            {"\<\"Missing[___]\"\>", "200"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"3 passenger sex\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"male\"\>", "670"},
            {"\<\"female\"\>", "377"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"4 passenger survival\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"died\"\>", "649"},
            {"\<\"survived\"\>", "398"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {
         StyleBox["\<\"1 passenger class\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"3rd\"\>", "149"},
            {"\<\"1st\"\>", "58"},
            {"\<\"2nd\"\>", "55"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"2 passenger age\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"Min\"\>", "0.75`"},
            {"\<\"1st Qu\"\>", "21.25`"},
            {"\<\"Median\"\>", "28.`"},
            {"\<\"Mean\"\>", "29.51549396984925`"},
            {"\<\"3rd Qu\"\>", "36.875`"},
            {"\<\"Max\"\>", "80.`"},
            {"\<\"Missing[___]\"\>", "63"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"3 passenger sex\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"male\"\>", "173"},
            {"\<\"female\"\>", "89"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], ",", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"4 passenger survival\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"died\"\>", "160"},
            {"\<\"survived\"\>", "102"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.932287362797957*^9, {3.9322874327988377`*^9, 3.9322875097931643`*^9}, 
   3.9322966868800793`*^9},
 CellLabel->"Out[3]=",
 CellID->372937768,ExpressionUUID->"8811e824-4fd4-41e4-86de-7aba1a1445a6"]
}, Open  ]],

Cell["\<\
Here we make a classifier ensemble with the training dataset:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.93228799120549*^9, 3.932288010793385*^9}},
 CellID->1805020569,ExpressionUUID->"7820c2b8-0b51-4524-afdb-8467233ee84d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aCLs2", "=", 
  RowBox[{"EnsembleClassifier", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LogisticRegression\>\"", ",", "\"\<RandomForest\>\""}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"dsTraining", "[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", 
        RowBox[{"-", "2"}]}]}], "]"}], "->", 
     RowBox[{"dsTraining", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.932287584331657*^9, {3.932287663150869*^9, 3.932287694900879*^9}, 
   3.932288013098558*^9},
 CellLabel->"In[4]:=",
 CellID->693071955,ExpressionUUID->"e133fde5-46d6-421d-8db1-0d3198e80ecf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"LogisticRegression\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ClassifierFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1047", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ClassifierFunction[<|
      "ExampleNumber" -> 1047, "ClassNumber" -> 2, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "passenger class" -> <|"Type" -> "Nominal"|>, 
              "passenger age" -> <|"Type" -> "Numerical"|>, 
              "passenger sex" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["FromDataset"], 
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|
                  "FeatureNames" -> {
                    "passenger class", "passenger age", "passenger sex"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 3|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal", "Numerical", "Nominal"}, 
                   "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                   Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|
             "(f2(f1f3))" -> <|
               "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                "NumericalVector"|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 1047, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 9153322266525338993|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    5012684870820858898|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                    
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14.1, 0}, "ID" -> 
                    8164567873087376931, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {29.967040613931523`}, 
                    "StandardDeviation" -> {14.547378264082546`}, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 6281077921715581987|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2, 
                    "SetSize" -> {3, 2}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, 0., 0.5}}, 
                    "Version" -> {14.1, 0}, "ID" -> 4040756577587028706, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14.1, 0}, "ID" -> 4097015177937765665|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{0.992568806198253, 
                    0.06976379354581298, -0.09970044168544065}, \
{-0.12041382840186221`, 0.6812182818851882, -0.7221095224098621}, {
                    0.017540663949282987`, 0.7287486984794479, 
                    0.6845565422758947}}, 
                    "Precisions" -> {1.0125217041190153`, 10.782575124281477`,
                     14.11314848493226}, "NoisePrecision" -> None, 
                    "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.000302442760580061, 0.09663111642622912, 
                    0.07351200712190363}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5749788936666488368|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>,
                     "Key" -> "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 3, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.0003024427605800791, 0.0966311164262291, 
                    0.07351200712190366}, 
                    "StandardDeviation" -> {1.0002510389377695`, 
                    0.297050845283811, 0.28112401438931556`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.0003024427605800791, 0.0966311164262291, 
                    0.07351200712190366}, 
                    "StandardDeviation" -> {1.0002510389377695`, 
                    0.297050845283811, 0.28112401438931556`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 3, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"3rd"}, 
                    "ID" -> 2820061166673240318|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {29.}, 
                    "ID" -> 5984120664415143611|>, 
                    "f3" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"male"}, 
                    "ID" -> 3531176003411932431|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.096657, "MaxTrainingMemory" -> 
                    2195024, "DataMemory" -> 122784, "FunctionMemory" -> 
                    63480, "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{
                    2024, 8, 10, 12, 38, 6.999768`7.597658633539189}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
                    "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX",
                     "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.8084204275384916`, \
-2.8084204275384916`, -2.393074489711375, -2.361243211101599, \
-1.834295683803983, -1.811773298554543, -1.7911443660394937`, \
-1.7183282569178795`, -1.6641772966497301`, -1.6604193655307975`, \
-1.6504199165544855`}, "LeftBoundary" -> -2.393074489711375, "LeftScale" -> 
                    0.20767296891355835`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[5.907988893720713, 0.38279055276437224`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14.1, 0},
                 "ID" -> 616651398117295976|>], 
              MachineLearning`MLProcessor[
              "Threads", <|
               "Input" -> <|
                 "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                  "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                "Processors" -> {
                  MachineLearning`MLProcessor[
                  "ToVector", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5896072734193971629|>], 
                  MachineLearning`MLProcessor[
                  "ToVector", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 4638787354345331223|>]}, 
                "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
                "Missing" -> "Allowed"|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {29.632626319255618`}, 
                "StandardDeviation" -> {13.263512592408036`}, 
                "Output" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 7791071911106811572|>], 
              MachineLearning`MLProcessor[
              "EmbedNominalVector", <|
               "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                  "female" -> 1, "male" -> 2|>}, 
                "Output" -> <|
                 "(f1f3)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>,
                 "EmbeddingVectors" -> {
                 RawArray["Real32",{{0., 0., 
                   0.}, {-1.092864751815796, -0.03315090760588646, 
                   0.7799522876739502}, {0.08401107043027878, 
                   0.34243735671043396`, -0.027810050174593925`}, {
                   0.34496811032295227`, -0.42609575390815735`, 
                   0.3111177980899811}}], 
                  RawArray["Real32",{{0., 
                   0.}, {-0.793231725692749, -0.7061249613761902}, {
                   0.4900933504104614, -0.4402417540550232}}]}, 
                "Version" -> {14.1, 0}, "ID" -> 5988483279055413579|>], 
              MachineLearning`MLProcessor[
              "MergeVectors", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                  "(f1f3)" -> <|
                   "Weight" -> 2, "Type" -> "NumericalVector"|>|>, "Spans" -> {
                  Span[1, 1], 
                  Span[2, 6]}, "Wrappers" -> {Identity, Identity}, 
                "Output" -> <|
                 "(f2(f1f3))" -> <|
                   "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {14.1, 0}, "ID" -> 
                7619735631186802745|>]}, "Invertibility" -> "Impossible", 
            "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                 "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 3322105963810171158|>], 
              MachineLearning`MLProcessor[
              "IntegerEncodeNominalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Index" -> {<|"died" -> 1, "survived" -> 2|>}, "MissingCode" -> 
                0, "Version" -> {14.1, 0}, "ID" -> 203770477002322670, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 4310720165342363674|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", 
         "Marginal" -> <|
          "died" -> 0.6196377502383222, "survived" -> 
           0.38036224976167776`|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "LogProbabilitiesFunction" -> 
         LinearLayer[<|
           "Type" -> "Linear", 
            "Arrays" -> <|
             "Weights" -> 
              RawArray["Real32",{{0.5619998574256897, 
                1.410262107849121, -0.8860198259353638, \
-0.017693107947707176`, 1.9817041158676147`, 0.07418736815452576}}], "Biases" -> 
              RawArray["Real32",{0.6208721399307251}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 6,
               "$InputDimensions" -> {6}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{6}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "14.1.1", "Unstable" -> False|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|
             "Weight" -> {0.3333333333333333, 0.9444444444444444, 
               0.34444444444444444`, 0.34444444444444444`, 
               0.34444444444444444`, 0.34444444444444444`, 
               0.34444444444444444`}, "Type" -> "NumericalVector"|>, "Key" -> 
            "(f2(f1f3))", "Invertibility" -> "Perfect", "StructurePreserving" -> 
            False, "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "LogisticRegression", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 1., "Options" -> <||>|>, 
           "OptimizationMethod" -> <|"Value" -> "LBFGS", "Options" -> <||>|>, 
           MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
         "PreprocessingTime" -> 0.203325`5.759735774468161, "LossName" -> 
         "MeanCrossEntropy", "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[0.4830229389249264, 0.020770115563912145`], "Accuracy" -> 
            Around[0.7941719596059575, 0.009766306650287054], 
            "EvaluationTime" -> 2.664526205059907*^-6, "TestSize" -> 847., 
            "ModelMemory" -> 8968., "ModelUtility" -> 0.025977566574610145`, 
            "Round" -> 3, "Iteration" -> 37, 
            "Time" -> {1.15906`6.515650911767119, 1.192735`6.528088957013931},
             "TrainingSize" -> 200, "TrainingTime" -> 0.015848931924611134`, 
            "TrainingMemory" -> 106573.33333333333`, "ExperimentCount" -> 2, 
            "MeanCrossEntropyHistory" -> {
              Around[0.470249282652853, 0.022047047846431887`], 
              Around[0.4957965951969999, 0.024464454339155214`]}, 
            "AccuracyHistory" -> {
              Around[0.794481965498795, 0.01381336645606386], 
              Around[0.79386195371312, 0.013796016704592387`]}, 
            "IterationHistory" -> {16, 37}, 
            "TimeHistory" -> {{
              0.503676`6.1536962508538045, 0.525656`6.172246619445467}, {
              1.15906`6.515650911767119, 1.192735`6.528088957013931}}, 
            "Configuration" -> {
             "LogisticRegression", "L1Regularization" -> 0, 
              "L2Regularization" -> 1., "OptimizationMethod" -> Automatic, 
              MaxIterations -> 30}, "FinalTrainingSize" -> 1047|>, 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
         "Configurations" -> 
         Dataset[<|<|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.00001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.2083652626425436`, 0.10137093224040408`], 
                 "Accuracy" -> 
                 Around[0.6921180611394322, 0.020109783160485777`], 
                 "EvaluationTime" -> 2.6773884145345685`*^-6, "TestSize" -> 
                 1037, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.8990577018110607, "Round" -> 1, 
                 "Iteration" -> 1, 
                 "Time" -> {
                  0.287395`5.91002420165292, 0.314928`5.949756268628862}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
                 "TrainingMemory" -> 77600, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.2083652626425436`, 0.07168007360239174]}, 
                 "AccuracyHistory" -> {
                   Around[0.6921180611394322, 0.014219764040970534`]}, 
                 "IterationHistory" -> {1}, 
                 "TimeHistory" -> {{
                   0.287395`5.91002420165292, 
                    0.314928`5.949756268628862}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5086950659379935, 0.0440389795016909], "Accuracy" -> 
                 Around[0.7646919816266986, 0.021111918646096534`], 
                 "EvaluationTime" -> 2.4473084169419924`*^-6, "TestSize" -> 
                 800, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.0344100596350424, "Round" -> 2, 
                 "Iteration" -> 21, 
                 "Time" -> {
                  0.590133`6.222494894386766, 0.609383`6.236435328008205}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 82080, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.5086950659379935, 0.031140261042181]}, 
                 "AccuracyHistory" -> {
                   Around[0.7646919816266986, 0.014928380838513573`]}, 
                 "IterationHistory" -> {21}, 
                 "TimeHistory" -> {{
                   0.590133`6.222494894386766, 
                    0.609383`6.236435328008205}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4780617565520091, 0.034355289019617985`], 
                 "Accuracy" -> 
                 Around[0.7928149690983174, 0.019628107875562798`], 
                 "EvaluationTime" -> 1.6363889746004127`*^-6, "TestSize" -> 
                 847, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.030594642181941745`, "Round" -> 3, "Iteration" -> 35, 
                 "Time" -> {
                  1.114262`6.49853231339641, 1.133438`6.50594276233936}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 106568, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4780617565520091, 0.02429285783539561]}, 
                 "AccuracyHistory" -> {
                   Around[0.7928149690983174, 0.013879168180671532`]}, 
                 "IterationHistory" -> {35}, 
                 "TimeHistory" -> {{
                   1.114262`6.49853231339641, 1.133438`6.50594276233936}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1.6363889746004127`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.4780617565520091, 0.034355289019617985`], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 106568, 
                "TrainingTime" -> 0.10292178177502807`|>, "Index" -> 1|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.*^6|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6928451583118417, 0.0015507017782732837`], 
                 "Accuracy" -> 
                 Around[0.6532069658972791, 0.021096042206434244`], 
                 "EvaluationTime" -> 2.5769255543754596`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3266490748034401, "Round" -> 1, 
                 "Iteration" -> 2, 
                 "Time" -> {
                  0.315982`5.951207337116507, 0.326504`5.965433499680684}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.003981071705534969,
                  "TrainingMemory" -> 68672, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6928451583118417, 0.0010965117430150769`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6532069658972791, 0.014917154500367269`]}, 
                 "IterationHistory" -> {2}, 
                 "TimeHistory" -> {{
                   0.315982`5.951207337116507, 
                    0.326504`5.965433499680684}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6928434927805627, 0.002831180002965938], "Accuracy" -> 
                 Around[0.5793956912133474, 0.040200656415247615`], 
                 "EvaluationTime" -> 2.3396783926626794`*^-6, "TestSize" -> 
                 300, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.32701606798010185`, "Round" -> 2, 
                 "Iteration" -> 7, 
                 "Time" -> {
                  0.391755`6.044559541606743, 0.399131`6.052660453693162}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 73408, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6928434927805627, 0.002001946578856964]}, 
                 "AccuracyHistory" -> {
                   Around[0.5793956912133474, 0.02842615675937207]}, 
                 "IterationHistory" -> {7}, 
                 "TimeHistory" -> {{
                   0.391755`6.044559541606743, 
                    0.399131`6.052660453693162}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6928171856468316, 0.0017104846290111196`], 
                 "Accuracy" -> 
                 Around[0.6325272812423274, 0.023130741200711246`], 
                 "EvaluationTime" -> 2.54707551954012*^-6, "TestSize" -> 847, 
                 "ModelMemory" -> 8968, "ModelUtility" -> -0.3266548222499439,
                  "Round" -> 3, "Iteration" -> 18, 
                 "Time" -> {
                  0.546988`6.189522792240833, 0.557229`6.197578703926002}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.005011872336272719, "TrainingMemory" -> 98080, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.6928171856468316, 0.0012094952802891186`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6325272812423274, 0.016355903956893986`]}, 
                 "IterationHistory" -> {18}, 
                 "TimeHistory" -> {{
                   0.546988`6.189522792240833, 
                    0.557229`6.197578703926002}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6928176798366421, 0.0033258936844279456`], 
                 "Accuracy" -> 
                 Around[0.5641326727582946, 0.04838893236334646], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.32712152652464255`, "Round" -> 4, 
                 "Iteration" -> 39, 
                 "Time" -> {
                  1.227439`6.540544911707134, 1.235964`6.543550814710714}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.00630957344480193,
                  "TrainingMemory" -> 278960, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6928176798366421, 0.0023517619777645117`]}, 
                 "AccuracyHistory" -> {
                   Around[0.5641326727582946, 0.03421614220849947]}, 
                 "IterationHistory" -> {39}, 
                 "TimeHistory" -> {{
                   1.227439`6.540544911707134, 
                    1.235964`6.543550814710714}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.6928176798366421, 0.0033258936844279456`], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278960, 
                "TrainingTime" -> 0.011864273849577476`|>, "Index" -> 2|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.01|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.7326084049467212, 0.04129072313051781], "Accuracy" -> 
                 Around[0.6889641649835134, 0.02053514355476277], 
                 "EvaluationTime" -> 2.5118864315095793`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.39321551848661296`, "Round" -> 1, 
                 "Iteration" -> 5, 
                 "Time" -> {
                  0.357622`6.004969221138623, 0.377652`6.028636782507088}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 77880, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.7326084049467212, 0.029196950325685374`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6889641649835134, 0.014520539260211978`]}, 
                 "IterationHistory" -> {5}, 
                 "TimeHistory" -> {{
                   0.357622`6.004969221138623, 
                    0.377652`6.028636782507088}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5072173372350549, 0.04363800088430409], "Accuracy" -> 
                 Around[0.7646919816266986, 0.021111918646096534`], 
                 "EvaluationTime" -> 2.5118864315095797`*^-6, "TestSize" -> 
                 800, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.03139505379858187, "Round" -> 2, 
                 "Iteration" -> 17, 
                 "Time" -> {
                  0.526722`6.173126451741558, 0.545963`6.188708204991346}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 81904, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.5072173372350549, 0.030856726342715978`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7646919816266986, 0.014928380838513573`]}, 
                 "IterationHistory" -> {17}, 
                 "TimeHistory" -> {{
                   0.526722`6.173126451741558, 
                    0.545963`6.188708204991346}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4780018320073817, 0.034324846808745334`], 
                 "Accuracy" -> 
                 Around[0.7928149690983174, 0.019628107875562798`], 
                 "EvaluationTime" -> 1.6363889746004129`*^-6, "TestSize" -> 
                 847, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.030730779556783938`, "Round" -> 3, "Iteration" -> 32, 
                 "Time" -> {
                  1.059903`6.476811114900035, 1.07953`6.48477970932178}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 106616, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4780018320073817, 0.02427133194165325]}, 
                 "AccuracyHistory" -> {
                   Around[0.7928149690983174, 0.013879168180671532`]}, 
                 "IterationHistory" -> {32}, 
                 "TimeHistory" -> {{
                   1.059903`6.476811114900035, 1.07953`6.48477970932178}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.592594801365651, 0.07537143009660596], "Accuracy" -> 
                 Around[0.7632208616639037, 0.04148372374623602], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.19502547397604686`, "Round" -> 4, 
                 "Iteration" -> 44, 
                 "Time" -> {
                  1.320458`6.572269585590735, 1.342435`6.579438260065159}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278784, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.592594801365651, 0.05329564932903791]}, 
                 "AccuracyHistory" -> {
                   Around[0.7632208616639037, 0.029333422369832895`]}, 
                 "IterationHistory" -> {44}, 
                 "TimeHistory" -> {{
                   1.320458`6.572269585590735, 
                    1.342435`6.579438260065159}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.592594801365651, 0.07537143009660596], "ModelMemory" -> 
                8968, "TrainingMemory" -> 278784, "TrainingTime" -> 
                0.04077780595530822|>, "Index" -> 3|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6845134112020232, 0.0020699166789138516`], 
                 "Accuracy" -> 
                 Around[0.6540688870064166, 0.021090227933130545`], 
                 "EvaluationTime" -> 2.46022401985551*^-6, "TestSize" -> 1000,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3147078436704098, "Round" -> 1, 
                 "Iteration" -> 6, 
                 "Time" -> {
                  0.378694`6.029833417741346, 0.39074`6.043432865662842}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.00630957344480193, 
                 "TrainingMemory" -> 71584, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6845134112020232, 0.0014636521201511219`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6540688870064166, 0.01491304318828655]}, 
                 "IterationHistory" -> {6}, 
                 "TimeHistory" -> {{
                   0.378694`6.029833417741346, 
                    0.39074`6.043432865662842}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6581905888714651, 0.004500717077509698], "Accuracy" -> 
                 Around[0.7132894514414198, 0.02569140494260154], 
                 "EvaluationTime" -> 2.5118864315095797`*^-6, "TestSize" -> 
                 600, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.2762562112490642, "Round" -> 2, 
                 "Iteration" -> 15, 
                 "Time" -> {
                  0.491674`6.143222236654797, 0.502648`6.152808952364066}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 0.007943282347242814,
                  "TrainingMemory" -> 76960, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6581905888714651, 0.0031824875657092072`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7132894514414198, 0.01816656665312313]}, 
                 "IterationHistory" -> {15}, 
                 "TimeHistory" -> {{
                   0.491674`6.143222236654797, 
                    0.502648`6.152808952364066}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5895477986864388, 0.009366016903324878], "Accuracy" -> 
                 Around[0.7678100494693777, 0.02033102843797435], 
                 "EvaluationTime" -> 2.501873984189163*^-6, "TestSize" -> 847,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.16792312368787676`, "Round" -> 3, 
                 "Iteration" -> 31, 
                 "Time" -> {
                  1.043965`6.47023093223725, 1.058726`6.47632857203124}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 0.01, 
                 "TrainingMemory" -> 104128, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5895477986864388, 0.00662277406504885]}, 
                 "AccuracyHistory" -> {
                   Around[0.7678100494693777, 0.014376208076988202`]}, 
                 "IterationHistory" -> {31}, 
                 "TimeHistory" -> {{
                   1.043965`6.47023093223725, 1.058726`6.47632857203124}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.501873984189163*^-6, "MeanCrossEntropy" -> 
                Around[0.5895477986864388, 0.009366016903324878], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 104128, 
                "TrainingTime" -> 0.05865957344480193|>, "Index" -> 4|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6919377339187907, 0.0015570789408341373`], 
                 "Accuracy" -> 
                 Around[0.6532069658972791, 0.021096042206434244`], 
                 "EvaluationTime" -> 2.40856160820144*^-6, "TestSize" -> 1000,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.32534093809657927`, "Round" -> 1, 
                 "Iteration" -> 4, 
                 "Time" -> {
                  0.345592`5.990108674073467, 0.356579`6.003700756192089}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 70160, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6919377339187907, 0.0011010210779065855`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6532069658972791, 0.014917154500367269`]}, 
                 "IterationHistory" -> {4}, 
                 "TimeHistory" -> {{
                   0.345592`5.990108674073467, 
                    0.356579`6.003700756192089}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6890544271928974, 0.0022582081120858057`], 
                 "Accuracy" -> 
                 Around[0.6666822245161145, 0.02926008787568406], 
                 "EvaluationTime" -> 2.6419646772413395`*^-6, "TestSize" -> 
                 500, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3213705035403096, "Round" -> 2, 
                 "Iteration" -> 8, 
                 "Time" -> {
                  0.400115`6.053729826542345, 0.409832`6.064150858934614}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 0.00630957344480193, 
                 "TrainingMemory" -> 75464, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6890544271928974, 0.0015967942693863443`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6666822245161145, 0.02069000655501048]}, 
                 "IterationHistory" -> {8}, 
                 "TimeHistory" -> {{
                   0.400115`6.053729826542345, 
                    0.409832`6.064150858934614}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6748779985318919, 0.002507604730891729], "Accuracy" -> 
                 Around[0.65793746733714, 0.022713756779669008`], 
                 "EvaluationTime" -> 2.4860809367135906`*^-6, "TestSize" -> 
                 847, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.30066978837443903`, "Round" -> 3, 
                 "Iteration" -> 34, 
                 "Time" -> {
                  1.101182`6.493404097266519, 1.113097`6.498078005745462}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 0.00630957344480193,
                  "TrainingMemory" -> 100424, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6748779985318919, 0.0017731443097490091`]}, 
                 "AccuracyHistory" -> {
                   Around[0.65793746733714, 0.016061051445125873`]}, 
                 "IterationHistory" -> {34}, 
                 "TimeHistory" -> {{
                   1.101182`6.493404097266519, 
                    1.113097`6.498078005745462}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6605096159448145, 0.011566062509104247`], 
                 "Accuracy" -> 
                 Around[0.6858467235403348, 0.04510034246736168], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.28190273174020286`, "Round" -> 4, 
                 "Iteration" -> 42, 
                 "Time" -> {
                  1.283501`6.559941204870646, 1.296365`6.564272290684857}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01, 
                 "TrainingMemory" -> 278784, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6605096159448145, 0.008178441231815107]}, 
                 "AccuracyHistory" -> {
                   Around[0.6858467235403348, 0.03189075799250707]}, 
                 "IterationHistory" -> {42}, 
                 "TimeHistory" -> {{
                   1.283501`6.559941204870646, 
                    1.296365`6.564272290684857}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.6605096159448145, 0.011566062509104247`], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278784, 
                "TrainingTime" -> 0.017505905749160548`|>, "Index" -> 5|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 10000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6927543610844924, 0.0015507332029919437`], 
                 "Accuracy" -> 
                 Around[0.6532069658972791, 0.021096042206434244`], 
                 "EvaluationTime" -> 2.4736007310673193`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.32651808401289983`, "Round" -> 1, 
                 "Iteration" -> 10, 
                 "Time" -> {
                  0.4275`6.082481112560165, 0.438083`6.093101394016217}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 69664, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6927543610844924, 0.0010965339636467382`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6532069658972791, 0.014917154500367269`]}, 
                 "IterationHistory" -> {10}, 
                 "TimeHistory" -> {{
                   0.4275`6.082481112560165, 0.438083`6.093101394016217}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6924104279898959, 0.0018538702375993923`], 
                 "Accuracy" -> 
                 Around[0.674388871032928, 0.024653278115553255`], 
                 "EvaluationTime" -> 2.216672650629179*^-6, "TestSize" -> 700,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3261092277200859, "Round" -> 2, 
                 "Iteration" -> 11, 
                 "Time" -> {
                  0.439119`6.09412722225747, 0.44879`6.103588164843}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 74472, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6924104279898959, 0.0013108842164464463`]}, 
                 "AccuracyHistory" -> {
                   Around[0.674388871032928, 0.017432500133985614`]}, 
                 "IterationHistory" -> {11}, 
                 "TimeHistory" -> {{
                   0.439119`6.09412722225747, 0.44879`6.103588164843}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6909001329241081, 0.0017459533379964318`], 
                 "Accuracy" -> 
                 Around[0.6367085746877919, 0.02371469364721176], 
                 "EvaluationTime" -> 2.4473084169419924`*^-6, "TestSize" -> 
                 800, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3238955786953195, "Round" -> 3, 
                 "Iteration" -> 20, 
                 "Time" -> {
                  0.578239`6.213652373313486, 0.589099`6.221733279014431}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 0.00630957344480193,
                  "TrainingMemory" -> 99736, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6909001329241081, 0.001234575444932565]}, 
                 "AccuracyHistory" -> {
                   Around[0.6367085746877919, 0.01676882069170497]}, 
                 "IterationHistory" -> {20}, 
                 "TimeHistory" -> {{
                   0.578239`6.213652373313486, 
                    0.589099`6.221733279014431}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4473084169419924`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.6909001329241081, 0.0017459533379964318`], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 99736, 
                "TrainingTime" -> 0.03804248931981082|>, "Index" -> 6|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 100000.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6928368958954024, 0.0015506991011675808`], 
                 "Accuracy" -> 
                 Around[0.6532069658972791, 0.021096042206434244`], 
                 "EvaluationTime" -> 2.5118864315095793`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3266371538872913, "Round" -> 1, 
                 "Iteration" -> 12, 
                 "Time" -> {
                  0.44979`6.104554789208536, 0.459995`6.114298104559697}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 69272, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6928368958954024, 0.0010965098500154804`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6532069658972791, 0.014917154500367269`]}, 
                 "IterationHistory" -> {12}, 
                 "TimeHistory" -> {{
                   0.44979`6.104554789208536, 
                    0.459995`6.114298104559697}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6928045956654112, 0.002001933013583032], "Accuracy" -> 
                 Around[0.6646395527983939, 0.026806418652872834`], 
                 "EvaluationTime" -> 2.42578241208613*^-6, "TestSize" -> 600, 
                 "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.32672074952835317`, "Round" -> 2, 
                 "Iteration" -> 14, 
                 "Time" -> {
                  0.482029`6.1346181606997785, 0.490685`6.1423477755103155}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 0.005011872336272719,
                  "TrainingMemory" -> 73344, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6928045956654112, 0.0014155804093857825`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6646395527983939, 0.018955000408771936`]}, 
                 "IterationHistory" -> {14}, 
                 "TimeHistory" -> {{
                   0.482029`6.1346181606997785, 
                    0.490685`6.1423477755103155}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6926391936339743, 0.001710534840375967], "Accuracy" -> 
                 Around[0.633974422006738, 0.023102083493247914`], 
                 "EvaluationTime" -> 2.303097188234004*^-6, "TestSize" -> 847,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.3263980198118409, "Round" -> 3, 
                 "Iteration" -> 27, 
                 "Time" -> {
                  0.730851`6.315373839026174, 0.741337`6.321560669720275}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.005011872336272719, "TrainingMemory" -> 98736, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.6926391936339743, 0.001209530785085695]}, 
                 "AccuracyHistory" -> {
                   Around[0.633974422006738, 0.016335639897613403`]}, 
                 "IterationHistory" -> {27}, 
                 "TimeHistory" -> {{
                   0.730851`6.315373839026174, 
                    0.741337`6.321560669720275}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.303097188234004*^-6, "MeanCrossEntropy" -> 
                Around[0.6926391936339743, 0.001710534840375967], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 98736, 
                "TrainingTime" -> 0.031249024016660406`|>, "Index" -> 7|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.6436939344596435, 0.024603088521280254`], 
                 "Accuracy" -> 
                 Around[0.6734818493468635, 0.02077562712395737], 
                 "EvaluationTime" -> 2.46022401985551*^-6, "TestSize" -> 1000,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.26023363429160506`, "Round" -> 1, 
                 "Iteration" -> 3, 
                 "Time" -> {
                  0.32754`5.9668093381855805, 0.344551`5.988798508213528}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.01, 
                 "TrainingMemory" -> 77712, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6436939344596435, 0.017397010731530174`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6734818493468635, 0.014690586822753425`]}, 
                 "IterationHistory" -> {3}, 
                 "TimeHistory" -> {{
                   0.32754`5.9668093381855805, 
                    0.344551`5.988798508213528}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4791029613298458, 0.03406494901660103], "Accuracy" -> 
                 Around[0.767126729894468, 0.024271743702744528`], 
                 "EvaluationTime" -> 2.5118864315095797`*^-6, "TestSize" -> 
                 600, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.028569326657568728`, "Round" -> 2, "Iteration" -> 9, 
                 "Time" -> {
                  0.410851`6.065229341867692, 0.426511`6.081475229885089}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.012589254117941668`, "TrainingMemory" -> 81800, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4791029613298458, 0.024087556450412603`]}, 
                 "AccuracyHistory" -> {
                   Around[0.767126729894468, 0.017162714563432536`]}, 
                 "IterationHistory" -> {9}, 
                 "TimeHistory" -> {{
                   0.410851`6.065229341867692, 
                    0.426511`6.081475229885089}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4830229389249264, 0.020770115563912145`], 
                 "Accuracy" -> 
                 Around[0.7941719596059575, 0.009766306650287054], 
                 "EvaluationTime" -> 2.664526205059907*^-6, "TestSize" -> 
                 847., "ModelMemory" -> 8968., "ModelUtility" -> 
                 0.025977566574610145`, "Round" -> 3, "Iteration" -> 37, 
                 "Time" -> {
                  1.15906`6.515650911767119, 1.192735`6.528088957013931}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 
                 106573.33333333333`, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.470249282652853, 0.022047047846431887`], 
                   Around[0.4957965951969999, 0.024464454339155214`]}, 
                 "AccuracyHistory" -> {
                   Around[0.794481965498795, 0.01381336645606386], 
                   Around[0.79386195371312, 0.013796016704592387`]}, 
                 "IterationHistory" -> {16, 37}, 
                 "TimeHistory" -> {{
                   0.503676`6.1536962508538045, 0.525656`6.172246619445467}, {
                   1.15906`6.515650911767119, 
                    1.192735`6.528088957013931}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5902691801736868, 0.07401191179573516], "Accuracy" -> 
                 Around[0.7632208616639037, 0.04148372374623602], 
                 "EvaluationTime" -> 2.7149110486497406`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.19074174086997087`, "Round" -> 4, 
                 "Iteration" -> 28, 
                 "Time" -> {
                  0.742508`6.3222461307271605, 0.76498`6.335195074397067}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278784, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5902691801736868, 0.05233432471934495]}, 
                 "AccuracyHistory" -> {
                   Around[0.7632208616639037, 0.029333422369832895`]}, 
                 "IterationHistory" -> {28}, 
                 "TimeHistory" -> {{
                   0.742508`6.3222461307271605, 
                    0.76498`6.335195074397067}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.7149110486497406`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.5902691801736868, 0.07401191179573516], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278784, 
                "TrainingTime" -> 0.03492887403069709|>, "Index" -> 8|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.0001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.031023773359322, 0.0788185791856621], "Accuracy" -> 
                 Around[0.6908573558965523, 0.02050267269970704], 
                 "EvaluationTime" -> 2.5252631427213897`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.7388762235764181, "Round" -> 1, 
                 "Iteration" -> 13, 
                 "Time" -> {
                  0.461018`6.115262875822853, 0.481041`6.133727087156532}, 
                 "TrainingSize" -> 10, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 77768, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.031023773359322, 0.055733151825670534`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6908573558965523, 0.014497578898411145`]}, 
                 "IterationHistory" -> {13}, 
                 "TimeHistory" -> {{
                   0.461018`6.115262875822853, 
                    0.481041`6.133727087156532}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5086788949124966, 0.044035846580055764`], 
                 "Accuracy" -> 
                 Around[0.7646919816266986, 0.021111918646096534`], 
                 "EvaluationTime" -> 2.318152387806817*^-6, "TestSize" -> 800,
                  "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.03437760000916634, "Round" -> 2, 
                 "Iteration" -> 19, 
                 "Time" -> {
                  0.558279`6.198396285405784, 0.577198`6.212869811082938}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 81864, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.5086788949124966, 0.031138045732047866`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7646919816266986, 0.014928380838513573`]}, 
                 "IterationHistory" -> {19}, 
                 "TimeHistory" -> {{
                   0.558279`6.198396285405784, 
                    0.577198`6.212869811082938}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4780609312018644, 0.03435493959269564], "Accuracy" -> 
                 Around[0.7928149690983174, 0.019628107875562798`], 
                 "EvaluationTime" -> 1.6363889746004129`*^-6, "TestSize" -> 
                 847, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.030596488285832946`, "Round" -> 3, "Iteration" -> 33, 
                 "Time" -> {
                  1.080684`6.485243715091382, 1.100035`6.492951496895151}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 106440, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4780609312018644, 0.02429261075324929]}, 
                 "AccuracyHistory" -> {
                   Around[0.7928149690983174, 0.013879168180671532`]}, 
                 "IterationHistory" -> {33}, 
                 "TimeHistory" -> {{
                   1.080684`6.485243715091382, 
                    1.100035`6.492951496895151}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 1.6363889746004129`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.4780609312018644, 0.03435493959269564], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 106440, 
                "TrainingTime" -> 0.09881809054995042|>, "Index" -> 9|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 1.*^-6|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.4988646379841785, 0.038232785520562924`], 
                 "Accuracy" -> 
                 Around[0.7718279734811201, 0.018678110319880682`], 
                 "EvaluationTime" -> 2.305236784893299*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.012941430530498121`, "Round" -> 2, 
                 "Iteration" -> 22, 
                 "Time" -> {
                  0.61038`6.237145288377367, 0.630027`6.250904155171377}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 81912, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4988646379841785, 0.027034661905240887`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7718279734811201, 0.013207418466938065`]}, 
                 "IterationHistory" -> {22}, 
                 "TimeHistory" -> {{
                   0.61038`6.237145288377367, 
                    0.630027`6.250904155171377}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4885701470909058, 0.0233389376108843], "Accuracy" -> 
                 Around[0.7927784042967414, 0.009808781784285327], 
                 "EvaluationTime" -> 2.1923215843588164`*^-6, "TestSize" -> 
                 847., "ModelMemory" -> 8968., "ModelUtility" -> 
                 0.013613312260306154`, "Round" -> 3, "Iteration" -> 38, 
                 "Time" -> {
                  1.194309`6.528661698541598, 1.225912`6.540004289709301}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 
                 106517.33333333333`, "ExperimentCount" -> 2, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.47350779230045126`, 0.02378341158125623], 
                   Around[0.5036325018813603, 0.026934265605995062`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7924461419530212, 0.013860157774997524`], 
                   Around[0.7931106666404615, 0.013867347877442445`]}, 
                 "IterationHistory" -> {23, 38}, 
                 "TimeHistory" -> {{
                   0.63107`6.251622528536639, 0.65204`6.265819232243877}, {
                   1.194309`6.528661698541598, 
                    1.225912`6.540004289709301}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5925989830836793, 0.07538304208833614], "Accuracy" -> 
                 Around[0.7632208616639037, 0.04148372374623602], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.19503617730406142`, "Round" -> 4, 
                 "Iteration" -> 29, 
                 "Time" -> {
                  0.766156`6.335862200519303, 0.788363`6.348271226971338}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278960, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5925989830836793, 0.053303860247133406`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7632208616639037, 0.029333422369832895`]}, 
                 "IterationHistory" -> {29}, 
                 "TimeHistory" -> {{
                   0.766156`6.335862200519303, 
                    0.788363`6.348271226971338}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.5925989830836793, 0.07538304208833614], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278960, 
                "TrainingTime" -> 0.04077780595530822|>, "Index" -> 10|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.1|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.4882123844130274, 0.035354048173532104`], 
                 "Accuracy" -> 
                 Around[0.7670533893066548, 0.018811779208647666`], 
                 "EvaluationTime" -> 2.5118864315095793`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.009475287383030495, "Round" -> 2, "Iteration" -> 24, 
                 "Time" -> {
                  0.653044`6.266487437119348, 0.679523`6.283749154496844}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 82080, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4882123844130274, 0.024999087205900425`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7670533893066548, 0.013301936644618867`]}, 
                 "IterationHistory" -> {24}, 
                 "TimeHistory" -> {{
                   0.653044`6.266487437119348, 
                    0.679523`6.283749154496844}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4730318036033254, 0.03334944883393591], "Accuracy" -> 
                 Around[0.7924461419530212, 0.0196012231020324], 
                 "EvaluationTime" -> 2.68485773266875*^-6, "TestSize" -> 847, 
                 "ModelMemory" -> 8968, "ModelUtility" -> 0.04144055681154468,
                  "Round" -> 3, "Iteration" -> 30, 
                 "Time" -> {
                  1.02056`6.460383536014912, 1.042785`6.469739768903578}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 106504, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4730318036033254, 0.023581621419309882`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7924461419530212, 0.013860157774997524`]}, 
                 "IterationHistory" -> {30}, 
                 "TimeHistory" -> {{
                   1.02056`6.460383536014912, 
                    1.042785`6.469739768903578}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5923700297536435, 0.0752428442990582], "Accuracy" -> 
                 Around[0.7632208616639037, 0.04148372374623602], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.19461317652961274`, "Round" -> 4, 
                 "Iteration" -> 43, 
                 "Time" -> {
                  1.297568`6.564675120132794, 1.319206`6.571857611390903}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278848, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5923700297536435, 0.053204725439627606`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7632208616639037, 0.029333422369832895`]}, 
                 "IterationHistory" -> {43}, 
                 "TimeHistory" -> {{
                   1.297568`6.564675120132794, 
                    1.319206`6.571857611390903}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.5923700297536435, 0.0752428442990582], "ModelMemory" -> 
                8968, "TrainingMemory" -> 278848, "TrainingTime" -> 
                0.04077780595530822|>, "Index" -> 11|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0.001|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.4987146112332802, 0.03819951231450413], "Accuracy" -> 
                 Around[0.7718279734811201, 0.018678110319880682`], 
                 "EvaluationTime" -> 2.5118864315095793`*^-6, "TestSize" -> 
                 1000, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.012632048373817595`, "Round" -> 2, 
                 "Iteration" -> 25, 
                 "Time" -> {
                  0.68061`6.2844433192621025, 0.706981`6.300952735855766}, 
                 "TrainingSize" -> 40, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 81872, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4987146112332802, 0.027011134195604896`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7718279734811201, 0.013207418466938065`]}, 
                 "IterationHistory" -> {25}, 
                 "TimeHistory" -> {{
                   0.68061`6.2844433192621025, 
                    0.706981`6.300952735855766}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4735124386530356, 0.03363434689144489], "Accuracy" -> 
                 Around[0.7924461419530212, 0.0196012231020324], 
                 "EvaluationTime" -> 2.54707551954012*^-6, "TestSize" -> 847, 
                 "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.040320457450220726`, "Round" -> 3, "Iteration" -> 26, 
                 "Time" -> {
                  0.708147`6.301668413137956, 0.729689`6.314682792845381}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.015848931924611134`, "TrainingMemory" -> 106720, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4735124386530356, 0.023783074767721357`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7924461419530212, 0.013860157774997524`]}, 
                 "IterationHistory" -> {26}, 
                 "TimeHistory" -> {{
                   0.708147`6.301668413137956, 
                    0.729689`6.314682792845381}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5926174417432578, 0.07538435021585967], "Accuracy" -> 
                 Around[0.7632208616639037, 0.04148372374623602], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.19506698320938143`, "Round" -> 4, 
                 "Iteration" -> 40, 
                 "Time" -> {
                  1.237221`6.543992276397371, 1.259229`6.5516497104129225}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278896, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5926174417432578, 0.053304785232975944`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7632208616639037, 0.029333422369832895`]}, 
                 "IterationHistory" -> {40}, 
                 "TimeHistory" -> {{
                   1.237221`6.543992276397371, 
                    1.259229`6.5516497104129225}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.5926174417432578, 0.07538435021585967], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278896, 
                "TrainingTime" -> 0.04077780595530822|>, "Index" -> 12|>, <|
             "Value" -> "LogisticRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 10.|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.48297106131378076`, 0.022437167974012594`], 
                 "Accuracy" -> 
                 Around[0.7982081795639637, 0.019426620719492676`], 
                 "EvaluationTime" -> 1.6363889746004129`*^-6, "TestSize" -> 
                 847, "ModelMemory" -> 8968, "ModelUtility" -> 
                 0.025399848258148783`, "Round" -> 3, "Iteration" -> 36, 
                 "Time" -> {
                  1.134578`6.506379351632436, 1.157838`6.51519279241435}, 
                 "TrainingSize" -> 200, "TrainingTime" -> 
                 0.012589254117941668`, "TrainingMemory" -> 106504, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.48297106131378076`, 0.015865473625045933`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7982081795639637, 0.013736695246292356`]}, 
                 "IterationHistory" -> {36}, 
                 "TimeHistory" -> {{
                   1.134578`6.506379351632436, 
                    1.157838`6.51519279241435}}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5781155527731192, 0.06516394231107683], "Accuracy" -> 
                 Around[0.7586435602380479, 0.04175038934774736], 
                 "EvaluationTime" -> 2.4037190732149084`*^-6, "TestSize" -> 
                 209, "ModelMemory" -> 8968, 
                 "ModelUtility" -> -0.1674619906538054, "Round" -> 4, 
                 "Iteration" -> 41, 
                 "Time" -> {
                  1.260443`6.552068204202456, 1.282246`6.559516346442861}, 
                 "TrainingSize" -> 838, "TrainingTime" -> 0.01995262314968879,
                  "TrainingMemory" -> 278784, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.5781155527731192, 0.04607786549701141]}, 
                 "AccuracyHistory" -> {
                   Around[0.7586435602380479, 0.02952198342497075]}, 
                 "IterationHistory" -> {41}, 
                 "TimeHistory" -> {{
                   1.260443`6.552068204202456, 
                    1.282246`6.559516346442861}}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 2.4037190732149084`*^-6, 
                "MeanCrossEntropy" -> 
                Around[0.5781155527731192, 0.06516394231107683], 
                "ModelMemory" -> 8968, "TrainingMemory" -> 278784, 
                "TrainingTime" -> 0.03751812814863876|>, "Index" -> 13|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LogisticRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "ModelMemory", "ModelUtility", "Round", "Iteration", "Time", 
                 "TrainingSize", "TrainingTime", "TrainingMemory", 
                 "ExperimentCount", "MeanCrossEntropyHistory", 
                 "AccuracyHistory", "IterationHistory", "TimeHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 2], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[Real], 2], TypeSystem`AnyLength]}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 13], <||>], 
         "TrainingSizes" -> {10, 40, 200, 838}, "MaxTrainingSize" -> 1047, 
         "PreprocessorEvaluationTime" -> 2.0859375*^-6, "PreprocessorMemory" -> 
         97488, "InputDimension" -> 6, "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -0.6642411868354303, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 10, "TimeBudgets" -> 0.13719999999999996`, 
             "ElapsedTimes" -> 0.140843, "ExperimentCounts" -> 9|>, <|
            "TrainingSizes" -> 40, "TimeBudgets" -> 0.19599999999999995`, 
             "ElapsedTimes" -> 0.194368, "ExperimentCounts" -> 12|>, <|
            "TrainingSizes" -> 200, "TimeBudgets" -> 0.27999999999999997`, 
             "ElapsedTimes" -> 0.29553, "ExperimentCounts" -> 15|>, <|
            "TrainingSizes" -> 838, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
             0.386181, "ExperimentCounts" -> 8|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"3rd"}, "ID" -> 
              1375547417485669656|>, 
            "f2" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {29.}, "ID" -> 
              3128207012260913868|>, 
            "f3" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"male"}, "ID" -> 
              7924456248644457416|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 1.383156, 
         "MaxTrainingMemory" -> 2358328, "DataMemory" -> 688552, 
         "FunctionMemory" -> 370192, "LanguageVersion" -> {14.1, 0}, "Date" -> 
         DateObject[{2024, 8, 10, 12, 38, 8.281543`7.670686248153435}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
         "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"RandomForest\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ClassifierFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  PointSize[0.13], 
                  GrayLevel[0.45], 
                  
                  PointBox[{{0.9821769431797024, -0.440194219686987}, {
                   1.1339776261519132`, 0.8056918676854272}, {
                   0.5279892326667741, 0.6574306661126254}, {
                   0.022147046479890797`, 1.4937877187998898`}}], 
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                 True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                 Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
                ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1047", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ClassifierFunction[<|
      "ExampleNumber" -> 1047, "ClassNumber" -> 2, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "passenger class" -> <|"Type" -> "Nominal"|>, 
              "passenger age" -> <|"Type" -> "Numerical"|>, 
              "passenger sex" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["FromDataset"], 
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|
                  "FeatureNames" -> {
                    "passenger class", "passenger age", "passenger sex"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 3|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal", "Numerical", "Nominal"}, 
                   "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                   Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|
             "(f2(f1f3))" -> <|
               "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                "NumericalVector"|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 1047, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 9153322266525338993|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 
                    2|>|>, "Version" -> {14.1, 0}, "ID" -> 
                    5012684870820858898|>]}, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> True, "Missing" -> "Allowed"|>], 
                    
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                    "female" -> 1, "male" -> 2|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14.1, 0}, "ID" -> 
                    8164567873087376931, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {29.967040613931523`}, 
                    "StandardDeviation" -> {14.547378264082546`}, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 6281077921715581987|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2, 
                    "SetSize" -> {3, 2}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, 0., 0.5}}, 
                    "Version" -> {14.1, 0}, "ID" -> 4040756577587028706, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14.1, 0}, "ID" -> 4097015177937765665|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{0.992568806198253, 
                    0.06976379354581298, -0.09970044168544065}, \
{-0.12041382840186221`, 0.6812182818851882, -0.7221095224098621}, {
                    0.017540663949282987`, 0.7287486984794479, 
                    0.6845565422758947}}, 
                    "Precisions" -> {1.0125217041190153`, 10.782575124281477`,
                     14.11314848493226}, "NoisePrecision" -> None, 
                    "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.000302442760580061, 0.09663111642622912, 
                    0.07351200712190363}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5749788936666488368|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>,
                     "Key" -> "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 3, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.0003024427605800791, 0.0966311164262291, 
                    0.07351200712190366}, 
                    "StandardDeviation" -> {1.0002510389377695`, 
                    0.297050845283811, 0.28112401438931556`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.0003024427605800791, 0.0966311164262291, 
                    0.07351200712190366}, 
                    "StandardDeviation" -> {1.0002510389377695`, 
                    0.297050845283811, 0.28112401438931556`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14.1, 0}, "ID" -> 
                    8708448484904811398|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 3, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"3rd"}, 
                    "ID" -> 2820061166673240318|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {29.}, 
                    "ID" -> 5984120664415143611|>, 
                    "f3" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"male"}, 
                    "ID" -> 3531176003411932431|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.076031, "MaxTrainingMemory" -> 
                    2191280, "DataMemory" -> 122784, "FunctionMemory" -> 
                    63480, "LanguageVersion" -> {14.1, 0}, "Date" -> 
                    DateObject[{
                    2024, 8, 10, 12, 38, 8.362888`7.674931267511654}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
                    "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX",
                     "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.8084204275384916`, \
-2.8084204275384916`, -2.393074489711375, -2.361243211101599, \
-1.834295683803983, -1.811773298554543, -1.7911443660394937`, \
-1.7183282569178795`, -1.6641772966497301`, -1.6604193655307975`, \
-1.6504199165544855`}, "LeftBoundary" -> -2.393074489711375, "LeftScale" -> 
                    0.20767296891355835`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[5.907988893720713, 0.38279055276437224`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14.1, 0},
                 "ID" -> 616651398117295976|>], 
              MachineLearning`MLProcessor[
              "Threads", <|
               "Input" -> <|
                 "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                  "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                  "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                "Processors" -> {
                  MachineLearning`MLProcessor[
                  "ToVector", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 5896072734193971629|>], 
                  MachineLearning`MLProcessor[
                  "ToVector", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14.1, 0}, "ID" -> 4638787354345331223|>]}, 
                "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
                "Missing" -> "Allowed"|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {29.632626319255618`}, 
                "StandardDeviation" -> {13.263512592408036`}, 
                "Output" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 7791071911106811572|>], 
              MachineLearning`MLProcessor[
              "EmbedNominalVector", <|
               "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f3)" -> <|"Type" -> "NominalVector", "Weight" -> 2|>|>, 
                "Index" -> {<|"1st" -> 1, "2nd" -> 2, "3rd" -> 3|>, <|
                  "female" -> 1, "male" -> 2|>}, 
                "Output" -> <|
                 "(f1f3)" -> <|"Weight" -> 2, "Type" -> "NumericalVector"|>|>,
                 "EmbeddingVectors" -> {
                 RawArray["Real32",{{0., 0., 
                   0.}, {-1.092864751815796, -0.03315090760588646, 
                   0.7799522876739502}, {0.08401107043027878, 
                   0.34243735671043396`, -0.027810050174593925`}, {
                   0.34496811032295227`, -0.42609575390815735`, 
                   0.3111177980899811}}], 
                  RawArray["Real32",{{0., 
                   0.}, {-0.793231725692749, -0.7061249613761902}, {
                   0.4900933504104614, -0.4402417540550232}}]}, 
                "Version" -> {14.1, 0}, "ID" -> 5988483279055413579|>], 
              MachineLearning`MLProcessor[
              "MergeVectors", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                  "(f1f3)" -> <|
                   "Weight" -> 2, "Type" -> "NumericalVector"|>|>, "Spans" -> {
                  Span[1, 1], 
                  Span[2, 6]}, "Wrappers" -> {Identity, Identity}, 
                "Output" -> <|
                 "(f2(f1f3))" -> <|
                   "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
                    "NumericalVector"|>|>, "Version" -> {14.1, 0}, "ID" -> 
                7619735631186802745|>]}, "Invertibility" -> "Impossible", 
            "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                 "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 3322105963810171158|>], 
              MachineLearning`MLProcessor[
              "IntegerEncodeNominalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Index" -> {<|"died" -> 1, "survived" -> 2|>}, "MissingCode" -> 
                0, "Version" -> {14.1, 0}, "ID" -> 203770477002322670, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Version" -> {14.1, 0}, "ID" -> 4310720165342363674|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", 
         "Marginal" -> <|
          "died" -> 0.6196377502383222, "survived" -> 
           0.38036224976167776`|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       Automatic, "BatchProcessing" -> Automatic, "Model" -> <|"Trees" -> {
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 2, 1, 6, 2, 2, 6, 4, 4, 5, 4, 3, 1, 4, 
               4, 2, 3, 2, 3, 1, 1, 2, 4, 2, 3, 1, 1, 4, 4, 4, 2, 1, 4, 3}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.44024273278505577`, 
              0.08401177329467724, -2.154545137787313, -0.7061241466503576, 
              0.34496815799036273`, -1.0928652772702314`, \
-0.7061241145402342, -0.027809548212189894`, 
              0.3760712598290441, -0.151569134395513, 
              0.3111182977846991, -0.4260964559253564, -0.8011222982551844, 
              0.31111699558353445`, 0.311117066944004, 0.21448946692687, 
              0.34243736863965735`, 
              0.3449671843014088, -0.22962294241467096`, \
-1.5184048767051728`, -1.6734075037192628`, -0.5044268453533203, 
              0.31111786393986485`, 
              0.34496899096664313`, -0.4260948175068555, \
-0.45659645600828913`, -0.04785608548848641, 
              0.3111171150497021, -0.02780985938616584, \
-0.027810546786506962`, 
              0.08401082441810193, -0.6849219278901924, \
-0.027809730937488814`, 0.3424369692390372}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {19, 20}, {6, 7}, {
               11, -19}, {-1, 8}, {-2, 9}, {-3, -20}, {10, -21}, {-4, -22}, {
               12, -23}, {-5, 13}, {14, 15}, {16, -24}, {
               17, -25}, {-6, -26}, {18, -27}, {-7, -28}, {-8, -29}, {21, 
               22}, {-9, 23}, {-10, 24}, {-11, -30}, {25, 26}, {-12, 
               27}, {-13, -31}, {28, 29}, {30, -32}, {-14, 33}, {-15, 31}, {
               32, -33}, {-16, -34}, {-17, 34}, {-18, -35}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 
               1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 
               1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 1, 1, 2, 3, 4, 1, 1, 2, 2, 1, 2, 1, 2, 
               1, 2, 4, 1, 1, 2, 2, 1, 1, 4, 4, 1, 1, 1, 1, 1, 4, 2, 2}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919190797913`, 
              0.47696875038532927`, -1.5165646359644267`, 
              0.3449673878696138, -0.42609487809781443`, \
-0.027810318797221262`, -0.3048185092295892, 
              0.4814976767344272, -1.0928642764723513`, 0.08401068188389227, 
              1.9835725628527499`, -1.0928641970886073`, 1.4567989652646247`, 
              0.2144890120501688, 1.3877650899551561`, 0.08401027462595556, 
              0.7799529227381514, 1.1788684566310117`, 0.2056095041134769, 
              0.08401024889756326, -1.0928644192292278`, 0.9169392899851792, 
              1.15301804294862, 0.7799520103999233, 0.3760709262425439, 
              0.06738686963159712, 0.18645968461648543`, 1.050087273225012, 
              1.0900998832091542`, 
              1.4239017301506287`, -0.02781063135373449, \
-1.0928654210580682`, -1.0928647558301705`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {14, 15}, {6, -18}, {-1, 
               8}, {7, -19}, {-2, -20}, {-3, 9}, {-4, 10}, {11, -21}, {
               12, -22}, {-5, 13}, {-6, -23}, {-7, -24}, {16, 17}, {18, 19}, {
               30, -25}, {20, -26}, {27, 28}, {21, -27}, {22, 
               23}, {-8, -28}, {24, -29}, {25, 
               26}, {-9, -30}, {-10, -31}, {-11, -32}, {-12, 
               29}, {-13, -33}, {-14, 31}, {-15, 32}, {-16, 33}, {-17, -34}}],
              "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 
               2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 
               1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 1, 1, 1, 3, 2, 2, 2, 4, 2, 1, 2, 3, 3, 
               1, 2, 1, 2, 1, 2, 2, 2, 4, 2, 4, 4, 4, 1, 3, 3, 4, 4, 3}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156918971981592`, \
-0.043599543829806464`, -2.154538967631183, -0.35202268088310706`, \
-0.42609505733994313`, 0.08401055998155726, 
              0.21448956960542032`, -1.0928652774477445`, 0.3111186466250513, 
              0.08401059472339079, -0.43789636527797127`, 
              0.34496895602479594`, -0.42609552014518215`, \
-0.42609499096456904`, -0.9099255039001246, 
              0.08401101539824296, -0.1954390888959261, -0.50442700435205, 
              0.47453169030963727`, -0.5044268362727937, 0.08401068188389227, 
              0.3449674737135098, 0.31111700228049566`, -1.0928641192717201`, 
              0.3111181362023623, -0.027809226295326145`, 
              0.31111815965730116`, -0.34827936043502916`, \
-0.4260966219174822, -0.4260960816605648, 0.31111712080938725`, 
              0.3111185892294128, -0.03315147373501548}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {23, 24}, {6, 7}, {19, 
               20}, {8, 9}, {17, -22}, {-1, -23}, {10, -24}, {-2, 11}, {
               12, -25}, {13, -26}, {-3, 14}, {-4, 15}, {-5, 16}, {-6, -27}, {
               18, -28}, {-7, -29}, {-8, -30}, {-9, 21}, {-10, 
               22}, {-11, -31}, {-12, -32}, {-13, 25}, {26, 27}, {-14, 
               28}, {-15, 32}, {-16, 29}, {-17, 30}, {-18, 
               31}, {-19, -33}, {-20, 33}, {-21, -34}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 
               1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 
               1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{3, 5, 2, 2, 3, 1, 2, 3, 1, 3, 3, 1, 1, 2, 
               2, 1, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.42609479610473633`, \
-0.15156919376764866`, -1.092865287466676, -1.0928652727793313`, 
              0.34243690965817164`, 1.4616449174394646`, -1.0928642760375453`,
               0.3424382817352529, -2.154538967631183, 0.34243739755572467`, 
              0.34243738375834365`, -0.0488180384925207, 1.8315163706158373`, 
              0.08401190936194047, -1.0928638220902034`, 
              0.4356077742777287, -0.20211133176337204`, -0.3151173383188963},
              "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, 5}, {-3, 8}, {
               6, -11}, {-4, 7}, {-5, -12}, {9, -13}, {-6, 10}, {11, 12}, {
               13, -14}, {-7, -15}, {14, -16}, {15, 16}, {-8, 
               17}, {-9, -17}, {18, -18}, {-10, -19}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 
               1, 2, 1, 1, 2, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 2, 3, 1, 1, 4, 3, 3, 1, 1, 3, 1, 1, 1, 
               2, 4, 4, 4, 1, 2}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, 
              0.21448958106697602`, -0.033151743738094375`, 
              0.6269914779798329, -0.7666971651114647, -0.027810318797221262`,
               0.3424371895782299, 0.3424369497878179, 1.5396644569282127`, 
              0.7025730101502123, -0.03315073547476566, 1.4948608416755782`, 
              1.9835725628527499`, -1.9801296433278157`, 0.08401114606273774, 
              0.31111754822369164`, 
              0.31111761885829026`, -0.02781048863706556, \
-1.3323728700872177`, -0.5044268606343429}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {14, 15}, {6, 
               7}, {-1, -13}, {-2, 8}, {9, 10}, {-3, -14}, {11, -15}, {-4, 
               13}, {12, -16}, {-5, -17}, {-6, -18}, {-7, 16}, {18, -19}, {-8,
                17}, {-9, -20}, {-10, 19}, {-11, 20}, {-12, -21}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 
               1, 2, 2, 2, 1, 1, 1, 1, 1}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 2, 4, 1, 3, 1, 1, 3, 4, 3, 2, 3, 3, 3, 
               4, 2, 1, 1, 1, 1, 3, 2, 3, 1, 4, 1, 3}], "NominalSplits" -> {},
              "NumericalThresholds" -> {-0.15156918971981592`, 
              0.3449673651502039, 0.7799514568202897, 
              0.4771534316675323, -0.4260948758910934, 
              0.479880444349142, -0.40220902548984805`, 0.3424369497878179, 
              0.7799514559417497, -0.033150325230495326`, -1.092864855150692, \
-0.4260950198642983, 0.34243706195774193`, -0.42609584490411834`, 
              0.3111170548689528, 
              0.08401192380377065, -1.1809519936855768`, \
-1.5631923489542707`, -0.7304106540954702, 
              0.9325948635430166, -0.42609525540345006`, 
              0.3449682249541275, -0.4260954030436701, -0.2592038306727322, 
              0.31111815521446395`, -0.29033523305388087`, \
-0.033150765976888874`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -14}, {14, -15}, {5, 6}, {7, 
               8}, {-1, 12}, {-2, -16}, {9, -17}, {10, -18}, {
               11, -19}, {-3, -20}, {-4, 13}, {-5, -21}, {-6, 15}, {16, 17}, {
               18, -22}, {21, 22}, {-7, 19}, {-8, 
               20}, {-9, -23}, {-10, -24}, {23, -25}, {24, 25}, {
               26, -26}, {-11, 27}, {-12, -27}, {-13, -28}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 
               1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 4, 3, 2, 1, 3, 1, 1, 1, 1, 1, 1, 4, 4, 
               1, 1, 1, 1, 2, 3, 2, 3, 1, 4, 3, 1, 4, 1, 1, 1, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919253275292`, 
              0.7799514645586498, -0.4260949775875149, 0.08401177329467724, 
              1.4948608416755782`, 
              0.15464310437569395`, -0.3883063654696195, \
-1.5920895434703066`, -0.5741361344542941, -1.75048740424144, \
-0.5045811264718516, -0.5701209066856308, 0.311118503956044, 
              
              0.3111174929570111, -0.49661286984773856`, -0.440218348033488, \
-0.434219755432534, -1.3341635491539279`, 
              0.21449045644501563`, -0.03315064259554418, \
-1.0928647558301705`, 0.34243729248709975`, -0.12200435076043747`, 
              0.3111171446408645, -0.4260949562072458, -0.30723106192704774`, 
              0.7799514579748505, 1.1924914114773877`, 1.153484719852182, 
              0.8063725211879644, 0.714995588098831}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 18}, {6, 
               7}, {-2, -16}, {8, -17}, {9, -18}, {-3, -19}, {10, 
               11}, {-4, -20}, {12, 13}, {-5, -21}, {14, -22}, {15, 16}, {-6, 
               17}, {-7, -23}, {-8, -24}, {19, 20}, {-9, -25}, {21, 22}, {-10,
                23}, {-11, -26}, {24, 25}, {26, -27}, {-12, 
               27}, {-13, -28}, {-14, 28}, {29, -29}, {30, -30}, {
               31, -31}, {-15, -32}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 
               2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 2, 2, 3, 1, 2, 1, 4, 3, 2, 1, 1, 1, 1, 
               3, 2, 1, 4, 2, 1, 1, 1, 2, 3, 3, 4, 4, 1, 1, 4}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833557041472, 
              0.3449671268928953, -1.0928647668872902`, 
              0.34243725278107817`, -0.1954922193298092, -1.092865287466676, \
-1.4764352944614352`, 0.3111178902822016, 0.3424365563159091, 
              0.344968353204715, -1.4022966881406358`, -1.4479760679934994`, \
-0.34827936043502916`, -0.34684985282768466`, -0.42609665809886677`, 
              0.3449682991823857, -0.04612271422871861, 0.3111174009435653, 
              0.34496808757951714`, 2.398103230090168, 0.9294888742505734, 
              0.8880873023212619, 
              0.34496832243131426`, -0.4260960265336595, -0.4260951629985943, 
              0.7799515116551952, 0.7799514579748505, 
              1.1788684566310117`, -1.147003746508549, 0.3111182130733461}, 
             "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 8}, {
               6, -16}, {-2, -17}, {7, -18}, {-3, -19}, {9, 10}, {11, 12}, {
               23, -20}, {-4, 13}, {-5, 20}, {-6, 14}, {-7, 15}, {-8, 16}, {
               17, -21}, {18, -22}, {19, -23}, {-9, -24}, {21, -25}, {
               22, -26}, {-10, -27}, {24, -28}, {-11, 25}, {-12, 26}, {27, 
               28}, {29, -29}, {-13, -30}, {-14, 30}, {-15, -31}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 
               1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 6, 4, 3, 1, 1, 1, 3, 4, 1, 1, 1, 2, 3, 
               1, 1, 1, 2, 1, 3, 1, 4, 3, 1, 3, 3, 3, 4, 4, 1, 3, 1, 3, 4}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5044268411815285, \
-0.5731833595145908, -0.0278090682865679, -0.42609652815698285`, 
              1.9835725628527499`, -0.19856266788735266`, -0.274953866075351, \
-0.4260964559253564, 
              0.31111706045913445`, -0.3581020513309552, \
-1.7473086241037343`, -1.971370560157819, 
              0.3449681876264643, -0.42609554522956383`, \
-0.43687245174935363`, -0.5609368226846883, -0.4362268212779128, 
              0.21448884450886263`, -1.2965844453866318`, \
-0.4260951166130744, -0.27002702083169616`, 0.3111187733609637, 
              0.3424379825568784, -0.2787398812708646, -0.4260948169277037, \
-0.4260957820563007, 0.34243729433781533`, -0.0278106214202557, 
              0.3111171150497021, -0.7996704654770399, 0.3424367172849321, 
              0.9287748296931895, -0.426095379157986, 0.3111182420155383}, 
             "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {5, 6}, {-2, 19}, {
               7, -17}, {8, 9}, {-3, -18}, {10, 11}, {-4, -19}, {-5, -20}, {
               12, 13}, {-6, -21}, {14, 15}, {16, 17}, {-7, -22}, {-8, -23}, {
               18, -24}, {-9, -25}, {20, 21}, {-10, -26}, {22, 23}, {
               24, -27}, {31, -28}, {25, 26}, {-11, 27}, {-12, -29}, {
               28, -30}, {-13, 29}, {30, -31}, {-14, -32}, {32, -33}, {33, 
               34}, {-15, -34}, {-16, -35}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 
               2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 
               1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 1, 1, 2, 3, 3, 3, 2, 3, 1, 1, 4, 2, 1, 
               3, 1, 2, 1, 1, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, 
              1.5414617683069363`, -1.5165646359644267`, 0.3449671815038502, 
              0.3424375483684736, -0.4260955903677752, -0.4260952358419572, \
-1.0928638759886873`, -0.22962245827625916`, 1.989850757819113, 
              0.21777483203587833`, 0.3111172695694515, 0.34496756326232303`, 
              0.10887140767716252`, -0.4260954866008988, \
-0.12189987264742674`, 
              0.34496751895791977`, -0.5380873032574662, -0.8038345581760904, \
-0.027810642446943784`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {7, 8}, {
               6, -10}, {-1, -11}, {-2, -12}, {-3, 9}, {10, 
               11}, {-4, -13}, {-5, -14}, {12, -15}, {13, 14}, {
               15, -16}, {-6, -17}, {16, 17}, {-7, -18}, {18, -19}, {19, 
               20}, {-8, -20}, {-9, -21}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 
               2, 1, 1, 1, 2, 2, 2, 2, 1}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 1, 2, 4, 1, 3, 4, 2, 4, 1, 1, 2, 2, 1, 
               2, 1, 1, 3, 1, 1, 4, 3, 1, 1, 4, 4, 2, 2, 2, 3, 3, 2, 1, 4, 
               3}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, 
              0.08462370303101585, -1.092864253223814, 0.3111187495317811, 
              0.5747457983803859, -0.4260948755029932, 0.7799516029527123, 
              0.08401059472339079, -0.02781047982350901, -0.5671171287479826, 
              0.11147956471598464`, -0.5044268362727937, 0.3449676703719171, 
              1.6111843277147848`, 0.34496740783956215`, 1.8034441678422475`, 
              0.664651879095973, -0.4260950198642983, 
              1.8661048881063707`, -1.968352807934151, 0.31111816817044513`, 
              0.342437388886323, -0.16494346679338623`, \
-0.17191385532516024`, -0.027809730937488814`, -0.02781081003685451, 
              0.08401082441810193, 0.08401076149803977, 0.3449683534266441, 
              0.3424370906020968, 0.1546425564245102, 
              0.34496832548359, -0.20557183932976297`, 0.3111170440210822, 
              0.3424369692390372}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {19, 20}, {6, 7}, {11, 
               12}, {-1, 8}, {10, -16}, {-2, 9}, {-3, -17}, {-4, -18}, {
               13, -19}, {14, 15}, {-5, -20}, {-6, -21}, {16, 17}, {
               18, -22}, {-7, -23}, {-8, -24}, {-9, -25}, {21, 
               22}, {-10, -26}, {23, -27}, {24, 25}, {26, -28}, {-11, 
               35}, {-12, 27}, {28, 29}, {30, -29}, {32, -30}, {
               31, -31}, {-13, -32}, {33, -33}, {
               34, -34}, {-14, -35}, {-15, -36}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 
               2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 
               2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> RawArray["Integer16",{5, 1, 3}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.1515691894203819, 
              1.5396644569282127`, -0.42609485711330564`}, "Children" -> 
             RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 1, 2, 2}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 3, 3, 1, 3, 4, 3, 2, 4, 3, 1, 1, 4, 
               1, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, \
-0.42609497312026656`, -0.03315179539551932, 
              0.34243690450957454`, -1.9307041699138523`, \
-0.033149950620441015`, 0.3111177339916895, -0.42609664523557855`, 
              0.3449689974814225, 
              0.31111824636133356`, -0.42609628560221813`, \
-0.3820237418716692, -1.5575217828673438`, -0.02781064406165404, \
-0.20211133176337204`, -0.693405641392216, -0.45390920418071135`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {5, 6}, {-2, -12}, {-3, 
               7}, {-4, 13}, {-5, 8}, {-6, 9}, {10, -13}, {-7, 11}, {
               12, -14}, {-8, -15}, {-9, 14}, {15, 16}, {
               17, -16}, {-10, -17}, {-11, -18}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 
               2, 1, 1, 1, 1, 2}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 4, 4, 1, 4, 1, 2, 4, 4, 1, 1, 4, 3, 
               4, 4, 3, 1, 2, 2, 2, 4, 2, 4, 4, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833557041472, \
-0.42609485711330564`, 0.7799518368948446, -0.02781093124982989, 
              0.929814506171561, 0.7799515017836125, 0.4771534316675323, 
              0.08401108634560261, 0.7799514431276107, -0.0278103846179735, 
              0.7022324241787503, 1.9835725628527499`, 
              0.3111181449970988, -0.4260962606093601, 0.31111815302707146`, 
              0.31111761885829026`, -0.42609622834596905`, \
-0.8393262120523675, 0.34496828611535024`, 0.34496819548723234`, 
              0.08401036974272369, 0.31111760619952333`, 
              0.08401041326982428, -0.027809298111501096`, 
              0.31111693554548037`, -0.8780248503366908}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {13, -14}, {5, 
               6}, {-2, -15}, {7, -16}, {8, 9}, {10, -17}, {
               11, -18}, {-3, -19}, {-4, 12}, {-5, -20}, {14, 15}, {-6, 
               16}, {-7, -21}, {17, 18}, {-8, 19}, {26, -22}, {20, -23}, {
               21, -24}, {-9, 22}, {23, -25}, {-10, 24}, {-11, 
               25}, {-12, -26}, {-13, -27}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
               1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 1, 3, 2, 3, 1, 3, 4, 1, 1, 1, 1, 4, 2}],
              "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.1515691903445897, \
-2.1220347211202384`, -0.03315178378622319, 0.3449674072361475, 
              0.3424372368566071, -0.19856266788735266`, -0.03315168596063944,
               0.7799516176608767, -1.0716103606737963`, -0.0488180384925207, \
-0.08570526083422003, 0.8918888717761781, 0.7799514996897692, 
              0.08401189877004855}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 7}, {5, 
               6}, {-3, -10}, {-4, -11}, {-5, 8}, {9, -12}, {-6, 10}, {11, 
               12}, {13, -13}, {-7, 14}, {-8, -14}, {-9, -15}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 
               2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 6, 6, 3, 4, 1, 2, 4, 1, 3, 3, 3, 3, 1, 
               4, 4, 1, 1, 6, 5, 2, 6, 4, 4, 1, 2, 2, 4, 4, 1, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.7799517021135234, -0.7061240008132579, -0.4402426953114138, \
-0.42609485711330564`, 0.31111754833968464`, 0.6628682774739394, 
              0.08401139258901436, 
              0.31111762164449486`, -2.186847311629986, -0.4260953928787008, \
-0.42609534808166494`, -0.4260948175068555, -0.42609479825304897`, \
-1.4861620933010702`, -0.02780990883391765, -0.027809762254762727`, \
-0.29534481208778374`, -1.5165646359644267`, -0.44024122660935827`, 
              0.490092439084584, 0.3449688051624591, -0.44024247094168256`, 
              0.3111187292609805, 
              0.31111873725701944`, -1.0344644415193898`, -1.092863889528699, \
-1.092863846080041, 0.3111187733609637, 
              0.5455351246648581, -0.5311855422058862, 0.10575168832099135`}, 
             "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, -23}, {6, -24}, {7, 
               8}, {-2, -25}, {-3, 9}, {17, 18}, {-4, 10}, {-5, 11}, {-6, 
               12}, {-7, 13}, {-8, 14}, {-9, 15}, {-10, 
               16}, {-11, -26}, {-12, -27}, {-13, 19}, {20, 21}, {22, 23}, {
               29, -28}, {-14, -29}, {-15, 24}, {-16, 25}, {-17, 26}, {-18, 
               27}, {-19, 28}, {-20, -30}, {30, -31}, {-21, 31}, {-22, -32}}],
              "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 
               2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 3, 5, 2, 5, 5, 1, 5, 1, 2, 2, 4, 2, 1, 
               1, 1, 6, 6, 3, 1, 2, 5, 5, 1, 1, 1, 3, 1, 6, 5, 2, 3, 6, 5, 5, 
               1, 3, 3, 1, 3, 1, 1, 3, 2, 3, 1, 2, 1, 3, 3, 3, 1}], 
             "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwAWKLXe4xxxq32r/o29ZZ++qq/QQGg955aYf3n0hxz06o
+bj/gutFabWkl/svOD103hx7315AoFjnicZT+wrLO7zzgep2qByKbCr/sN9A
8KcWSH2FFMPHeBC9X/l17NcX9h6yR6eC+AELO/OEfj+0nyGkukqB84F9wZ/D
U80YX+9nmGZR/VLnzv6KZKFlLeGP9kvMd3SsAboj4sxGq2qni/slAu6diQPq
X1Ch8XE90P4O1ubdG4H0BZHESQLdC+x/tGo7iAk9tj8QJ9kp+PatfUSHig9I
v4HqQpF1HF/tH9i9L3kPNN+hqltnA0i/T6cUyJ07GmQfSf1csP/Fhmm6k2c8
2z9j3uaTIHMNju5JAalTSHm0V+/gJXsJ98c5yq6393sUbzqvDqQvfCtV7mq/
tr9Bb6pdPSi8bsvuC4p/tH/HkqieqSyMBx5set2nBlQnIXxr4Vfha/YVT8I6
QfwMoQ1BeyYes69QTWgFiU+wub5Ol+O9/QWLT5og+Ygf3UYgex6wJD+Zn7V0
f8FEsSuMT0/bAwAgbNgC
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {37, 38}, {6, 7}, {-1, 
               33}, {8, -30}, {9, 10}, {-2, -31}, {11, 12}, {26, 
               27}, {-3, -32}, {13, 14}, {15, 16}, {22, 23}, {17, -33}, {-4, 
               18}, {-5, -34}, {-6, 19}, {20, -35}, {-7, 21}, {-8, -36}, {-9, 
               24}, {25, -37}, {-10, -38}, {-11, -39}, {-12, 28}, {
               29, -40}, {-13, -41}, {30, 31}, {-14, -42}, {-15, 
               32}, {-16, -43}, {-17, 34}, {35, 36}, {-18, -44}, {-19, -45}, {
               39, 40}, {42, 43}, {
               41, -46}, {-20, -47}, {-21, -48}, {-22, -49}, {-23, 44}, {45, 
               46}, {-24, 47}, {-25, 52}, {48, -50}, {49, -51}, {-26, 
               50}, {-27, 51}, {-28, -52}, {-29, -53}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 
               2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 
               2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 2, 2, 3, 1, 1, 3, 3, 1, 1, 4, 1, 1, 1, 
               6, 1, 1, 4, 2, 6, 5, 4, 3, 4, 2, 1, 2, 2, 3, 1, 3, 1, 2, 2, 1, 
               4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.7061240008132579, 
              0.21448959107948973`, -0.504426844042424, 
              0.34243725278107817`, -2.0045675720001963`, 1.0095231334262298`,
               0.15464354428808758`, 0.3424369497878179, 0.4720359871439106, 
              0.4814976767344272, 0.7799527000875024, 1.42837155233876, 
              1.690091545195747, -0.8393384707794986, -0.4402427219692586, \
-2.160252528079875, 1.1601318314614222`, 0.31111878026446727`, 
              0.3449690005451145, -0.44024159998358625`, 
              0.4900941185285097, -0.027810630060466135`, \
-0.42609534808166494`, 0.311117618574305, 
              0.3449679815255928, -0.9899525682845587, 0.08401043918414319, 
              0.21448966692517257`, -0.4260960310664852, \
-0.18311883643892446`, 0.34243811078418895`, -0.798165871659771, 
              0.3449679001168735, 0.34496820070593337`, -0.9536695977936143, 
              0.3111182723667474}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -19}, {15, 16}, {5, 6}, {7, 
               8}, {14, -20}, {-1, -21}, {9, -22}, {-2, 10}, {-3, 11}, {-4, 
               12}, {-5, 13}, {-6, -23}, {-7, -24}, {-8, 17}, {-9, 
               18}, {-10, -25}, {19, -26}, {20, -27}, {21, 22}, {23, 
               24}, {-11, 29}, {-12, -28}, {25, 26}, {
               27, -29}, {-13, -30}, {-14, 28}, {-15, -31}, {30, 
               31}, {-16, -32}, {32, -33}, {33, 34}, {35, -34}, {-17, -35}, {
               36, -36}, {-18, -37}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 
               2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 
               1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> RawArray["Integer16",{5, 2, 3, 1, 2}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919190797913`, 
              0.08401178111193253, -0.4260948907441202, -0.6566194926085167, 
              0.08401186439001151}, "Children" -> 
             RawArray["Integer16",{{2, -4}, {-1, 3}, {4, 
               5}, {-2, -5}, {-3, -6}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 1, 1, 2, 2}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{3, 5, 6, 6, 4, 4, 3, 2, 4, 1, 4, 1, 4, 3, 
               3, 2, 1, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.42609487045585226`, \
-0.7932308016638094, -0.5731833483192368, -0.44024108842778986`, \
-0.027810574976904506`, 
              0.7799519602437925, -0.03315093042420558, -1.092865232451219, 
              0.7799527411554115, -1.2167350883261179`, 0.141654760576593, 
              1.1798000934534691`, 0.3111171150497021, 
              0.34243689103001484`, -0.03315128487957253, 
              0.08401185171521985, -0.7996704654770399, 0.3367126120281614, 
              0.05703693537582527}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {5, 6}, {-2, -12}, {-3, 
               7}, {10, -13}, {-4, 8}, {-5, 9}, {-6, -14}, {11, 
               12}, {-7, -15}, {13, -16}, {14, 15}, {16, 17}, {19, -17}, {-8, 
               18}, {-9, -18}, {-10, -19}, {-11, -20}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 
               1, 1, 1, 1, 1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 1, 2, 4, 2, 1, 4, 2, 1, 3, 3, 2, 2, 1, 
               1, 3, 1, 4, 2, 3, 3, 3, 4, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 4, 
               1, 2, 4, 2, 1, 3, 4, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBuKO22LL56Ud3r8i98jcp1WP9jN07V60v3GrPce1KecY
q+bsn3HYeeVpIP9Kj46m9D+GAwWXwpvCX162j/hbw/ZR+Jq9gOhG48+vvts3
nBQ303K9vf/G1enTGl9dtXeYrpUZX/Nx/4elJ/0TgPSDi2J1qk2X979wcppa
zfTb/sG6b72aQPUKu5P31877sn/Fy2e7UoD2FYTf8Aap11Bll60DmvPBJJgN
RJ/Yknza8eeC/Q3hZhdiv76wT2jIusR46v7+C+7XHVZvvGQv4Me9FGT/jsa/
G6eVXNl/ZfKrIuUwxgMW/74XrTl3wf5GMFOV2pTj9h8mVrxM8v6xf0b6vds/
gO5XqG9/41T6CGhvw63XAY/2d8jaRcYA/XdA9MDjJJkH+09c+33kE1DdhWmx
PdFA8YCLbEtB/IqVKRnzN2/dX8CXs7Ea6L6Cade8QeEyQaPlWBiQBgCocMDZ

              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {17, 18}, {-1, 6}, {9, 
               10}, {-2, 7}, {-3, 8}, {-4, -26}, {11, 12}, {-5, 16}, {13, 
               14}, {-6, 
               15}, {-7, -27}, {-8, -28}, {-9, -29}, {-10, -30}, {-11, 
               19}, {-12, 26}, {-13, 20}, {21, -31}, {22, -32}, {-14, 23}, {
               24, 25}, {-15, -33}, {-16, -34}, {27, 28}, {-17, 29}, {-18, 
               31}, {30, -35}, {-19, -36}, {-20, 32}, {33, -37}, {-21, 
               34}, {-22, 35}, {36, -38}, {-23, 37}, {38, -39}, {39, -40}, {
               40, -41}, {-24, 41}, {42, -42}, {43, -43}, {-25, -44}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 
               1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 
               1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 1, 4, 2, 3, 2, 2, 3, 1, 3, 2, 2, 1, 1, 
               1, 6, 2, 1, 1, 4, 4, 6, 2, 5, 1, 1, 2, 2, 3, 3, 2, 1, 2, 3, 4, 
               1, 6}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.706123969576713, \
-0.05008918240040322, 0.7799514568202897, 
              0.08401164330716726, -0.42609507342894926`, \
-1.0928652695396295`, 
              0.3449681876264643, -0.4260964559253564, -1.75048740424144, \
-0.4260948755029932, 0.08401179087623978, 0.3449673770719617, 
              0.47453169030963727`, 
              0.08990637299901472, -1.9307041699138523`, \
-0.44024187482308186`, 
              0.34496863720143933`, -1.2965844453866318`, \
-2.0435415759803384`, 0.3111182817495628, 
              0.31111796046980444`, -0.44024117185708445`, 0.3449677741309283,
               0.49009411917836054`, 0.22084033106527445`, -0.722304342018794,
               0.08401185171521985, 
              0.34496802096266643`, -0.4260951347674755, \
-0.42609545374440216`, 0.21448951465943789`, -0.0880550372014337, 
              0.3449671994003767, 
              0.3424374145215654, -0.02781092126002077, -0.04742079141088379, \
-0.4402426616889321}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {15, 16}, {6, 7}, {
               13, -19}, {-1, -20}, {8, -21}, {-2, 9}, {-3, 10}, {-4, 
               11}, {-5, 12}, {-6, -22}, {14, -23}, {-7, -24}, {17, 18}, {
               37, -25}, {19, -26}, {-8, 21}, {20, -27}, {-9, -28}, {22, 
               23}, {24, 25}, {-10, -29}, {26, 27}, {33, -30}, {
               28, -31}, {-11, 30}, {29, -32}, {-12, -33}, {-13, 31}, {-14, 
               32}, {-15, -34}, {34, -35}, {35, -36}, {-16, 
               36}, {-17, -37}, {-18, -38}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 
               1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 
               2, 1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 4, 1, 4, 1, 4, 1, 2, 4, 2, 3, 1, 1, 1, 
               2, 1, 1, 2, 1, 2, 4, 4, 3, 1, 3, 4, 2, 4, 3, 2, 4, 2}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156918971981592`, 
              0.7799513597146754, -1.5165646359644267`, -0.0278090682865679, 
              1.9835725628527499`, 
              0.3111168471441901, -0.8751425237155228, -0.3739491024659176, 
              0.31111763233422574`, -1.0928647689026185`, -0.4260952358419572,
               1.8661048881063707`, 0.3980217533964461, 
              0.9279452513067179, -1.0928640024971674`, -0.6477982700431664, \
-1.0318067165592932`, 0.3449686091444124, -1.0335973956260034`, 
              0.08401059022644919, 0.31111824580614034`, 
              0.31111876498621305`, -0.42609665809886677`, \
-0.32688471089361837`, 0.34243729248709975`, -0.027810572801611033`, 
              0.34496822466892496`, 0.3111182580625975, -0.42609590538180075`,
               0.34496819229632747`, 0.31111712080938725`, 
              0.08401030998983672}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -14}, {9, 10}, {5, 
               6}, {-1, -15}, {-2, 7}, {8, -16}, {-3, -17}, {-4, 11}, {12, 
               13}, {-5, -18}, {14, -19}, {15, -20}, {-6, -21}, {-7, 16}, {17,
                18}, {19, 20}, {22, -22}, {21, -23}, {-8, -24}, {-9, -25}, {
               23, -26}, {24, 25}, {-10, -27}, {26, -28}, {-11, 27}, {
               28, -29}, {29, -30}, {-12, 30}, {31, -31}, {
               32, -32}, {-13, -33}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 
               1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 
               1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
               4, 4, 4, 2, 2, 1, 2, 3, 3, 1, 4, 3, 4, 2, 2, 3, 5, 1, 1, 2, 1, 
               1, 1, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJwBhQF6/iFib1JlAQAAAC8AAADoliZfkZjmvyhnyDckRdu/5J5HPWOgAMAw
BQX8mhfsv5iuOLtDJOC/gGEfM24+4r8YP9evxlTMvxge2SGe6eC/qP4nTu/z
zb/wvcWihKz3v6Aga5W2vP8/2D+yZHtN3T8YbTeGjB/sv8BDh5hyxOq/+EkV
Z13p0z+IgVJDdXqcvyhUGU1a6dM/sDLDk7SBtT94QbtV9xPWP4j7fJQrfO6/
wNk5XWZ0yz9YqbVzJEXbv5iiX2UL+aC/+K6GoBOM8L/ge5aNWunTPwBO/0d8
6tU/uMlPq1716D8YXOWawIG1P4AeCmFgfPG/mDDOkUL5oL8QANsNsV3fP9jY
MLNT3OQ/iGN/Dmeqx78gj0yf8hPWP5BOZfrXdsq/WCexn63qxj/wsVqc1rzL
P7BkT/gjRdu/UGiAiSNF278YDIKU8hPWP1h9s2Xsrdm/UKt6T8fa2L+Y/5Kc
Acilv/COseh6M+M/TL+WWr/+AUBYfI+Nrf6ov0CRJtWx7LW/XA7O+A==
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {19, 20}, {-1, 6}, {10, 
               11}, {-2, 7}, {8, -27}, {-3, 9}, {-4, -28}, {-5, 12}, {
               13, -29}, {-6, -30}, {-7, 14}, {-8, 15}, {16, -31}, {-9, 17}, {
               18, -32}, {-10, -33}, {21, -34}, {22, 23}, {-11, -35}, {24, 
               25}, {27, 28}, {-12, -36}, {26, -37}, {-13, -38}, {
               29, -39}, {-14, 45}, {-15, 30}, {31, 32}, {33, 34}, {
               42, -40}, {35, 36}, {40, 41}, {-16, -41}, {-17, 37}, {-18, 
               38}, {-19, 39}, {-20, -42}, {-21, -43}, {-22, -44}, {-23, 
               43}, {-24, 44}, {-25, -45}, {46, -46}, {47, -47}, {-26, -48}}],
              "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 
               1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 
               1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 4, 2, 1, 1, 1, 1, 3, 1, 2, 3, 1, 3, 
               3, 1, 4, 6, 2, 5, 1, 3, 2, 2, 4, 1, 2, 1, 4, 6, 1, 4, 2, 1, 5, 
               1, 6, 5, 6, 1, 1, 1, 6, 5, 1, 1, 6, 1, 6}], 
             "NominalSplits" -> {}, "NumericalThresholds" -> CompressedData["
1:eJwBlQFq/iFib1JlAQAAADEAAAAArhxZXfXoP5AehQ4mYum/uNk11/p5nL8I
UHHS9hPWP2RzRCKVyABAMAUF/JoX7L9Aqg3Vvj6/vxD0rBnYmNG/mAqDCSlF
278Y5y1/+kv3PwC5Vqn1E9Y/uKcB1yZF27/I/RFwgFLYv+DBoxIlRdu/MLVu
Xktkzb/gAvNIh2sBwJAeU3ZX6dM/uATZuOgs3L+wjo3M8xPWP3gLeHeeZsO/
aI8JvMjeyb84802LI0Xbv2g1scXNgbU/iE+isLiBtT94ayuuOnqcv0CRJtWx
7LW/wBM2Mc6BtT/A3SzEl4CovwDOAVJGepy/YM5hQ+8s3L/o9VXNXKHZv+A+
MAsGdeE/iIefSGB88b/YIuu5W57Sv6DEarqxXd8/iGN/Dmeqx79Yy56S7izc
v2iLTcyzXd8/OPAaju8s3L84EpGDX37/v1ghmgaxiPa/6DGSHH6+9L9w6cja
7Czcv8iKZGqvXd8/EL44bihxyL8Yt0v66x3vP5DbIajtLNy/6BEl7AK20b/A
38IahVfiv/2Z0zI=
              "], "Children" -> 
             RawArray["Integer16",{{2, -26}, {3, 4}, {5, 6}, {16, -27}, {
               7, -28}, {-1, 9}, {8, -29}, {-2, -30}, {-3, 10}, {11, -31}, {
               12, -32}, {-4, 13}, {14, 15}, {-5, -33}, {-6, -34}, {-7, 17}, {
               18, 19}, {20, 21}, {30, 31}, {22, 23}, {29, -35}, {-8, 24}, {
               26, 27}, {-9, 25}, {-10, -36}, {-11, 
               28}, {-12, -37}, {-13, -38}, {-14, -39}, {32, 33}, {37, 38}, {
               34, -40}, {-15, 36}, {-16, 35}, {-17, -41}, {-18, -42}, {39, 
               40}, {43, -43}, {-19, -44}, {-20, 41}, {-21, 42}, {-22, -45}, {
               44, 45}, {46, -46}, {-23, -47}, {47, -48}, {48, -49}, {-24, 
               49}, {-25, -50}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 
               2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 
               2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 1, 3, 6, 4, 3, 4, 5, 1, 1, 4, 3, 1, 
               3, 2, 1, 1, 1, 5, 3, 1, 1, 1, 1, 1, 2, 2, 3, 3, 2, 4, 2, 4, 3, 
               5, 5}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {0.7799517021135234, -0.793230791154552,
               2.3234068889294193`, -0.42609485711330564`, \
-0.4402410275816977, -0.02780966619281494, 0.3424368599381524, 
              0.7799514364526958, 
              0.49009414122883044`, -0.5721459819058339, -2.1786469635762913`,
               0.7799514202820372, -0.4260965930709242, -1.2567065017586039`, \
-0.2296224871779926, 0.34496897543316773`, 0.18252837407873823`, 
              0.17945165641993732`, 1.01177348223829, 
              0.4900927759367426, -0.4260956128700144, -0.16025303414162795`, \
-0.6542707547106179, -0.1936202841178487, -0.20557183932976297`, \
-0.6572808935208974, 0.34496767256095673`, 
              0.3449682249541275, -0.42609512928166815`, 0.3424368843891954, 
              0.3449673298693905, 0.3111186552810037, 0.08401130883699104, 
              0.141653698718478, -0.03315168596063944, -0.15156916117239727`, \
-0.15156957897069168`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {36, 37}, {-1, 6}, {9, 
               10}, {-2, 7}, {8, -18}, {-3, -19}, {11, 12}, {32, 33}, {-4, 
               13}, {28, -20}, {-5, 14}, {15, 16}, {-6, -21}, {17, -22}, {18, 
               19}, {20, -23}, {-7, 27}, {-8, 21}, {22, 23}, {24, -24}, {
               26, -25}, {25, -26}, {-9, -27}, {-10, -28}, {-11, -29}, {
               29, -30}, {-12, 30}, {31, -31}, {-13, -32}, {34, -33}, {
               35, -34}, {-14, -35}, {-15, -36}, {-16, -37}, {-17, -38}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 
               1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 
               1, 2, 1, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 2, 1, 4, 4, 4, 1, 4, 4, 4, 1, 4, 2, 1, 
               3}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156918971981592`, 
              0.3449671828318168, -1.2965844453866318`, -0.02781093124982989, 
              0.7799514559417497, 0.3111182000646977, 
              2.0644566761641734`, -0.02780906618633036, 0.3111169257738542, 
              0.14165377576500915`, 1.8315163706158373`, 0.31111752731094366`,
               0.34496853932338434`, -2.0814369330749667`, 
              0.3424371238308561}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -9}, {10, 11}, {-1, 5}, {
               6, -10}, {7, -11}, {8, -12}, {-2, 9}, {-3, -13}, {-4, 12}, {-5,
                15}, {-6, 13}, {14, -14}, {-7, -15}, {-8, -16}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 
               2, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 1, 2, 2, 1, 3, 1, 4, 3, 1, 1, 2, 3, 2, 
               4, 1, 3, 1, 2, 3}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156918971981592`, \
-1.2567065017586039`, 0.21448951027893326`, -0.5044268453533203, 
              0.8058898029055523, -0.4260965930709242, 1.989850757819113, 
              0.31111796081293, -0.42609585978130937`, -0.4077010172783466, 
              2.398103230090168, 0.3449682295473151, -0.42609583563270803`, 
              0.34496820473631074`, -0.027809251855664296`, \
-0.0488180384925207, -0.4260948297915981, -0.08564292386887917, 
              0.08401052960053346, -0.42609479825304897`}, "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -12}, {5, 6}, {-3, 
               7}, {-4, 8}, {-5, -13}, {9, -14}, {10, 11}, {-6, -15}, {
               12, -16}, {13, -17}, {-7, 14}, {15, -18}, {16, 17}, {
               18, -19}, {-8, 19}, {-9, -20}, {-10, 20}, {-11, -21}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 
               1, 1, 1, 1, 1, 2, 1, 2, 1}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 6, 1, 1, 1, 4, 3, 5, 2, 4, 2, 3, 1, 
               1, 3, 1, 1, 3, 4, 2, 3, 1, 4, 3, 2, 1, 1, 1, 1, 4, 2, 1, 1, 4, 
               4, 1, 1, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQB2IHEeX4iTOe7f8w41uEsuvt/QZ5f2+91Lmz3yEvaMZj
1pP7Y54r7YziZDiwxDSzuDeIyaFi+mO14qo5+wOCP8yvfXXVnoH39P61sfft
PaJkfBNqPu7nOJ9uH/Pysn3GvtxjcUC+QlWtkTrQ3A+Luu9fL/hqz2AmPE2r
98P+AqupLNVA/S+kriUo/PhrH/DHrWxh4nd7AT/upVpA9QKH5c5GAM2ZkX7v
9g/ha/YnOqdpaQLFOXxY77z9/2n/BsGDj0HyGZ33GzWA4jf6vtV+BKrjEDy2
J2DSy/0vvtd83Bj2br9EkEkdx7KL+zNcCi5tmXVpf0e45vwUoPs/bNpyGWSu
QANfw/eGP/u37P9muWsVw4EfyU9TQOZaXBG9ywNUt2Ee/0aXhRfsb6xw4nn+
/6O9hGhvROzXF/YAkdGn/g==
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {9, 10}, {-1, -26}, {-2, 
               6}, {7, -27}, {-3, 8}, {-4, -28}, {11, 12}, {-5, 31}, {-6, 
               13}, {15, 16}, {-7, 14}, {-8, -29}, {-9, 17}, {19, -30}, {
               18, -31}, {-10, -32}, {-11, 20}, {-12, 21}, {22, -33}, {-13, 
               23}, {-14, 24}, {-15, 25}, {-16, 26}, {-17, 27}, {28, 
               29}, {-18, -34}, {30, -35}, {-19, -36}, {-20, 32}, {33, -37}, {
               34, 35}, {-21, -38}, {36, 37}, {-22, -39}, {-23, 38}, {-24, 
               39}, {-25, -40}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 
               1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 
               2, 1, 2, 2, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 2, 4, 4, 1, 4, 2, 1, 1, 1, 1, 1, 4, 4, 
               2, 4, 4, 2, 1, 3, 4, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919190797913`, 
              0.21448958106697602`, 0.7799530891628557, 
              0.7799513597146754, -0.3042422679487853, -0.02780906618633036, \
-0.5044274057292215, 0.08924748642582347, -0.1954922193298092, 
              0.40708325093674347`, -1.9279050358339198`, 1.3534494467339684`,
               0.3111182817495628, 
              0.31111878026446727`, -0.37394842018978824`, \
-0.027810796819632028`, 0.3111187871592813, 
              0.344968998855947, -1.5140841927026418`, -0.04182913900093366, 
              0.31111705154836455`, 0.0839485923225286}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {6, -13}, {-1, 
               8}, {-2, 7}, {-3, -14}, {9, 10}, {-4, -15}, {-5, -16}, {13, 
               14}, {-6, -17}, {-7, 15}, {16, 17}, {-8, -18}, {-9, 
               18}, {-10, -19}, {19, -20}, {20, 21}, {-11, -21}, {
               22, -22}, {-12, -23}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 
               2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 1, 1, 4, 2, 3, 2, 3, 3, 4, 1, 1, 1, 
               3, 2, 4, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833577962409, \
-0.42609487971937776`, -2.1602463579237448`, -2.0045675720001963`, 
              0.3760710363796296, 0.08401025048117683, -0.03315086818486673, 
              0.08401054245838047, 0.3424372939017779, -0.4260948156949773, 
              0.7799514962059515, -1.1452130674418406`, 
              1.8682009489585365`, -1.8929806363780397`, \
-0.42609480618748075`, 
              0.08401150693160542, -0.027809251855664296`, \
-0.027809240622875542`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 10}, {5, 
               6}, {-3, -13}, {7, 8}, {-4, -14}, {-5, 9}, {-6, -15}, {-7, 
               11}, {12, 13}, {14, 15}, {-8, -16}, {-9, -17}, {-10, 16}, {
               17, -18}, {-11, 18}, {-12, -19}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 
               1, 2, 2, 1, 2, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{3, 5, 5, 1, 3, 1, 1, 1, 1, 2, 2, 1, 3, 2, 
               1, 2, 1, 1, 1, 4, 3, 1, 1, 1, 1, 4, 1, 4, 3, 4, 4, 1, 1, 1, 1, 
               1, 3, 4, 3, 1, 1, 4, 3, 3, 1, 1, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQB+ILtq83u/9csH8Cg0HvvLTD+188S14EojX0U5Iask7u
59i6WUfL9fb+gAl7Va5NeLK/Z8FRM4UwxgMVl1Yf+ar/d/+BTdWWe0RP7H+g
mub8Xfia/YqWbjMQnfHRulNR94M9h9Wsd+pA/Rd+FDJ9AYpbhIZdX+C3en/B
zuzTH4F8hz1K89zuXrTvOH27ft6CRfsZrFpOprd/su8o6L9XUTVnP0dtkRg/
0H0XGs383Nrv2cc8V9oZxclwIKDxu9/5mif2Bp/US13XMxyQOP/smR9QfYIq
72Sdqkf7M5h/8LEB+RK+7YeiTh+2t+hfqikC5D9Ynxkb//WFfYXG6oW3L9yz
l1BctFbtyV97DsueDKWmn/snTFn7jsfyp/2HIKvdOW677Sf4OpjUvbpqX3E7
JFsPqN+Ao+FDLZC/IZp33Z/oo/sVlI4Yv9680z7h3LszIHMbNrk4geQl5js6
1gDpiJr+3rX/Vuw/oMK53C7hrb1H5FI2DaA5ANZPwy4=
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {20, 21}, {-1, -26}, {6, 
               7}, {8, -27}, {-2, 9}, {-3, -28}, {-4, 10}, {11, -29}, {
               12, -30}, {13, 14}, {-5, 15}, {19, -31}, {-6, 16}, {17, 
               18}, {-7, -32}, {-8, -33}, {-9, -34}, {-10, 22}, {33, 34}, {23,
                24}, {25, 26}, {30, 31}, {-11, -35}, {-12, 27}, {
               28, -36}, {-13, 29}, {-14, -37}, {-15, 
               32}, {-16, -38}, {-17, -39}, {35, -40}, {-18, 
               36}, {-19, -41}, {37, 38}, {39, 40}, {-20, 46}, {
               41, -42}, {-21, 45}, {42, -43}, {43, -44}, {
               44, -45}, {-22, -46}, {-23, -47}, {-24, 47}, {-25, -48}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 
               2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 
               1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 6, 6, 2, 4, 1, 6, 6, 1, 3, 3, 2, 3, 2, 
               3, 5, 1, 4, 2, 4, 1, 1, 6, 5, 4, 1, 1, 5, 1, 1, 4, 3}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.08401143960097324, -0.44024273278505577`, -0.7061240008132579,
               0.08401022630640986, 
              0.7799522561274248, -1.9354768411356247`, -0.7061241466503576, \
-0.7061241147016037, -1.1452130674418406`, -0.03315057024055429, 
              0.34243700266290844`, 0.08401130252041678, 0.3424369551186772, 
              0.08401076054994006, -0.42609484076708437`, 
              0.49009412396086516`, -1.5165646359644267`, \
-0.027809525872388857`, 0.344968998855947, 
              0.3111177334361983, -0.6076212045498774, 
              2.140889620026785, -0.44024202155756376`, 0.49009346492976524`, 
              0.3111172695694515, 0.9724025620068657, -0.28993897431202553`, 
              0.49009240635104634`, 0.1392954851924615, -1.104850628829837, 
              0.3111187733609637, -0.42609485560847293`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {15, 16}, {6, -18}, {
               9, -19}, {-1, 7}, {-2, 8}, {-3, -20}, {-4, 10}, {-5, 11}, {
               12, -21}, {13, -22}, {14, -23}, {-6, -24}, {-7, -25}, {17, 
               18}, {-8, 19}, {-9, 30}, {20, 21}, {22, 23}, {-10, -26}, {
               24, -27}, {26, 27}, {-11, 25}, {-12, -28}, {28, -29}, {-13, 
               29}, {-14, -30}, {-15, -31}, {-16, 31}, {
               32, -32}, {-17, -33}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 
               1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 
               2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 6, 4, 4, 1, 3, 4, 3, 1, 1, 1, 1, 3, 
               3, 2, 3, 3, 1, 1, 1, 1, 3, 1, 1, 1, 6}], "NominalSplits" -> {},
              "NumericalThresholds" -> {
              0.7799516212273545, -0.15156919595581186`, -0.4402426729380995, 
              0.31111707702945157`, 0.3111177339916895, 
              2.0979407002582082`, -0.4260966973331577, -0.02781093124982989, \
-0.42609490016893714`, -0.2300259001477123, 
              0.10967265243641044`, -0.0842922498000418, \
-0.22133716188408736`, -0.42609538398916724`, -0.03315059977053436, 
              0.34496854924568643`, 
              0.34243660430685896`, -0.4260958424647936, \
-2.0621760238083198`, -0.046807063765112567`, -0.07080764199694045, \
-1.8953266410273741`, -0.4260950079880499, -0.4112413141172473, \
-0.5680248813894675, -1.2882139039654419`, -0.7061252561887335}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {27, -13}, {6, 7}, {17, 
               18}, {8, -14}, {-1, 11}, {-2, 9}, {-3, 10}, {-4, -15}, {
               12, -16}, {13, -17}, {14, -18}, {-5, 15}, {
               16, -19}, {-6, -20}, {19, -21}, {22, 23}, {-7, 20}, {
               21, -22}, {-8, -23}, {-9, 24}, {26, -24}, {
               25, -25}, {-10, -26}, {-11, -27}, {-12, -28}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 
               1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2}], "RootIndex" -> 
             1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 2, 3, 1, 3, 4, 3, 1, 3, 3, 3}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, \
-1.0928650890898854`, -0.033151359347079634`, -1.4038948909714968`, \
-0.033151255898219434`, 0.7799519472108809, -0.03315109251779569, 
              1.2303544804310231`, 0.3424371571402234, 0.3424371274588873, 
              0.34243669013321965`}, "Children" -> 
             RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 5}, {-5, 
               6}, {7, -8}, {8, 9}, {-6, -9}, {10, -10}, {
               11, -11}, {-7, -12}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 
               1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 1, 6, 2, 3, 5, 2, 4, 1, 4, 1, 3, 2, 1, 
               6, 5, 1, 4, 1, 2, 5, 2, 2, 1, 3, 5, 4, 3, 5, 5, 6}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.0840119897578605, -0.9164397698087976, -0.7061241378960394, \
-1.0928652898154176`, 
              0.34243644026499753`, -0.15156918971981592`, \
-1.0928652727793313`, 0.7799519817726344, 1.911437545971065, 
              0.3111169026425551, -2.167059800895439, -0.42609645505058014`, 
              0.21448959107948973`, -1.5140841927026418`, -0.4402423422361923,
               0.49009414122883044`, -1.9759128657712104`, 
              0.31111796081293, -0.0880550372014337, 0.3449682991823857, 
              0.49009393393648226`, 0.3449682562201102, 
              0.3449682221288004, -0.722304342018794, -0.4260966177060026, 
              0.4900933204216815, 0.3111169735636454, -0.42609575583599524`, 
              0.4900939021131787, 0.4900928803643203, -0.4402414544517881}, 
             "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {10, 11}, {-1, -16}, {
               6, -17}, {-2, 7}, {-3, 8}, {-4, 9}, {-5, -18}, {12, -19}, {-6, 
               14}, {-7, 13}, {-8, -20}, {15, 16}, {17, -21}, {18, 
               19}, {-9, -22}, {20, 21}, {-10, -23}, {22, -24}, {29, -25}, {
               23, -26}, {24, -27}, {-11, 25}, {-12, 26}, {-13, 27}, {
               28, -28}, {-14, -29}, {30, -30}, {31, -31}, {-15, -32}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 
               1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 4, 4, 3, 3, 1, 2, 4, 1, 2}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, 
              0.7799514645586498, 0.7799520103999233, -0.4260948718411881, 
              0.34243725278107817`, 
              0.47700650823574353`, -1.0928648200518634`, 0.5455350516042934, 
              2.062314468612648, 0.34496835302372864`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -6}, {8, 9}, {-1, 5}, {
               6, -7}, {-2, 7}, {-3, -8}, {10, -9}, {-4, -10}, {-5, -11}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 6, 1, 4, 3, 4, 1, 3, 3, 2, 4, 2, 1, 
               2, 4, 3, 2, 3, 1, 2, 4, 6, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.5455350516042934, -0.793230791154552, -0.4402426743428167, 
              0.5239719673458252, 0.31111790828456476`, -0.4260949881518816, 
              0.3111171137164743, -0.9099255039001246, 0.34243813507053256`, 
              0.3424379867209293, 0.08401054124555829, 0.31111837121935393`, 
              0.08401065969269195, -0.8394060459785937, 
              0.08401177294196172, -0.027810169317475125`, 
              0.34243756245912627`, 0.21448941912812125`, 
              0.34243697502104187`, -1.78373573254121, 0.3449682295473151, 
              0.31111734513026557`, -0.4402408108824405, \
-1.0310576074416087`, -1.671679321821367}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {25, -14}, {6, 7}, {19, 
               20}, {-1, 8}, {17, -15}, {-2, 9}, {10, -16}, {11, -17}, {-3, 
               12}, {13, -18}, {-4, 14}, {-5, 15}, {-6, 16}, {-7, -19}, {
               18, -20}, {-8, -21}, {21, -22}, {-9, 24}, {22, 
               23}, {-10, -23}, {-11, -24}, {-12, -25}, {-13, -26}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 
               1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 1, 1, 5, 6, 3, 1, 3, 2, 6, 6, 3, 4, 4, 
               1, 4, 2, 3, 1, 2, 3, 1, 1, 1, 1, 4, 6, 1, 1, 6, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.7799516212273545, -0.8760053676276653, 
              0.49965343276437757`, -0.7932312530761854, -0.7061239950753997, \
-0.426095903812707, -2.160252528079875, -0.0418295996864016, 
              0.34496786438260596`, -0.4402410663629608, -0.7061254124673537, \
-0.42609484076708437`, 0.3111172695694515, -0.027810318797221262`, 
              0.1390423308194182, -0.02780966619281494, -1.0928649470668876`, 
              0.3424368599381524, 1.950088538758715, 
              0.08401114606273774, -0.42609559183642, -0.5373652228356862, \
-0.6938111907366027, -0.8235865941896732, -0.7312708934628285, 
              0.5455350585127752, -0.44024220127812086`, 
              0.651031807299133, -0.45693697918229903`, -0.573183446876584, 
              1.6865777084255438`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 30}, {6, 7}, {12, 
               13}, {-2, -18}, {8, 9}, {-3, -19}, {10, -20}, {
               11, -21}, {-4, -22}, {-5, 14}, {20, 21}, {15, 
               16}, {-6, -23}, {-7, 17}, {-8, 18}, {-9, 19}, {-10, -24}, {22, 
               23}, {-11, 26}, {24, -25}, {25, -26}, {-12, -27}, {-13, -28}, {
               27, 28}, {29, -29}, {-14, -30}, {-15, -31}, {-16, 
               31}, {-17, -32}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 
               1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 6, 1, 3, 3, 1, 4, 3, 4, 1, 1, 1, 1, 
               1, 4, 3, 3, 1, 4, 1, 1, 1, 1, 4, 1, 4, 4, 2, 5, 5, 1, 6, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.7799513786803347, -0.15156919378205602`, -0.4402426616889321, \
-0.14363474132610032`, -0.4260965930709242, -0.42609485711330564`, 
              0.40708325093674347`, -0.02781093124982989, \
-0.04182927872093839, 0.14165388461474682`, 0.06498335912744313, 
              1.9525152149327525`, -0.9499719053876898, -1.968352807934151, \
-1.2567065017586039`, 
              0.14165346209996077`, -0.4260960834782481, -0.4260951166130744, \
-0.20242687385159863`, 
              0.3111180310884243, -0.5066529296098956, -0.6452123808487231, \
-0.46230943199365004`, -0.6504158650558116, -0.027809245514323677`, \
-0.5690596992422678, 0.31111808353618065`, 0.31111815521446395`, 
              0.34496901214787545`, -0.7932327182234431, -0.7932324895823575, \
-0.04425632460246365, -0.7061252307525852, 1.4240842835264633`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {30, -20}, {6, 7}, {13, 
               14}, {-1, 8}, {9, 10}, {-2, -21}, {11, -22}, {-3, 
               12}, {-4, -23}, {-5, -24}, {-6, -25}, {-7, 15}, {16, 17}, {-8, 
               18}, {19, 20}, {-9, -26}, {21, -27}, {25, 26}, {22, 23}, {
               24, -28}, {-10, -29}, {-11, -30}, {-12, -31}, {-13, 27}, {-14, 
               28}, {-15, 29}, {-16, -32}, {-17, 31}, {32, 33}, {-18, -33}, {
               34, -34}, {-19, -35}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 
               1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 
               2, 2}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 6, 5, 2, 6, 5, 2, 1, 1, 4, 6, 4, 4, 4, 
               2, 2, 4, 1, 1, 3, 1, 1, 4, 1, 3, 2, 1, 1, 3, 4, 2, 3, 3, 3, 1, 
               4, 2, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQB2IFk0bL2K8v7DXkOrwnzni2X+JwWcu8tMP7BUSUtnwU
vmbPwWzO9krnzv4dFed3bo69b1/g/kDwRONW+xUZH17pPv20f8O0igNXtS7u
vxBw8wpr6UP7jjfHX74Bql+Rzvou8uVlewsGpf9bFQ/ZJ4j3GEUD+R0XF5l9
Bpr74InR+U1Ac3ZsueIWAxQ/cFfnyPSGFft3FHyes/3Ay/0cX8qTtVxv77+g
9NZis+Sd/Qm/+kIvLnm5f0dYwPUYoHsDOKTPrL50Y/+OspxOdaC6BcU1B0Du
7YhWvmCyY+v+HQtzjvbOvb3/QNYiyepXV+0/7DFW3wJ0xw73wBNfgOoSjhTe
qAOKNxzf0gjSv6GVySPs9GH7DxU2TML6V+1XzOfmBrnL4ZzAxrNAd1q0+nNP
M/q0X6Yy+mmCOoMDAL0MqKU=
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 39}, {-2, -22}, {6, 
               7}, {8, 9}, {32, 33}, {10, 11}, {28, 29}, {12, -23}, {14, 
               15}, {13, -24}, {-3, -25}, {16, 17}, {24, -26}, {-4, 18}, {19, 
               20}, {-5, -27}, {-6, 21}, {22, 
               23}, {-7, -28}, {-8, -29}, {-9, -30}, {25, 
               26}, {-10, -31}, {-11, 27}, {-12, -32}, {-13, 
               30}, {-14, -33}, {-15, 31}, {-16, -34}, {34, -35}, {-17, 36}, {
               35, -36}, {-18, -37}, {37, 
               38}, {-19, -38}, {-20, -39}, {-21, -40}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 
               1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 
               2, 1, 2, 1, 1, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 1, 2, 4, 3, 1, 4, 1, 1, 1, 1, 1, 4, 1, 
               3, 1, 2, 1, 5, 1, 6, 6, 1, 4, 1, 4, 4, 1, 5, 2, 4, 2, 4, 4, 1, 
               2}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.7061240008132579, 
              1.5396644569282127`, -1.0928641245792967`, 
              0.779951580347789, -0.42609497312026656`, 0.4747395903887317, 
              0.5455349886531176, 
              0.44152824038655725`, -0.8787473652630817, \
-1.1360717708568746`, -1.7091765600457283`, -1.3724168176360116`, \
-0.0278108904209389, -1.5920895434703066`, 
              0.34243721114039616`, -0.6550576574463358, 0.34496904258509664`,
               2.0648416730967796`, 0.4900939816868948, 
              1.9514909651696826`, -0.4402418599051261, -0.44024263781919437`,
               1.197298954123415, 
              0.7799518779084789, -0.527341010305201, -0.02781049387908674, 
              0.31111752104162393`, -2.005051594173482, 0.4900942994251505, 
              0.08401027462595556, 0.31111693382931094`, 0.08401083233743467, 
              0.31111755855169054`, 0.3111186010546563, -0.9960141509996658, 
              0.34496862017373653`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, -17}, {16, 17}, {5, -18}, {6, 
               7}, {8, -19}, {13, 14}, {9, -20}, {10, -21}, {11, -22}, {-1, 
               12}, {-2, -23}, {-3, 15}, {-4, -24}, {-5, -25}, {-6, 18}, {24, 
               25}, {19, -26}, {20, -27}, {21, -28}, {22, 
               23}, {-7, -29}, {-8, -30}, {26, -31}, {-9, -32}, {-10, 27}, {
               28, 29}, {-11, 30}, {33, -33}, {-12, 31}, {
               32, -34}, {-13, -35}, {-14, 34}, {35, 
               36}, {-15, -36}, {-16, -37}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 
               1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 
               1, 1, 1, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 1, 6, 1, 6, 6, 5, 1, 1, 1, 3, 5, 2, 1, 
               1, 3, 1, 3, 5, 2, 3, 6, 3, 1, 1, 2, 6, 5, 1, 1, 2, 4, 6, 2, 2, 
               1, 4, 1, 1, 4}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAC4DCLKQyTgv5iBPXAm5f8/0G4s5JGY5r8I
yJhQfIncP7DdQamEV+K/GFCtjIRX4r8oRx3WrF3fP6DvX7QdXe6/mGNXhn9e
ub+ADJ53XLbeP0gv8jkjRdu/GOb6Tili6b+wMsOTtIG1P4AddxXo+dO/0LWQ
Reja/D+gkup8gurVP5SiOXoySAHA6NNQdbBqpb9wq3EPJ2Lpv7iOXR/xE9Y/
EE4LpSpF27+QfNu26Czcv3A0C2UlRdu/SHTXMRx6479AnbeeGTXHP+DkMs+y
gbU/AAYXZu0s3L+w6UPgsl3fP9j4REybkfe/YPCzT3lz479onvz38xPWP9iH
RQ1b6dM/QLgsk+ks3L/wU9/vuoG1P6CZScbAgbU/2C7KLuwj9L8AxGaHtiHC
P5i1AjnW7dC/8O/hwouc0r9gi9nRWXqcvze7sMc=
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {11, 12}, {6, 
               7}, {-1, -20}, {-2, 8}, {10, -21}, {-3, 
               9}, {-4, -22}, {-5, -23}, {-6, 13}, {-7, 16}, {14, 
               15}, {-8, -24}, {-9, -25}, {17, -26}, {18, 19}, {-10, -27}, {
               20, 21}, {-11, -28}, {-12, 22}, {23, 24}, {25, 26}, {37, 38}, {
               27, -29}, {-13, 31}, {28, -30}, {29, 
               30}, {-14, -31}, {-15, -32}, {32, -33}, {33, -34}, {34, 35}, {
               36, -35}, {-16, -36}, {-17, -37}, {-18, -38}, {39, -39}, {
               40, -40}, {-19, -41}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 
               1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 
               1, 1, 1, 1, 1, 1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 5, 5, 2, 4, 2, 1, 2, 1, 4, 3, 1, 2, 1, 
               1, 1, 3, 2, 1, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.7799513786803347, -0.15156919378205602`, \
-0.15156918971981592`, 0.34496717060056614`, -0.02781049387908674, 
              0.08401010412921217, 1.9835725628527499`, 
              0.08401039702875823, -0.41805275357546146`, \
-0.0278108904209389, -0.42609583799064543`, -1.220829937313603, 
              0.21448927018661101`, 0.18368836488096196`, 0.1812068982827828, 
              0.9318396919192242, -0.4260948169277037, 
              0.21448973901372326`, -0.570586806951547, 0.9262065173124423, 
              0.4720359871439106}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {21, -12}, {6, -13}, {-1, 
               11}, {-2, 7}, {8, -14}, {9, 10}, {-3, -15}, {-4, -16}, {-5, 
               12}, {13, 14}, {-6, -17}, {15, 16}, {17, -18}, {20, -19}, {-7, 
               18}, {-8, 19}, {-9, -20}, {-10, -21}, {-11, -22}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 
               1, 1, 1, 2, 1, 2, 1, 2, 2, 2}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 1, 2, 2, 3, 1, 1, 3, 4, 2, 1, 1, 1, 1, 
               1, 1, 4, 1, 4, 2, 2, 1, 2, 2, 2, 3, 1, 1, 2, 1, 1, 2}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.5731833560923301, 
              1.5396644569282127`, -0.5044268453533203, 0.21448958106697602`, 
              0.3424375483684736, 0.4771534316675323, 0.10967265243641044`, 
              0.3424368599381524, -0.027809562275324495`, \
-1.0928652709322115`, -0.9842858225434572, -1.4764352944614352`, \
-0.8364804247922777, -0.16043170560769737`, 0.6628682774739394, 
              1.2348284911359837`, 0.31111790828456476`, -1.514618110533128, 
              0.31111739007696393`, 0.3449682830630745, 
              0.3449682579209399, -0.541275109857807, 0.08401091594886667, 
              0.34496819859911554`, 0.344967769968493, 0.3424380141461296, 
              2.435037207758551, -0.01574388655810105, 
              0.08401030998983672, -0.34684985282768466`, -0.34833941922698, 
              0.3449673061130003}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 17}, {6, 
               7}, {-2, -18}, {8, 9}, {-3, 15}, {10, 11}, {-4, -19}, {
               12, -20}, {-5, 13}, {-6, -21}, {-7, 14}, {-8, -22}, {-9, 
               16}, {-10, -23}, {18, -24}, {19, 20}, {-11, -25}, {21, -26}, {
               22, -27}, {23, 24}, {-12, 25}, {26, -28}, {-13, -29}, {27, 
               28}, {29, -30}, {-14, -31}, {-15, 30}, {31, 
               32}, {-16, -32}, {-17, -33}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 
               1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 
               1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 6, 6, 4, 3, 1, 1, 1, 4, 1, 2, 1, 3, 1, 
               3, 1, 4, 1, 5, 1, 1, 6, 1, 5, 6, 5, 6, 1, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {
              0.3449671494271458, -0.5731833483192368, -0.7061242833971768, \
-0.0278103846179735, 
              0.34243675331318313`, -1.0619976748683744`, -2.009477651239431, \
-1.2167350883261179`, 0.7799522167250599, 
              1.0434889325490762`, -1.0928652727793313`, \
-0.34868827154075666`, 
              0.34243667052055393`, -0.196117669111322, -0.03315148495523862, \
-0.1254620215392852, 0.7799514446609876, -1.0302930130859433`, 
              0.4900927051736996, -0.18670437072815682`, -0.1963942958993774, \
-0.4402418988998802, -0.6477982700431664, 
              0.4900938664404699, -0.4402416120178434, 
              0.490094127154709, -0.5731834263517008, 1.0107189052847723`, 
              1.1227296009258385`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 18}, {6, 7}, {
               8, -15}, {-2, -16}, {-3, -17}, {-4, 9}, {10, -18}, {
               11, -19}, {-5, 12}, {-6, 13}, {14, -20}, {-7, 15}, {16, 
               17}, {-8, -21}, {-9, -22}, {19, 20}, {-10, -23}, {21, 22}, {
               23, -24}, {28, -25}, {24, 25}, {-11, -26}, {26, -27}, {
               27, -28}, {-12, -29}, {-13, 29}, {-14, -30}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 
               1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{4, 6, 5, 4, 6, 2, 1, 3, 4, 2, 3, 1, 1, 1, 
               3, 5, 2, 2, 3, 4, 5, 5, 1, 2, 4, 3, 3, 2, 4, 2, 6, 2, 3, 6, 1, 
               1, 1, 1, 2, 1, 1}], "NominalSplits" -> {}, 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOIXxfFWsV9f2F/I03kyccaz/SeE3srOTzu8X0At69Y2
xUP2NyaErH2hc2f/ittKSl+Fr9kzJD4P7mm4tF/iQ5IQ/88F+2+o9++PeHnZ
/sZL6dWfgPIZxSt0tVxv79fg7bop8eDj/ox/5jp//p3e/8BRcEaD7X97jh9n
7bxTzu7fcdn8gHrSy/0CqtFHDzZutd/RFyv/Eag/ocXRu/rVVfuKQ4dSWEof
2le8mr5vc+x9ewn3JSrrgPSHiRUvk7x/7K8w5JID2bdiAUt2LND+CZWhgSB7
G/y8LUC0x2qp3M9AeQsGpf9bgf4IiDh8OL7m434P39s274H+YXj2rQlkn0S2
R5U6UH1B/K5wkLhHaO7Fur9t+yesYRa5lrR6v4Zgt9iR1cf2B6zQX+R/+OL+
D4sf/NoOdK+Hjd0F3uTP+19IXUtQ+PHXHgAR7K0f
              "], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {-1, 41}, {-2, 6}, {16, 
               17}, {7, -20}, {8, 9}, {10, -21}, {13, 14}, {11, 
               12}, {-3, -22}, {-4, -23}, {-5, -24}, {15, -25}, {-6, -26}, {
               18, 19}, {39, 40}, {20, -27}, {21, 22}, {-7, -28}, {23, 
               24}, {-8, -29}, {25, 26}, {38, -30}, {27, -31}, {-9, 30}, {-10,
                28}, {29, -32}, {-11, -33}, {-12, 31}, {32, 33}, {-13, 34}, {
               35, -34}, {-14, -35}, {36, -36}, {
               37, -37}, {-15, -38}, {-16, -39}, {-17, -40}, {-18, -41}, \
{-19, -42}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 
               2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 
               1, 2, 1, 2, 1, 1, 2, 1, 1}], "RootIndex" -> 1, 
             "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 2, 1, 2, 1, 2, 1, 1, 1, 3, 4, 3, 1, 1}],
              "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919190797913`, 
              0.21448959107948973`, -1.2567065017586039`, -1.092865287466676, 
              1.1615710901685397`, 0.08401022977363393, -0.16043170560769737`,
               0.5556819879969934, -2.1786469635762913`, -0.4260948156949773, 
              0.14165377576500915`, -0.42609624246167277`, \
-1.6644870327032013`, -0.16425569752733304`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {9, 10}, {-1, 
               6}, {-2, -11}, {-3, 7}, {-4, 8}, {-5, -12}, {-6, 11}, {
               14, -13}, {-7, 12}, {-8, 13}, {-9, -14}, {-10, -15}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 
               1, 2, 1}], "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{5, 3, 2, 4, 4, 4, 2, 1, 1, 3, 1, 2, 2, 3, 
               4, 2, 4, 1, 4, 4, 2, 2, 3, 2, 3, 1, 3, 1, 1, 1, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.15156919253275292`, \
-0.42609485711330564`, -1.0928654092429646`, -0.02781093124982989, 
              0.7799514645586498, 0.7799514364526958, 
              0.08401061089424644, -2.0045675720001963`, -0.8393384707794986, 
              0.34243737924786677`, -1.7814860346043169`, 
              0.21448951027893326`, 0.3449673134603386, -0.4260965457968169, 
              0.7799530489995332, 
              0.3449673061130003, -0.02781064406165404, -0.5723121641543436, 
              0.779952321685383, 0.31111790703764264`, 0.08401082441810193, 
              0.08401072278227595, 0.3424368108382425, 
              0.08401189877004855, -0.033151666118971246`, 
              0.8695697012319901, -0.033151709142415, 0.0452818423051643, 
              0.3308859691779409, 1.1243126819716487`, 1.192270762299584}, 
             "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 11}, {-3, 5}, {
               6, -16}, {7, -17}, {8, 9}, {-4, -18}, {10, -19}, {-5, -20}, {
               12, 13}, {-6, -21}, {14, -22}, {-7, 15}, {16, -23}, {
               17, -24}, {-8, 18}, {19, 20}, {21, -25}, {24, 25}, {22, -26}, {
               23, -27}, {-9, -28}, {-10, 26}, {27, -29}, {-11, -30}, {
               28, -31}, {-12, 29}, {-13, 30}, {-14, 31}, {-15, -32}}], 
             "LeafValues" -> 
             RawArray["UnsignedInteger8",{1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 
               2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{6, 3, 2, 3, 1, 1, 2, 1, 5, 5, 4, 4, 1, 2, 
               4, 4, 1, 5, 2, 6, 2, 2, 1, 4, 4, 1, 4, 6, 1, 5, 1}], 
             "NominalSplits" -> {}, 
             "NumericalThresholds" -> {-0.7061240008132579, \
-0.42609485711330564`, -1.0928646701042677`, 0.3424369497878179, 
              1.4948608416755782`, 1.9835725628527499`, 
              0.3449682333342783, -1.4712030984403484`, 0.49009352196050715`, 
              0.49009402183508044`, 0.7799528546999754, 0.3111182817495628, 
              1.0900998832091542`, 0.34496820070593337`, 
              0.7799514966343031, -0.02781060462368687, 1.0842575569358797`, 
              0.4900942994251505, 0.3449677783752554, -0.44024258559257534`, 
              0.21448952678969335`, 
              0.08401056670356721, -0.2909154239282947, \
-0.027809473531118595`, 0.31111694658182865`, -0.8067521793247492, 
              0.31111688800501547`, -0.4402411054643829, -1.0274393756660842`,
               0.4900924009918426, -0.23724033522180332`}, "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 7}, {5, 
               6}, {-3, -15}, {-4, -16}, {8, 9}, {10, 11}, {28, -17}, {
               12, -18}, {13, -19}, {-5, -20}, {14, -21}, {15, -22}, {
               16, -23}, {-6, 17}, {18, -24}, {19, -25}, {20, -26}, {21, 
               22}, {-7, 23}, {24, 25}, {-8, -27}, {-9, 26}, {
               27, -28}, {-10, -29}, {-11, -30}, {29, -31}, {-12, 30}, {-13, 
               31}, {-14, -32}}], "LeafValues" -> 
             RawArray["UnsignedInteger8",{2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 
               1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1}], 
             "RootIndex" -> 1, "NominalDimension" -> 0|>]}, "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|
             "Weight" -> {1., 0.4, 0.4, 0.4, 0.4, 0.4}, "Type" -> 
              "NumericalVector"|>, "Key" -> "(f2(f1f3))", "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], 
         "OOBConfusionMatrix" -> {{0.7406220124785415, 0.3511130079626409}, {
          0.2593779875214584, 0.6488869920373592}}, "Calibrator" -> 
         MachineLearning`CalibratorFunction[
          "TemperatureScaling", <|"Theta" -> 1.4031492447712486`|>], "Method" -> 
         "RandomForest", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "FeatureFraction" -> <|
            "Value" -> 6^Rational[-1, 2], "Options" -> <||>|>, 
           "LeafSize" -> <|"Value" -> 5, "Options" -> <||>|>, 
           "TreeNumber" -> <|"Value" -> 50, "Options" -> <||>|>, 
           "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
           "Implementation" -> <|
            "Value" -> "Default", "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Configurations" -> 
         Dataset[<|<|
             "Value" -> "RandomForest", 
              "Options" -> <|
               "FeatureFraction" -> <|"Value" -> Automatic|>, 
                "LeafSize" -> <|"Value" -> Automatic|>, 
                "TreeNumber" -> <|"Value" -> Automatic|>, 
                "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                "Implementation" -> <|"Value" -> Automatic|>|>, 
              "NaiveImputer" -> Missing["KeyAbsent", "NaiveImputer"], 
              "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 5], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
         Dataset[<|
           "Configuration" -> {
             "RandomForest", "FeatureFraction" -> Automatic, "LeafSize" -> 
              Automatic, "TreeNumber" -> Automatic, "DistributionSmoothing" -> 
              0.5, "Implementation" -> Automatic}, "ModelUtility" -> 
            Missing[]|>, 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>], 
         "InputDimension" -> 6, "OutputDimension" -> 1|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"3rd"}, "ID" -> 
              1375547417485669656|>, 
            "f2" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {29.}, "ID" -> 
              3128207012260913868|>, 
            "f3" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"male"}, "ID" -> 
              7924456248644457416|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.183091, 
         "MaxTrainingMemory" -> 2321016, "DataMemory" -> 688552, 
         "FunctionMemory" -> 270872, "LanguageVersion" -> {14.1, 0}, "Date" -> 
         DateObject[{2024, 8, 10, 12, 38, 8.465448`7.680224933330687}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 10, 
         "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.932287690892921*^9, 3.932287697295128*^9}, 
   3.932288015580743*^9, 3.9322966884855623`*^9},
 CellLabel->"Out[4]=",
 CellID->252907609,ExpressionUUID->"06fc3b8a-0c07-48b5-afac-478586bf6b23"]
}, Open  ]],

Cell["Here we classify the records of the testing dataset:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9322880157639914`*^9, 3.932288030041667*^9}, {
  3.932288098733835*^9, 3.932288099983041*^9}},
 CellID->1074887022,ExpressionUUID->"6e3aafc4-a374-4866-a52e-bfe6174c4d2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"new", "=", 
   RowBox[{"EnsembleClassify", "[", 
    RowBox[{"aCLs2", ",", 
     RowBox[{"Normal", "@", 
      RowBox[{"dsTesting", "[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"new", "//", "Shallow"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932288032248913*^9, 3.932288089643217*^9}, {
  3.9322883816106863`*^9, 3.932288382146883*^9}, {3.932288968880824*^9, 
  3.932288970925665*^9}, {3.932289003730418*^9, 3.932289005890813*^9}},
 CellLabel->"In[5]:=",
 CellID->606289521,ExpressionUUID->"c21ebe69-d399-4a72-ba86-f4ab0fba8bd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"died\"\>", ",", "\<\"died\"\>", ",", "\<\"died\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"died\"\>", ",", "\<\"died\"\>", 
   ",", "\<\"died\"\>", ",", "\<\"died\"\>", ",", "\<\"survived\"\>", 
   ",", "\<\"died\"\>", ",", 
   RowBox[{"\[LeftSkeleton]", "252", "\[RightSkeleton]"}]}], "}"}]], "Output",
 
 TaggingRules->{},
 CellChangeTimes->{{3.932288062663188*^9, 3.932288090289611*^9}, 
   3.932288383251052*^9, {3.932288971426235*^9, 3.932289006429775*^9}, 
   3.932296688594495*^9},
 CellLabel->"Out[6]//Shallow=",
 CellID->748047050,ExpressionUUID->"8a2c045d-c088-46ef-9412-e763fc9975f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confusion matrix", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.9322883960262747`*^9, 3.93228839999973*^9}},
 CellLabel->"In[7]:=",
 CellID->276602973,ExpressionUUID->"7199ba66-1b63-496b-964e-b70a5f27fe86"],

Cell[TextData[{
 "Confusion matrix can be computed and plotted using functions of the paclet ",
 ButtonBox["\"ROCFunctions\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/ROCFunctions/"],
 ". Here is an example:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932288385881115*^9, 3.932288466146598*^9}, {
  3.932288507786625*^9, 3.93228851636759*^9}, {3.932288594028418*^9, 
  3.9322885957374353`*^9}, {3.932288663825852*^9, 3.932288663826548*^9}, {
  3.932289197433923*^9, 3.932289212267499*^9}},
 CellID->1105844488,ExpressionUUID->"117b622b-fd5b-4b08-b32e-5ed5a16f7e90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   FrameBox[
    TagBox[
     TooltipBox[
      PaneBox[GridBox[{
         {
          GraphicsBox[
           {Thickness[0.0025], 
            {FaceForm[{RGBColor[
             0.9607843137254902, 0.5058823529411764, 0.19607843137254902`], 
             Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
               1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
               0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
               0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
               3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 22.863691329956055`}, {
               205., 212.31669425964355`}, {246.01799774169922`, 
               235.99870109558105`}, {369.0710144042969, 307.0436840057373}, {
               369.0710144042969, 117.59068870544434`}, {205., 
               22.863691329956055`}}, {{30.928985595703125`, 
               307.0436840057373}, {153.98200225830078`, 
               235.99870109558105`}, {195., 212.31669425964355`}, {195., 
               22.863691329956055`}, {30.928985595703125`, 
               117.59068870544434`}, {30.928985595703125`, 
               307.0436840057373}}, {{200., 410.42970085144043`}, {
               364.0710144042969, 315.7036876678467}, {241.01799774169922`, 
               244.65868949890137`}, {200., 220.97669792175293`}, {
               158.98200225830078`, 244.65868949890137`}, {
               35.928985595703125`, 315.7036876678467}, {200., 
               410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
               "]}]}, 
            {FaceForm[{RGBColor[
             0.5529411764705883, 0.6745098039215687, 0.8117647058823529], 
             Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{44.92900085449219, 282.59088134765625`}, {
              181.00001525878906`, 204.0298843383789}, {181.00001525878906`, 
              46.90887451171875}, {44.92900085449219, 125.46986389160156`}, {
              44.92900085449219, 282.59088134765625`}}}]}, 
            {FaceForm[{RGBColor[
             0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
             Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{355.0710144042969, 282.59088134765625`}, {
              355.0710144042969, 125.46986389160156`}, {219., 
              46.90887451171875}, {219., 204.0298843383789}, {
              355.0710144042969, 282.59088134765625`}}}]}, 
            {FaceForm[{RGBColor[
             0.6901960784313725, 0.5882352941176471, 0.8117647058823529], 
             Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
              315.4997024536133}, {200., 236.93968200683594`}, {
              63.928985595703125`, 315.4997024536133}, {200., 
              394.0606994628906}}}]}},
           BaselinePosition->Scaled[0.15],
           ImageSize->10], 
          StyleBox[
           RowBox[{"ConfusionMatrixPlot", " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->{Left, Baseline},
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      RowBox[{"PacletSymbol", "[", 
        RowBox[{
         "\"AntonAntonov/ROCFunctions\"", ",", 
          "\"AntonAntonov`ROCFunctions`ConfusionMatrixPlot\""}], "]"}],
      TooltipStyle->{ShowAutoStyles -> True, ShowStringCharacters -> True}],
     Annotation[#, 
      Style[
       Defer[
        PacletSymbol[
        "AntonAntonov/ROCFunctions", 
         "AntonAntonov`ROCFunctions`ConfusionMatrixPlot"]], 
       ShowStringCharacters -> True], "Tooltip"]& ],
    Background->RGBColor[0.968, 0.976, 0.984],
    BaselinePosition->Baseline,
    DefaultBaseStyle->{},
    FrameMargins->{{0, 0}, {1, 1}},
    FrameStyle->RGBColor[0.831, 0.847, 0.85],
    RoundingRadius->4],
   PacletSymbol[
   "AntonAntonov/ROCFunctions", 
    "AntonAntonov`ROCFunctions`ConfusionMatrixPlot"],
   BoxID -> "PacletSymbolBox",
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{
   InterpretationBox[
    FrameBox[
     TagBox[
      TooltipBox[
       PaneBox[GridBox[{
          {
           ItemBox[
            GraphicsBox[
             {Thickness[0.0025], 
              {FaceForm[{RGBColor[
               0.9607843137254902, 0.5058823529411764, 0.19607843137254902`], 
               Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                 22.863691329956055`}, {205., 212.31669425964355`}, {
                 246.01799774169922`, 235.99870109558105`}, {
                 369.0710144042969, 307.0436840057373}, {369.0710144042969, 
                 117.59068870544434`}, {205., 22.863691329956055`}}, {{
                 30.928985595703125`, 307.0436840057373}, {
                 153.98200225830078`, 235.99870109558105`}, {195., 
                 212.31669425964355`}, {195., 22.863691329956055`}, {
                 30.928985595703125`, 117.59068870544434`}, {
                 30.928985595703125`, 307.0436840057373}}, {{200., 
                 410.42970085144043`}, {364.0710144042969, 
                 315.7036876678467}, {241.01799774169922`, 
                 244.65868949890137`}, {200., 220.97669792175293`}, {
                 158.98200225830078`, 244.65868949890137`}, {
                 35.928985595703125`, 315.7036876678467}, {200., 
                 410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                 "]}]}, 
              {FaceForm[{RGBColor[
               0.5529411764705883, 0.6745098039215687, 0.8117647058823529], 
               Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                181.00001525878906`, 204.0298843383789}, {181.00001525878906`,
                 46.90887451171875}, {44.92900085449219, 
                125.46986389160156`}, {44.92900085449219, 
                282.59088134765625`}}}]}, 
              {FaceForm[{RGBColor[
               0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
               Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                355.0710144042969, 125.46986389160156`}, {219., 
                46.90887451171875}, {219., 204.0298843383789}, {
                355.0710144042969, 282.59088134765625`}}}]}, 
              {FaceForm[{RGBColor[
               0.6901960784313725, 0.5882352941176471, 0.8117647058823529], 
               Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                315.4997024536133}, {200., 236.93968200683594`}, {
                63.928985595703125`, 315.4997024536133}, {200., 
                394.0606994628906}}}]}},
             BaselinePosition->Scaled[0.15],
             ImageSize->10]], 
           ItemBox[
            StyleBox[
             RowBox[{"ToROCAssociation", " "}],
             ShowAutoStyles->False,
             ShowStringCharacters->False,
             FontSize->0.9 Inherited,
             FontColor->GrayLevel[0.1]]]}
         },
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        Alignment->{Left, Baseline},
        BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
        BaselinePosition->Baseline,
        FrameMargins->{{3, 0}, {0, 0}}],
       RowBox[{"PacletSymbol", "[", 
         RowBox[{
          "\"AntonAntonov/ROCFunctions\"", ",", 
           "\"AntonAntonov`ROCFunctions`ToROCAssociation\""}], "]"}],
       TooltipStyle->{ShowAutoStyles -> True, ShowStringCharacters -> True}],
      Annotation[#, 
       Style[
        Defer[
         PacletSymbol[
         "AntonAntonov/ROCFunctions", 
          "AntonAntonov`ROCFunctions`ToROCAssociation"]], 
        ShowStringCharacters -> True], "Tooltip"]& ],
     Background->RGBColor[0.968, 0.976, 0.984],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831, 0.847, 0.85],
     RoundingRadius->4],
    PacletSymbol[
    "AntonAntonov/ROCFunctions", "AntonAntonov`ROCFunctions`ToROCAssociation"],
    TaggingRules -> {
     "Paclet" -> "AntonAntonov/ROCFunctions", "Symbol" -> 
      "AntonAntonov`ROCFunctions`ToROCAssociation"},
    BoxID -> "PacletSymbolBox",
    SelectWithContents->True,
    Selectable->False], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<survived\>\"", ",", "\"\<died\>\""}], "}"}], ",", 
    RowBox[{"Normal", "@", 
     RowBox[{"dsTesting", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], ",", "new"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932288886369812*^9, 3.932288937884101*^9}, {
  3.93228903543069*^9, 3.9322890365571117`*^9}, {3.932289167491138*^9, 
  3.9322891835549183`*^9}},
 CellLabel->"In[1]:=",
 CellID->1148667884,ExpressionUUID->"2901dd4b-5842-431a-bff0-7da8ce3aa74e"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9403974279097871, 0.8932215902704743, 0.7296449529637365}, {
   1., 0.42, 0.}}, {{0.904000498257276, 0.7501880234962073, 
   0.38327382496734425`}, {0.878121000871362, 0.6370137382518964, 
   0.1607094200163282}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     InsetBox[
      FormBox["1", TraditionalForm], 
      NCache[{
        Rational[1, 2], 
        Rational[1, 2]}, {0.5, 0.5}]], 
     InsetBox[
      FormBox["45", TraditionalForm], 
      NCache[{
        Rational[1, 2], 
        Rational[3, 2]}, {0.5, 1.5}]]}, {
     InsetBox[
      FormBox["159", TraditionalForm], 
      NCache[{
        Rational[3, 2], 
        Rational[1, 2]}, {1.5, 0.5}]], 
     InsetBox[
      FormBox["57", TraditionalForm], 
      NCache[{
        Rational[3, 2], 
        Rational[3, 2]}, {1.5, 1.5}]]}},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted\"", TraditionalForm], 
    FormBox["\"actual\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox["\"True\"", TraditionalForm]}, {0.5, 
       FormBox["\"False\"", TraditionalForm]}}, {{1.5, 
       FormBox["102", TraditionalForm]}, {0.5, 
       FormBox["160", TraditionalForm]}}}, {{{0.5, 
       FormBox["46", TraditionalForm]}, {1.5, 
       FormBox["216", TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"True\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"False\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.9322886011714573`*^9, {3.93228888831009*^9, 3.93228890622253*^9}, 
   3.9322889383307047`*^9, {3.9322889795372353`*^9, 3.9322889828512163`*^9}, {
   3.932289014118286*^9, 3.9322890374017467`*^9}, {3.932289168494774*^9, 
   3.9322891840428057`*^9}, 3.932296688660986*^9},
 CellLabel->"Out[1]=",
 CellID->1057499812,ExpressionUUID->"1405f87f-b34d-40c7-aa47-232538b711f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flowchart", "Subsection",
 TaggingRules->{},
 CellChangeTimes->{{3.93229877786899*^9, 3.932298784741334*^9}},
 CellID->673586370,ExpressionUUID->"01af5f4e-9626-47d6-8ace-05864e854304"],

Cell[TextData[{
 "Here is a flowchart that summarizes the classification process (made with \
",
 ButtonBox["Mermaid-JS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mermaid.js.org"], None},
  ButtonNote->"https://mermaid.js.org"],
 "):"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932294646756027*^9, 3.932294705444786*^9}, {
  3.932294934490734*^9, 3.9322949681595097`*^9}, {3.9322971594870462`*^9, 
  3.9322971843158503`*^9}},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"64d673bc-0786-42f5-8cf0-a53028f29ab7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MermaidInk\>\"", "]"}], "[", 
  "\"\<\ngraph TD\n    A[\\\"Input Data (X1, X2, ..., Xn, Y)\\\"] --> \
B[NearestNeighbors]\n    A --> C[NeuralNetwork]\n    A --> \
D[LogisticRegression]\n    A --> E[RandomForest]\n    A --> \
F[SupportVectorMachine]\n    A --> G[NaiveBayes]\n    \n    B --> \
H[Voting/Combination Mechanism]\n    C --> H\n    D --> H\n    E --> H\n    F \
--> H\n    G --> H\n    \n    H --> I[Final Prediction]\n\>\"", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.932294893144318*^9, 3.932294929177186*^9}},
 CellLabel->"In[1]:=",
 CellID->1078713151,ExpressionUUID->"e4fbc72d-8dc1-49f7-9a93-a88523f36c75"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ybxmuuFlKp+9tnzPhdNPqNtLpx9eO/cUoqgWnlJV6ysIkvNvwM/PE1fPnLyG
eATboFiqQ9kqBZ+mQrjw1PBrvb4YFX0p6s2NS8lRJ567TUVTpelGiTZ93fPr
/e/cmXtXLz2n2P7Sw+AEHyEGXT0XM3/axlFD58IzVWUvMdkLQ9exoe119fz7
i2diLp2NwYLWJLfHWYbJXA6v89uNdMNV6Ll15c3W9aejjj07feTp2eMvTh1+
HHXsyZljD8+eeHzm6LPTR1+cOfKimq9PHnx6/OCTqKMvj+5/xJ4Lp9+cPvz8
5OFn7OHbs8desc3+cyej2e/30n7w+tnpY4/PnHh08uj9qJMPly3akpulrGYE
i5I+UiWf4ukGCmH5wiMnDrw7fSTm9JFotT76ijKrhQ32sK4WNWmsTx16duLQ
UzAAQsDGqSPPL5yMOfLXw+pQtg/Bw6pl+5LjXUowOGSgu9kaWGYHRyWjQoMB
Atm4+tzRPdFnDsWdOhhDOaOOPWetl1dqffSZWtR2NGt/1+EHrcHGsQOPL556
c+bYy/MnoqOOv/prxy3W1aFs/5JPCOhnjr3+ZeFe1fstY5PNx1F9sVQ1clSD
1K2b0QqzPYtm7zt56PWpw6+FN1SBdQAyyMR/fGJGEFWYw88vnnkr6ytR7+EQ
WOXsidfH9z8WhPgPJ6+8i1l1Ru2dOhx94uCrpfMOOPWMs05bFcm5UumG3djr
ckvvRkGOZ/m8XeePRp89+vjs0Yc1RW98qvW5468FP6DLjE2olOpQtkrD54vT
xx+qRfzai8+zx2OjjiYsnrMfUeF2+IzAqaKPd7iS2bthPjZh9yyev+n08fsn
jzw87Sd8wj+oFFQuOCEelWCkSrSXwbqaT449VYuuASg66thbrBZ17M3vK49G
P89TrGIvZS892F4NvrIX9Ylcinpx/uRLa7wnPdGTneJJS/RkpXgyLJ70ZE+6
xZOmN6r5Oi3Jk5nqyctQ29mpnoT3nswUT2qyWqezkehJ4aasatsSp46sDmX+
2zWLKnOyJzXJk5bsWblsd2Gup1QWWeXphh5l7XIaEPplweG41570JO+SrCpZ
LcnGUh1q0lxTn6m6VCZCUuJrEh5wbcBgYECZQj1Ppx/5LHPGgEpHhVM3lq5b
eebVI09WkicjSREIJczQpc3QePDd9nsdfvg6O92T8NaTYVXcYk3y5GcayKkO
ZfvH+BFKSXzjWTJvn4ynMuZ3LUo3Cqsy3TAeKNBdG458z+K5eyX6GKW16EW2
vfTil9oDA0SQnDTFFTBGVpon8Z3CQ8xzhy3PY03wWBJU3GFN9Vr9VM5iS/Gq
y7R4LLGexXP+8thUVYswqILBKsXTjWJvezFmrXF6ls3ea33rybGoQvrdR6p4
DZZgGLQWiBLksO0v/FQRPi0lFYJANMviSX7nWThrn8fhM3tAVXx8Ho3wjvdz
e3td5UGDRfM2I8AyUvzJP/nZimdkOylOadoMa+Xbyxu1DT7xsgoUrVhaw3XL
+rPRL3LK7N2QmWTUGAwZOanTjctnn586/FClG0me3DRPquZMlWiQeuACqTVg
beHG0QMpnrfv8liznRjvzMr2pKAnreqY9AxPRpon2eK2cl/p1aLMf7um/gGY
wpVFaeOlC/4EcvYCP6YbhIh87zQyLrn44rk7k9/78AYgtDrVoinF73VYYi3W
T081tsFGTpYnKdlVHcr2IXhYu+oY+bI9X3dT6nTDfNi2KlWi7wdmXrPy8IvH
TthDJfi6qGJ6Y231blc/PFTAJ5lZChswhqzZL0zi97L9Sz4hTKS898z+aZdq
QjRpw8BMYdWmGy6nq8CcaoDIPn/2pkyraloxBIkGj7GtI52/ao/YQUyBMSwa
wzBGYb7athd64hPs8AmswrdEGaJPapqf7GvWVamqI4iwzJ/1h8ETyrJ2lzu/
sgOHW/ODpBf6TaBF77JXCsSlHkab++OOjFhPjtY2CqLVwFOqbA23JCY5wQ+Y
kaiUnOjOzqkWZassfLJOtaslxZt6aAmNyElL9Mz6eaOiAofDq/8r+1Mi1yhK
N9zmQwcOz9wZmxBg1kS/4RMdC05Ai8QglG1musFFlWsviy+fuPWiG/B1Azjf
5qR7tm468eJpcjnpYb5TnmdTfdjG4zlXzr04e/x5hvb3nDTVjCPaIB3aTHVb
q/OS5pQ1bJ9sceCziAT2KML37mFJsbrYyb+ssVRSsv3vzuzx/63pYqRalH7L
Bm8Jnl8W7nXke5z+TDfUdGcuj+DH4VLzJ3tWLNqX+LYIlmkGmdhApsat3+uw
2AISBA+K3jNU8QAD234v2Ics1OfaVSfSE4t6N/Qfu6HZ/JBuyLPqns3rTr96
6sqwKriq0Gl1pOnSGkuqUy1erV7pFeXlhKL1xy9AAmCAEEuKU8hE/vU7Bv7d
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
keptAuJba4X+LrUk6YZUXTlHqroSv0DTivyWJlCv5PYIt2gMuKWF/O+Z5APT
DW+uUfStxBFvR6pON65FP3EYU+YW/3xsupGpxi07BFeylqQMzWa2+mpfM1uZ
PkHMrWCRvgYKIFJfcnDwj/vD8JSQ/drdzKS+7IUEAdsJZckiAlW4Lj7BJsrZ
jCOGl6U6snKMPdSMSuozVBn4SjWo6oLJqcpLNz6eHmtGupGa7MnOMlql1CMz
EFqKnYU6Ib9gLSQmmSB7KhsnZDQi46XdCZsK7Yu8fB+bK00KHxKzhIF9G22K
6Prf21dTDVjSaVoh/3KtsumiRqUb1lQz9bbjmLhnTpYa3P6xik4sSOXgrZKu
Ytny6kcdr8SAg8uxSHNofkF5Ms9INt+8zdGdXA7p4izWFVLq+MrGrUQfc3xO
iSE64ESa0M1Q9VEnV9xeQ9KNbEXstmSrajYkL1BNW2muzAyP2RhoNgr9TSWU
Y0cil5eRHBCCtcKu8Iqq1MgBVaOcYI+ENzY+JyEpnw2Qn+4dBVFxPPrgpXS3
jtvsAlPKsIanG9K2IJ2YxpBX1YDglkXGkJj1+c/Tt+KVWUYnaaoxGkH0mzC/
OF267nfTneZqyAfgESEk7Wwco3SI7m/yHYpZphFL+7tPSPpI1043/IIgIuXU
zTJ2aSg2BwxXFPK86YbwtgzbkNOq7owyeKmoiebDecmbbrj/Lt2oHr0bpdKN
FB0mEDDUMzVM/Zha4qN0hWBDUmkZOMQJJWktc4EAWRupt/dXmBXIefHpMZtf
/hmVlekRpdINd6WmG5Iv+w4slN46SaIly6jK1j/pSMLQ4v5GxEl3sbyLzRLZ
JimDlogVuaeY2DuAqsCqcxn9K0V3uvmrUHIHbJ2TZ+T74noigfhJkqVQUn6E
jWhF6Qv+n043XKXTDTX8Mr2od09FCqsjT6cV6EOpKxkmJG0vlY2TzCxDvRt9
vt5ObQwt8t40okSN8s6jGz+NbEUaE4SBP205KZXkaHpch03QWAZoa066IQNU
DCZMs7+LzcjN/idj783OeqtuXZTUtYLj8UfJF1iL7QR4xQ8r4qsc1Rlq0IhK
OvBi7eP+SjeMxmqryxzyZ/WGb0mIrN5hEqKWP+rkNSjdsKbY1ZAVaDzbq6vZ
k5yvxil5B75K38HfRPZy7CiaSsdoo2FWOq8/1l6mHFV5h26SStdN3CI4ZWiN
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
9EOtmlgt3x/76U70O6ia21Ep44cvnjhi6b3YDw8TPuHf76YfaiXndf29cVyl
x37i8vkZTZuEE+l2bMr92PQnCQV3IjN4hyqEpMIqeXp0g6/dsJVK8TfS0IKg
l2TK5/vVTw30+Z3ot/DMScnMnLB6VOjcm5eecD1ThxaEeXRQJkjxss/hlxIi
396LT70T9xZG/258Rn4OVZ1Sn9gc49d8Ww4WBJECC7P/yh0Z8mIqHKmyNsdK
+3YM9X002/OV3HZNm/RX0/9tcy8xqXbvkX91zVPd1Q/PVDo+zc4gq1g44anJ
VPbVAvZyUqnKHQWudMhSuaN+6o7vtap5Wf1fOx/n3aLD0nl/22u1Gh79F/5+
2z3Vfy8vbYXZfrd96rvkHJnKWj9wwyaV22z2wrOhbwvrL7cJYVB80Te0r3qR
BxdH/usd/Pq0aNyuRMf/Lfsm5VDb8nzDsTatxsaLVFEo2d1O0iRWTw1vMLhB
qLmizCaUho0+yuIotjt5+C9tsLZHh5ZgI4rcPpYXSq2adgj07u5sg2zu5Lau
JcFl23FUI5uFa+bcL2Mt1mor9xDcsLtzYjIV6raiWMa4BmUvatW+vpl3ZVLz
Ru29Gnescwnx7LFa+WQNv0Sy94Jb+Gz/+pBP2ftt4ozVvumGjQdT4nrJ3rdX
K/n8hlpy/zaLowA9g0O9mrfP+VxoNX8PvlRffnlSPFW1Nnjg4go3/KqK6axO
yfbjHS2VX/KTJ83w8fK/lXCPztMyFhxtFPvX3Xu+LdXpd8mT+LkGQraq9eZc
1AYpS5CB8KuRzZt5r1m5AbJRnTw02CMjqlyPEy+DS3F1KckNrX25P1otUlBA
R8hJaXGFXbd8W/K4tLjjQoPQJKKaqhbMpSx5Wh4krj2YhbUxp71F89awMoo7
PalP5FXkrg5tTtXuGaY7yCXTG0JLqa8jJAqy1LKFj1cLX1sD1Bj1KZ8WuWh4
UD6rks2pzJ6oPbJBOHYN7unVqk12hqY+pMXdVzsnRg2DX3VPYtqY1WpFfubM
mY0bN37w4AEtpAVVVFSIm81msweKqFLDoMrKyuvXr7do0WLFihVCPFRSSUGQ
jaCgoObNmxcXF6tyopJil4ry8vJWrVr5+PiIM/agDR7aq1ulH5HIb4FJ8uFE
/6raRiVngpCQEztgwABontTUVE+X6NcloeRpw/S//voL/mR8fDzyhYWFdAn8
ktS2/GsT6fPo6OiWLVsuXLiQhEEVCZUURPokODgYakSn06kSopIgkg2AUOiQ
tm3byk2PR8ul0o9HQpa8vb0DAwPlnaIqqSSovJxvksQ92A4dOsAqaTQaTxfq
lya5tt+6dWubNm127NhB/7JoXI5+A7X36VcmEoO7d++iwc6YMYP+VUVCJQWR
SPTv3x8u5efPn9WOa5UkhwBAaUAesrOzmzdv3rt3b8VVlVSqLWVlZUGWevTo
oSJWlVySEIzc3FxfX19/f39JVTgepYqKCsGU2NhYtN+BAweyHQ05JCwrK/No
6VRqKARvISUlpUmTJkOGDJEc/QYqqSQn0uRjx44F3Hj27JkKN1QSxPfJtSYl
JcHEjBo1SpxXxUOl2hIpFsgS7NGYMWMktUdUJTdEHuzJkycbNWo0ZcoU56iz
KtUbiRZKGZ1O16FDB5iDqKgocQ+NVKodCL84AV+g5Xp7e/v4+ACKqrpdJWci
qViwYAHgRmRkpKeLo5LnSWE44uPjW7VqNXv2bPklVZmoVCsiyTl37tzvv/++
du1avi2aKkIquSaTyUTLCS9fvkydHp4u0S9KouZFZv/+/V5eXv369ZMcw9/i
qjpD8pcl0UinTp3622+/wWeQVHlQyRVBTjZu3Ai4cfLkSU+XRSXPk2Lp39mz
Z2Ff1qxZI1UNVOKp4qn0g5LZbJ4wYQKga2Jioio/KrkkUj5hYWHQOeqsDI8T
tVMLJ8qAQR07dmzWrNmiRYtKS0vpNnUESiVCHFevXvX29p4xY4aq4VVySRAM
qHfAjX379tEZtePxVybqlCC7D4JUQDa2b98uyVAG7IsqJCrVitLT0+GldO7c
Wbguni6RSg2Rrl+/3rx5czgtjx49ktRJdw2DRGsFxPj48WO7du1gFEaNGoVG
Le5ReJhyY+H8QtUd/ZlIPukuODgYjTcpKUlyxXqV778ykZxERUV5eXlNnTrV
08VRyfMkxkAps2DBAniJsbGx9K8caKiqQyUi4RM6xyQhIQF6nT17dosWLY4f
Py6C4nqosCp9fwLH5dpA/Cv3NxQzc+RzLeh+k8m0atUq+CpQOOfPn3e5uYNK
9UnySY8iYzabP3z40KFDB1rLf/DgQed7aEwKd9IZwcFKTvX5CSrVD6HxSpy/
Bw4cABTt3LlzQUGB5NDz8gU+qtvwKxN0AoTBx8fHz8+PdupR5eEXJzgJpB/K
yspgUOAl5ufnS47NniS1a1qlqq6InISnIfApjkeOHKEQuDgvn5tRv0VWqW6J
JtsopAIcJzTqHIeEJv/TRhvx8fHt27eHkMBXiY6OlmR7tdTvR6hUheQgUd5g
9Xr93Llzvby8wLI+ffokJCSICfxi/hvxlziOowAdOKlCyJ+PiNFosIMHD0Yr
7tGjR05OjmIihMr3X5mEMh8xYkTTpk0fP37s2fKo5HGSe4kvXrwA1hg6dChd
ktsRdbXvL04uBYC8SkV/xZ49e5o1a9a4ceO4uDhxUp2T/zORAhSQGMhPCk+1
pKREMRSSmJgI6wM9A991zJgxmZmZUlWsoYqKB0mOFwR8EJx9+PBhr169wDsf
H59hw4bhXzqPG+RdCoKDqsn4KUnIAxgNjmdnZ3fp0qV169Y4pqWlwaMQ8iCp
iOMXJlL7ZrMZLoGvr29YWJgaSftXJrk5MJlMtKhn+/btiu5oMUPGI4VUqaGR
zUGSTEigVaBM5s2bB28EcOPs2bMStzXq0MbPR9W7kTSepbgHOiQ+Pn7IkCFw
SyAePXr0uHbtmnMwCtU58Sw5T3VQII7S0lI0bbAPzbxRo0YhISEHDhzIy8sT
9wueikhWCryp0s9HEIDevXvDefDy8nr69KmkKnyVZPTq1SvofOgKSRUMlRxQ
YtiwYbAgL168UFxStw1VSZB8OINAB3VZGAwGyA+0CvzJ8PBwySnomapnfiYi
F1TeE05zqwS7xbz9lJSUf/75Bw5qmzZtmjZt2q1btwsXLhQWFsrfpq4Qbwgk
BwXuWqtAEKdOnerbty8t8/f19R0/fvz58+ehCuTgQuXpT0liRgQNY+FIS7GG
Dx9OwrBs2TJa3GE0Gj1cVpU8R6T/yTSQ8k9OTvZ0oVTyJInuxHfv3sFRbNu2
rfASnZcEqvRrklwA5Hkxa+LQoUMdO3Zs0aJFcHDwv//+K/FeUKlqV2f9FVel
Oqbqp1YS/MzJyQkLCwsNDW3ZsiU8EMjGgAEDrl+/LnwVGgGRo1FcUlVNAyGB
HAlLSlVHt4UjkZSUtGHDBj8/v1atWsGdCAoKmjdv3v3794uKiiRuRGh9qMRH
Pz3wGSrVGSnmPOBfmANwv1mzZgAd3bt3v3nzpkcLqJKHSagO0MaNG4E4xo8f
r45f/+JEAjBp0qTmzZuvXr1ajJ7LO7vU7keVpKohEMnQPH/+vE+fPoGBgU2a
NBk4cGB2drYk81UkB9BQZ1P8TCTEQEyYkTj2BN/z8/OPHj3au3dvLy8v6BO4
oAEBAX/99deLFy/Exg2KaZmKf1Vk6kFyXoql0Pyi4SuCUCUkJCxbtgx+JnAH
VEHHjh3hecbExBgMBrmQqPRzEDVSMRVf7kNevny5S5cuAB0tW7aEU0EWQaVf
k0S/RFFREQ1wKCbPqPTrkNASr169at26NYwFhbOTuxPqTCqViOSuCCQHCmT+
/Pl+fn6wLNAke/fuxUm5X0Hj6YJUN/KnIYU2AKMfPXoEARgxYgQgRitOUCbj
xo27cOFCcXGx8yOCBNZQxeNHJGEdKANwERUVBScTauH3338H5PTx8enXr9/W
rVsTExNLSkroKUVfliAResIZz4ozQskoloQ4gxrVZnmKYBrWrVsHDQABgCpY
u3btu3fv6JIiFoFUlY/Ozoa68OeHJjHnFkw8fPhwkyZNRo0aJcmm6KuDHT8r
iV4p5w5nyACUw+bNmz1WOJXqkdwZYudJMvSvYg+FtLS0ZcuWUcxkuJcLFy6E
myGuqpGF6pkUXJP77fJF/eKqc7BTl66au8FNegQexbNnz/bs2TNy5EhfX1/Y
EVoo2r1796VLl965c4fApuoq/Nwkn0sjP2M0GmNiYmbOnEndEfA5IRuQkJCQ
kI0bNwJ66HQ6kkwKjOwsJwoJpNvEJcVeP/J/6U7nEM0q1QMRj4ihycnJoaGh
hDggA7NmzXr+/Ll8aEySTbHDGTIcQiMp9JiqSX50gpPQuXNnSMLt27fpjGCx
6jP8TERKQExmkLi3IDlsBLgPQ0C7JHiqhCrVPynW9iouuYxL9uDBg3Hjxvn4
+JAFGTx48Js3byTHwAdN363HL1DJTgQcFEv4FffITbbCeZPf4/wguXMgrVYb
HR29adOmQYMGBQQEQGm0adMGkoDM6NGjjxw58v79ezG/gvqvVD/h5ya5RKHt
i70YJJkv8ejRo4ULF1IwKxAEpnnz5hSdbN26dVFRUcXFxWIvSKFA5CIq9zzl
RkourtV0oXy/z1XpK0Sj3pSnmo+Li4NygMn4/fffoSjGjBkTHx+vCIjqHFib
MrRji8rBH5SIfXL/4dy5c2j+wcHBFCCdTqohT38+ojYrdLUwE4CcvXr1atq0
6cmTJ22yvZlU+olJ7P8rycIKVeN24urZs2f79+9PQW5xnDhxIqAHKQoVpXqK
FN3CBDqE9pYPbVDGZZhTxdCGfMocXgUEAdYvWLCge/fu0BKNGzcmsAkZCAoK
mjVrVmRkJM3AFEGPnQum0k9JYlKT3D+U79Yk314cR8hJQkLC+vXrhw0b5u/v
D3FqxglCRYNiERER2dnZCvdSjFPI9yivPlgB6TTFBhAq1TXJ9YZiz8eUlBTw
F3qjUaNGOMLl2Lp1a1ZWluTYEVK+5w5pD2cxqO/vUek7kXw8HXgTtuOPP/4Q
g1lij2lPFlGl70qi/cptRGlp6fDhw5s3bz5u3Dh5ZHVPFlSleiSXU6fEdDsc
b9++vWLFijZt2nh7e8NSBAYGbty48dOnTzZZMAHFNBsVsdYn2Rzbsbm85OyV
kXp3iTvEXLjXr1/v27dv2rRp7du3p20yiOAijhgxYs2aNbGxsenp6YoHxb+K
YDXf8WNValAk+hkUnRXOHj4kgWLkCuUA6PH48eP9+/fPmTOnS5cuwLC0uBh6
BlI3ceLEHTt2REdH5+TkiDdIMomS/xyKIVwXNaSJZ0mOGoRmEB0dubm5W7Zs
CQgIAK99fX1hUEaNGnXt2jU5RKWMeMTGA62rauQHJbR30hLyyXKDBw+GAMyY
MUNSZ9v+jCQfz5IPUs+dOxetfsCAAcXFxYQuVV/xVyD5xGbFtGfKpKSkwC50
69YNUBQOJ459+/Y9duwYrdGQGwWp6rIvtS/RIyQGL2i0whlFKkY3xA1gmV6v
v3PnzpkzZ5YuXQpVAMevSZMmMAc06bp3794LFy48ffr0q1evxFJf+ZspQyij
+gUgKv2sZHNsKy/fb1rRd+GO4I1ACLOyshISErZt2zZ69OigoCBaFEYzNtu2
bTt+/Hioo0uXLkEvSbIeM9rV2mVhRF7tFa9Pcon1bI4NYSlTWFgIIDlt2jR/
f3+gy6ZNm8LELFq06NGjR4ql4s6qTKUfmqjPoaCgIDg4GIYG7Z3OUzgRlX4a
ooYM3S66iQ4cOAB93q5dO/n4dWlpqeoh/DqkWAKs1WoPHjwInxP6v3HjxnA7
+/Xrt3LlyqdPn4owU+Q/KEY05KT2RNUbuVsPSx6Xy0uw9cnJyTdv3ty+ffuU
KVM6d+5M0+nh15HdB65cvHjxhQsXiOny0EOEWeRepTwvSD6hS6Wfm5wD58pJ
3rWFvHxdsPPCMTkwyczMjI+P37Nnz4wZMyCicEppuQeOENf+/fvPnTsXmgr3
pKWliaCs6tCGZ0kswJFk0SfcdWCCU9BFERERU6dOBe6A5mnUqFHXrl2XLl0a
ExND86wkbk3U2Jg/KClCWcoHQ9FsAwMDfX19w8LC6B61o/JnIvkkB2ROnDhB
c2Pevn1LJ9UZ+L8mlZSUPHnyZNOmTUOGDIEpB8TAEShj586dkA2536jwK8TY
qJh+qfqZ9U82WexQ0clMl5AvLi5OTU2NjIzcsmXLrFmzevfu7efnB1gBFrds
2RK8hiMXHByMS3v37n327FlRUZF4ofwnxAudT0puhjakqt6mSj8fyUdI5cjX
eeWvQnIUo2xymCAfnhMn8/PzHzx4cOTIkdmzZ3fr1g2iSyvICCZ7eXmFhIQA
I0OGgaM/f/7sMgyCSnVNzhpAdD0pXEp5lxThjmvXrgFaAnc0btwYbIUjGhoa
Cl80OTlZ3bnpByXBdIUFoX/hdbRr1w4GaPny5aqZ+JlIjhyRX79+PRo1eP3o
0SNxVT7T0lPlVKl+CIyGF3r8+PFx48bRmk2aujBs2DCYbFxyqduFFyFf1eWM
R1T5qU+Sa/Lc3Ny7d++ePXt2zZo1U6dO7d69O+21J8KQig1/p0+fvnv37vj4
eNGLKDktv1UsAZYv9xMjHc7LzCmjCGJZN5+u0i9KeXl5T58+PXjwIIS8c+fO
JOQQbwqSBhjSunVroBJc3bFjx6VLl2Dm8Ag9K19sLn+n88Q/m4xcFsPl1WoG
FgW5A1+/IInAU1QJJSUlDx8+3Lhx46BBg2iTUFrLAyRy4sSJtLQ0McguX4Am
tI1ilq88I/iuCHXlrPTUMbL6IXDk06dP1HswevRonU7nPBxGeZcm5lduNQ2E
qE0JRsj7EMhhKCgoGDNmDPRzly5dPn786JlSquQglzZOcrWTr/hX0V/krBgV
ClOEtIVsvHv37tixY/Pnz4cC9/X1pR5CSMLChQtjYmL0en2dfGQDJmdXwfl8
Nf7GVzWes18hum1dOiryM/JwYc5G02w2Z2ZmJiQkADOCff379wdsJF+Len3l
fte0adPCwsKuX7/+4cMHo9EoyqZaVZV+UJIvyoBRA/oArNiyZcvMmTOBpmlz
cwg/WgH1luOIfwcMGDBr1qwNGzacOnUqMTExIyPDedJ4NY3aXZOpvikp2rV8
9bTaAEVti2neNIET+ezs7HPnzk2YMCEwMJD29GnUqBEsF1DkyZMnU1NT6UGx
ON3mWCEiH0mRbxOpmK7jXP8u/1V5VBck+A57NHz4cB8fH3D29evXYt8WMdlG
HsBK5UVDIzFFVj45ihra27dvg4KC4GcOHTpUq9Wqk+UaCJHpcbkLhq0qiaBh
8lnQ4g3OhhL3v3r1av/+/ePGjQPrm3OC3kYeahw2Ny0tTf5bdfiRDZtssilJ
1d/pjATpjNURUVZwRN7VVk0HqeLliv2trDykT0pKSlxcHKDitm3bFixYAK8J
rRisbNKkCblVtLQWGnvMmDHLli3DndHR0R8/fpQrASuPgi7/oVpUkEoqNRiS
zx50blm4VFhY+O7du8jIyF27di1fvnzkyJFdu3al/T5ackIeHg7+xbFHjx6T
Jk1au3YtWs2dO3dEL5xz2xTnFd0C7gr5VW9W3r/xa7ZHeWe1OyUJBfj48eMD
Bw5MmTIlODgYyLFp06ZgYkBAAKzYnj17bt++Ld9HTPFmQYpKVqhxMr42x3zU
X5Md9UOKkSbQxo0byZBt2bJFzheaR2F12sdT5U5DIEWDJWBIzN20aRMaKVxN
ZMjr+JXdywZC7na/lRtT56vyndSkqnoV7iXM5ZUrV8jIkm2lifqdOnWaMWMG
IMa///4ryTxbgjm/sjC4GyFSwAeFLatJjcndCTkrFW8W53Nycp4/f37x4kU0
UjArJCSEovTQVhekkGm+OjIdO3acOnXq6tWrz58/n5SUZDAY5JMK5L/lctNw
+bfUtKZUUqkBkMs+GefzUtWeHDSQ5OTk+Pj448ePr1ixYuzYsRQehwLw0ows
0da6d+8O53bDhg24+datW2lpaRRUp5oiKcIoVaMifmVlqyAFBBCr/1z6/Pi3
pKTk/fv3p0+fBnegG8E4aEJvb29kevbsCbZevXo1JSWF+uVsjsCJ8ikBYhil
5iX875+pkjMpNvGMioqilTv9+/dPTU2Vc1+0bvkAh8qXBkKiCRNHMjIyhgwZ
0qRJk/bt20PZugwmo5JnqZp+MDnukOtJMXys0+mio6N37tw5evTotm3b0kR9
ckr79u27YMECoI/Pnz8rQgG49LG//4c1bHJpd6pxEuTTSuVOjgKJyD0NZ8CI
tgleoFVS+Nl//vmHFnHTDBAvTgQSyf/BSVjS8ePHr1y5Miws7NKlSy9fvhRz
opy/iMCjM5aRqm4W7654Kqn0Q5DzOKDkyk1VQACx2T2dAYiAboRZPHr06Lp1
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
5X25v+Xw7avNrUpTPubPCqf3W7brlWXrqIzXZU6ePnaXTSiWJLtOS9vnZlfi
xo7ycp+5lKUmE61okDgAAACQSf4dVMbRjnFuJG7kZspfSmetRjAGlht+gpJ5
+Ha83tHv2A59/C7bxi25jart5bszs7dpZl/U/HDxK1zdSMcN9Vj/KAAAAMDf
U1r5qxqu0RI7zMup4td166orA+B2c1h5w2PLsS1Fn0Q3F+2wuk1TWzfTz7a9
cOHqyzBZpLMGcQMAAAAZEq1uBCNZ1+Rmi5Xid+tURr9da7CaUhfURMtqGPtc
FjhaDVMtmzfTB36+6A+LG0545xsAAACQDWHckP0Cyrg9Mz9XeZfbKCwc5D/u
+7XrlxwXPhwU3teXgpo/po/f5XouHC7n9/ML1cVPh3MzR7mp7ZtrHW7cMKml
DeIGAAAAskUp3dOmr/1ZdLdvatXT8mr9c35vbbk+WMflpZPbWvxGH7+vLZ2U
Vo5Kq/WVxZ3S6kmx0Khu2LLSNORtqYgbAAAAyJx4EBt99EZwoh+ddqIfk+XQ
J9a1I/eweUFPevD2t9r0+lfh66NTLxZZAwAAABmitHF0ci492sRxe5AqFT2N
PpEeV3y1RbR3AwAAAMgyLYkjMW0eJw6dOFaJk0LRJ9QT4gAi34gbAAAAeAqC
uBGFjoEHoqFvUPGdVQNT8tSYlbi28fV3iBsAAAB4GnQicdxZzEimjHjnxuMP
0Z9SDV7b5IYZ4gYAAAAyLzH0DUJHcrg7NHeo8W4foqe6uhPo4isMAAAAZNuD
44YafZ4av1JxAwDwb/0BZ9Lj0A==
    "], {{0, 302.}, {1061., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJx9kD9Lw0AYh5/Ugn9QFOzg4FChQxelOkiHLtYhdJPUgtUpSdMgtEm4RIq7
3Rxc3cTFb6BfoZuC4ODkRxBBZ99LkHSpd9z7Pve7H3fvvVtOaPULQLwgwbJH
B0rZl+012XSC+NwPvF4rSDzfU3XHEHGiA8ZEx2INhkGiLLNZPumeluc/MEjP
wXbjiNlDXD9vmfd1+x/frLHY82JX8qesipLH5cqScMnPuKrZybiheZREifCR
ZnVsHQr3hKv+FDtT7EZK+6+FG8PBhZvXzbIXdNqSdcM2ibEwaer/Z5bwHurf
MHeTa84tPI1h4z3XKnewegWPz7mW9ySylZ1KRVmFfh++HmClC+svsHT214gZ
tZXT2kxCmT4DPFFaBLjsCO1RY5f9X2IATGE=
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1061., 302.},
  PlotRange->{{0, 1061.}, {0, 302.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.932294931177215*^9, 3.9322966890432653`*^9},
 CellLabel->"Out[1]=",
 CellID->824677712,ExpressionUUID->"163ec632-00e1-45ae-8417-eae17f53da71"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"292ad27e-961f-4d45-ab0b-bf61b9cc4fb1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f4ca7337-63f5-4b65-9fd5-7ab31f37d897"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"e54c6aa7-afd8-46cb-b6e0-6c939df3bfb7"],

Cell["Anton Antonov", "Text",
 TaggingRules->{},
 CellID->226242360,ExpressionUUID->"63084296-33c2-4cef-9382-e2e30c46eb4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8aa4c381-3527-45ed-9318-b0eb7b05ae0e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"4c44b8f1-6b82-4e7f-aed1-e52bcf580aae"],

Cell["https://github.com/antononcube/WL-ClassifierEnsembles-paclet", "Text",
 TaggingRules->{},
 CellID->317309646,ExpressionUUID->"08cbf58a-648a-466a-b08b-36fe3815fffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "460c07bd-2721-49e4-aed4-f31819b514b3"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"4cca2fdc-210c-43b0-b9c4-55a8656986f7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"b5db40ac-0e33-45c6-b894-3815ded84a77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8e512d8c-24c2-4829-9700-3d690dd0f32d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"d57ff338-87f6-4959-aa44-5c26208ad0e1"],

Cell["Classification", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.9322512166534243`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"852b81e7-b7f3-48c0-90a0-051e90b267c9"],

Cell["Classifier", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.9322512193966513`*^9}},
 CellID->1988870841,ExpressionUUID->"acd5a1d8-249a-4829-8723-16a0ff2fd6b7"],

Cell["Ensemble", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.932251222590989*^9}},
 CellID->1641443110,ExpressionUUID->"aa0e21df-fe15-40f9-af57-d4b2ada9c23d"],

Cell["Classifier ensemble", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.932251230050658*^9}},
 CellID->1645865626,ExpressionUUID->"4ff0464f-751f-4524-a76d-9a07f069ba65"],

Cell["ROC functions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.932251257714851*^9}},
 CellID->2034452854,ExpressionUUID->"3115944d-4466-4a52-9777-421027122fc4"],

Cell["Machine Learning", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251212710322*^9, 3.9322512613565207`*^9}},
 CellID->1527144838,ExpressionUUID->"193a7a9d-0b5f-4b2f-a83f-8ce550fb66d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f155a805-e1df-4b96-a457-b05fc8b8ab7b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"d711389d-5c32-4018-bc34-395f9d4619da"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
           "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Machine Learning", {False, "Machine Learning"}], 
           "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdj1EKwjAQRBFaq1XEI3iBHqIEhEK1xfUCMa5tsE1CdvOR2xv9Ef19zAxv6rKCHDhOCM\
susAtcQSFGVE+\
8PxaUtZoY9iepRm3w0KL0RpshdRrGmWhdB7azZK0qWPXeOvQcoRSScbBeI6W1zrG25jdbCDuF+Q/\
uGsPonUeW7wasaxMh3AiT00YESsHGJEPKj3Ii/MKPSna2JrHtBckGr/AaXfrUSzUhvwDKDFEH"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->86768319,ExpressionUUID->"2f0db64d-5c7b-41c2-92c8-e76bff8cfa7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c5437e80-b8e8-41f3-825b-b90e180e4f40"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"19516c81-da12-4b6e-b2fb-f4436ec366c2"],

Cell["AntonAntonov/DataReshapers", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251395140204*^9, 3.932251410947344*^9}, {
  3.932287269445949*^9, 3.932287269447288*^9}},
 CellID->635663914,ExpressionUUID->"fa2a886e-ba58-42f9-b2c9-754faa9b346f"],

Cell["AntonAntonov/ROCFunctions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251395140204*^9, 3.932251401557933*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"47c5db9b-217f-45d5-876e-1dd05b324635"],

Cell["ExampleDataset", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251395140204*^9, 3.932251410947344*^9}, {
  3.93228727027602*^9, 3.932287282560349*^9}, {3.9322879753727427`*^9, 
  3.932287975375061*^9}},
 CellID->841305104,ExpressionUUID->"d1f085ed-04bf-4f08-bcc0-a66fdaf5594c"],

Cell["RecordsSummary", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251395140204*^9, 3.932251410947344*^9}, {
  3.93228727027602*^9, 3.932287282560349*^9}, {3.932287975929181*^9, 
  3.9322879796096077`*^9}, {3.932295772358234*^9, 3.932295772366829*^9}},
 CellID->1474302682,ExpressionUUID->"e75f3a61-2be4-4838-ad37-12d7d07ffe09"],

Cell["GridTableForm", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.932251395140204*^9, 3.932251410947344*^9}, {
  3.93228727027602*^9, 3.932287282560349*^9}, {3.932287975929181*^9, 
  3.9322879796096077`*^9}, {3.932295773544675*^9, 3.932295775808528*^9}},
 CellID->1591639982,ExpressionUUID->"a3d6ff29-56f9-4f6e-8675-f80d167d7b67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eabda8aa-3787-48f8-94a2-44eac8f129db"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"0a792bdf-7ded-4b98-b3bf-0c520c199062"],

Cell[TextData[ButtonBox["ROC for classifier ensembles, bootstrapping, \
damaging, and interpolation | Mathematica for prediction algorithms",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://mathematicaforprediction.wordpress.com/2016/10/15/roc-for-\
classifier-ensembles-bootstrapping-damaging-and-interpolation/"], None},
 ButtonNote->
  "https://mathematicaforprediction.wordpress.com/2016/10/15/roc-for-\
classifier-ensembles-bootstrapping-damaging-and-interpolation/"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.932251334006723*^9, 3.932251388557239*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"d33fa893-3744-42ca-b53c-18b219621257"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4d3f968f-32c1-401e-9a2e-f9ae2d736b01"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"7aabddcf-4dc8-4318-b4f9-92448fcc048b"],

Cell[TextData[ButtonBox["MathematicaForPrediction/ClassifierEnsembles.m at \
master \[CenterDot] antononcube/MathematicaForPrediction \[CenterDot] GitHub",
 
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
ClassifierEnsembles.m"], None},
 ButtonNote->
  "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
ClassifierEnsembles.m"]], "Item",
 TaggingRules->{},
 CellID->647298679,ExpressionUUID->"d479ca16-37f7-401b-b954-ed22946e4fe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "918a18b7-a5a2-48e3-a2e5-d49b8a704515"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"3ec27064-b3ff-4d2e-96f1-093ddc66a7a7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a3570f13-ac12-48ee-ada2-a57c41f2ea7c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"8a03faa0-adc8-4d4f-bdf5-66647f69f612"],

Cell["12.1+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.932253142931239*^9, 3.932253143358123*^9}},
 CellID->1409289330,ExpressionUUID->"7589be60-3a0f-4dde-ae08-0b7b586ea578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ea881584-9d88-4cb8-a560-9b83cdd84646"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"bcb8a94a-b9db-4f4d-9b6b-88b566b55df0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->173741120,ExpressionUUID->"eba9570d-0a78-4617-b004-456f67c58633"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9714a68b-4064-4a1f-b050-7f81b52b39db"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"0ff438df-e010-452d-b145-1dd7b3eea228"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlbYWym4fsXc+gqJOYppWVE/aMwRXRA1JFDuV+PsFtYR2Tz4+\
jo99nOIphzXwqBCSvWfrOYe07FGcsDumtPqSxJACEkmj4fUX2925Ub7hKd1sGxb9p2khAeGkZUjCg6\
KuIAPfntBpVAGKHjuvsAuTKsaBZt3jA60OobDozyBWou4lRv5Of4ax+m/N+\
3TRvu56jTfa88I3MFYXzxHlsKmdseh4hPfSDDbMaaWSPC5Td/\
osndED6unAeztxRFnh2QzhgZiubpQfNJWPObxVmtFZh3xxkBV6DDYJQ/Nz6Sk0VTr8Fa0/\
GkW4kNN5afVtdOBeDkjGO4E/ow1u60Yo5D9Skaw8"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->1636727567,ExpressionUUID->"caaf7efe-bfe2-4b19-a435-c7bacbc3b3a3"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1d7c6af0-60d5-42dc-822c-300f2f506315"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"b6d1186d-a313-4952-9b4a-4e052aa63cdc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj0FqwzAQRXGxmzQNWWSXXS7gQ7iCgKEkIeMLKPKEisoaoZlZ+\
PaVoSHbz3vMm27TQgMyB4T3i0pSaWFlftD94viouP72LFwPWbFwveDEz/\
XxxvVNi7cHTYmy4Hj08egC6fg01tdMCbPMcDA0JSv+\
7oOX2SzQv1buXZJ4iswfnQpNhXJLBAWdIpuqhV0fBXPKKHYBYfVFFNDGFj6NclH6WMK5OdnA+\
BqXWq7PFMu2vSGTZofDnMqrV+sCyh/5oliM"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1362184146,ExpressionUUID->"2fc2ef65-0f0e-4a30-bf3e-dba4b7b4bd87"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d7116096-adf6-4572-8a91-55c74770268d"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"6167d230-c7ca-4f71-bf61-30312e74fd07"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAMhsearM1Wxi679wXyEMFQCC1tqPcCjqswU8cylnTw289h0G3spv/\
Tp8Ov7rnVtebsQT+dhaNwq9fqE+wNrtMDVUdHhdQ9w0zT6jtPj1RdpFw0J2QYEW/\
0a7xv3waTjPfgdwdIATz9J3d3qzzKdddZC0R/U6s3Q8IIibN+\
VzhHw2503nHeg2FJUIz1ObLDQNR0wjgXwy410MscSK1a/doHhhQTsFlE3XQhaxkJSrkXJVSO+\
lDKU703nuAHLr2pOmEobHsBQkkWPnIs7xqM9cBfyEVv1Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->2053264802,ExpressionUUID->"b60ebba9-d0e4-4266-a2bd-d01230b11692"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "63883e6b-48a1-4ddf-b4f5-6a3e20188128"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"176b17c1-c48c-46f4-96f6-90de33029b86"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0+VN7AQ6cLMSR8ABcqmbbwkotreK8gLs7m1j1elb+\
abpceQhehkeAl0AcEc/A2Mlu0qpI+GJ7PD/fzHzj4+GE97irFfC9S+\
8q7yZ8P1lCdgN58cR2z6UlSS91UNri6fpedGx35hXQ/dkMV+EaxHx0jplQrJAKgm5/\
JlZTvKNzx47mUFZKOCBB0d3ovziRNlNovQEbTc+iZc92E1CKPOyT9olwotiz/TMjymjdWT/\
zL51kiWiBuaW0DCsnUTNZsBq9YZXIFDiWSwOZUzXLESwTumZYkD6wApXCldQLlnsTNoUiDzsaptGUl\
Ia3YgHvhz+/\
fmOJAYJu37IcyCt5Iq0Sc1lIOqtt0lE5LSs0zrKcgLPCYHlPI6RIYMGIgNcyA6EqOXPYxN1Al9o6oV\
RUI+R5i1AYYHCXQUVm7/j4Ag2kusA53LWNscOpyG4WBr3OqYyDD0bU53ALyhRx/\
TlqNcexrhfCLChg8nzrIcojMe57+PE9rN9bDwezEIaQzQift0mvfRmkJZWQy8/QUIRc7XEqBuQbP7+\
O7ODYOywpz+wfyQxOQtXFNR27c+OhfegHHszFoiUmf8Op3VSwxs/jBGvsR8F+k3qLcLMn02Tang+\
TQwox/ogqT5B4TByg2Tg4vRXKxwZFQr5KlMxuiFqBHNQkSQBMGd/\
561QrqaHBdVmBBjP1zqFuJoMPtxAnvH9lAktczUc7SdBsXkai22aI/\
isZ6oRegpHEmJ1jm17vgXBd3NNcroveOxPKwmPtePDS9oO/3MW8m9Z+\
gsqX2u50fcIPUu3AVIa8xmINjnXN/bUF+nlGibekmGr6mTbxtsLwKdnuJ9QkG8/A0uRnMK8r+\
suu4hT9BTvOvf8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->1306803571,ExpressionUUID->"7928923e-0275-4dab-8701-d789c500fd90"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQBpq0SRO1Fy70ZHHiQF6AS5VsWojU0ioO4ux6ZxMTZ7147KbLibdAnHgRHg\
FeouKIeAbGTnabRlRiD4k9nvnm75vp7/d4k7tSA9+98K7wrsf3khnIOaTZI2ycKSRJc+\
Rggdnj1T17go2x10D3nbFZhmsQ88P3RmdWLJiQ0vjc0XtrLJYDcwNISp0JLAotHJAga6xtng0VSm3Q\
W8C1eX9t3cRGAloTyh5ZDIUT2S62TkkjIjxZPfNvO8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLl\
lqAJnIS2Yy0geWGa3NUuXTV/u3X76zMXz0pIovmcfwaywjQ2PTlZHKM2MXInqwEFJJmTNB195+/\
oqsyn80jGij3IEV0iFbKjeL/mrVRBufVoUKfrZqFwESC+SD4kiBsqDISW9hUpUpOt+\
DkxHOXH2gNHHTNpjADUgfziutFAptSgod5QxS6iMlIXC+\
MnuHtZ60kCpH3snJtZJQCTajXYui6bmYQ12Dvi5mgkmhNfLuubEwotpN4KYmD+\
4PhJxPLSWbUovbr60oz+AatM3i9+e41uzGnp8LO1U5Jk/vEKI8kvc+\
ws8f4ft9h3AwDm6ozWORKo9Js35pjxZiClx9gorGBLXLKXBI1zi/jrHd986ExssHkmkPQ4fEFR0bE+\
uhfmgFjk7EtB4e/oJTj4hBFc7DA1BhdALGOv06yvV/\
MkgG9fkwOSQ33TdGp4mhWSPO0AwfnFwL7SNr48AcJVrJOVE/\
kMnCJqv581GuVQ5VbBcF5GAH3jmTV9PLD+6H2eOtS2sKsK7knY1kaI9cxGHEatj/\
KyHqSD4Dq2i2No51is0t4arIJ0TCWPzmqdAI/\
2rL1kvdF360GfN2anuJ0X6R4wYDevwgDnZhCTkWrd3PS+\
6vEMigk3gkxVFOm3Tt804Ylig23pqcZN0xIG0oCZOyoN17GRfVX7KLBoc="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->1132359928,ExpressionUUID->"2f85c653-c3eb-4807-b041-f026a381aee8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpiVpkyZKQWIFLCxWgJoLsKkaJ4VIDa3iXMCdeZNY8diDn910uAh3QRwBLo\
FYIs7Am0lmGsKP8GLGfj/f+/vss6O+aAqfaxAHl8FnwffFIV9AtIQ4uYeNC4UkaY49pJjsrc/\
JPjamQQOd70/\
tqjgWYvFwdOvBGakZgrtRERQeralcDewt7fexM4M009IDCZLGxuvJUGGkLQYHWAGIyr+JDQ5aE84h+\
Qyll8kBts6dTEuM/\
bVafNzjC2sRmF8oZDbzyhqmEpbb4FgmIw2excpB5HXOYgvIpMmZTcgeWGK1titl5q+\
Ovn74xCZySXoH7wKgR+\
Ytg92y2POF99kJS4oP4uKEgY9elN7cAdVHOTgWkP4bFxZZYyg85VWaCTAxg1QqjaI7sQ7GJrEzClT1\
Fo8GMlrOnQ0mpurbr53ML+AGtEvK9eO0tuyW7ZhIN1cG+aM7hFJezvZXhC+fi/\
X9DqE3LcJQB6YyVgF5s9a0x6mcg1DvoZoyQR2ISGqINzjfTrF9FrxNpVfRX4ppD4FGIK9p25i5ALWi\
VYxvJuc1t8RLsW5ThfMvdlQonQJl04A6z82fD/ig3h/\
zYwrUfWN1zC1RETwQyXujG6mDLKKWbHrMtYqWxAvHUsqCKUrDpaVePBsbrQxU2V1mYMANgvfWVOQWD\
3YT7YvWlbMZOJ+LzlZBdNUuS65idRv+\
qySailmAUx7irW1dZHNHuG70KFbrATTPpUb402h2NPVsxNPtnH8v7pBbHVKDWzzoi97YkF3mCLtsXP\
vM5CJcI9Bz0uEByXBs6LnZRL0TFi8NNt5aQ7LuFJCucASzPKMH6qq8yT8BVliw1g=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->573230182,ExpressionUUID->"3b10beba-fa0a-4060-b350-8cb9a3f89753"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQJlk7sZPIQShIwKlBgDistbc97AErnsS7lhxiuSMixGHpzNTYjXu6R109yc\
4+BhceAIkLB16AE2d4AK6IGz/PQHXbM5lEu4JDDntYX9zTXfNV1ffVVNfhTp+3uSsV8K3TwuWF6/\
PtaAHxEpL0DWxNJNJOe+wgw3Rj9ZxuYmtWKKDnezNz5R/9Nv/\
o3KjUioxNhJ4XYg4MS6QXWWx0KueFFU7SagM7M3E1NM8A6dXdM8hyJRzQRtpaI7EjibEyWFjA8wkPK\
NENkDa2IlCKwLbpxSPhRLqFnRF5D0Cb9XHnDJ65cL69Bv9xI1oYg8DcQiIzucdjMmWlKSzLRazAsUR\
aiJ0qWWIAmdAlMynZA0uNUuZK6vmjnd+//\
YlFFih0ZDlYJGzQjikTC8UwXkBCHCXMCVxiMD4xiUwlWZ9PKmaMZaAvpTU68+\
8iOEfYt8w977eTvYedoNoq2a0zMV/\
x1x0Wzhm9eqhNePvDqXAL3uNldmEUziCdSL2shMQDvjBX3FnyHS2EFbGjfLB1ZguobXZGRruRyKQq+\
T4nrmJgXGhkU2tqo+5QIASvPtijUpN9TMHujY6nVl4SV1+\
NUzraiwprKePPhSqAd09MgXB6CbaupdaN+Lred2SUsT7x2eNhWNvnD3/49PzLPwf2E/H930+/+\
G1g3/mYt7/75udBVaq3cHZW7HgG+\
ZsrqR9ZSB8EdmqrHpWal3IqksSr0R4JhT6ht0Kch3kOxJGOgVjnHe/gidDJnZHJN+/\
fheTdo1DDxpavZW/IftCQvWbolZH+\
6X3fElDSqbChC4w1OqEUNSGKyLcqai6rFNCbJpCDTkDH1ChudCQ6k1luLJlpo/\
t5caFkfBd11ZsBhqhPL74m9l4XV6O43m0U102aXpkKG/\
jb2AewumPEkmplRPePO9YJy8KVE4crFtflRw58zS0oCkW++N6JsTDWqfEXa4MFES/\
n1hQU6wZ2H1tRTuASlE3D759BbbkXLukTYedSY3TQiNrvVzo3EH79xf/+\
ukbozbwbYmAmEllg1L7WdJzR2MHlc6hEJ6gtThcyJGucPwbYPSycySjJ+CXJdI+AVBQXtLzJbMd/\
OyRMPQrxB5zEJbYqnP8cXCqoXQ+\
1ZqEOdv0fDaNhvd6P9n1xPzEqiQyNSuCABrPe8SWVeYD0QPy9iD7vJY0nlkS0wCTFYrNwzj8YayU1V\
CGeUscAu6raavjib78w2j7vUM3QcONKvttIjWbE0zA3YTWy/a+8SB+\
9ACsdJI1lnWn71uaK8mNqe0GK9ZfyApFundQq8febMb8kw2367otMY6Ms+\
rwX6j635CBQ2D3UJS8uaD7r892oQDIcaxqW166vN/2cjK3PjKa9vaoFnJU5jdfT0Bv+BeV+FzU="},
 
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->668028432,ExpressionUUID->"a735fd9e-5756-4690-b210-97cfad504eb2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
TSa9cCoXwY1DeIVO4v6QmZR0osz0imKvEk1lyaOV2pon4OHgLTgyPANrJ3ZCCgy+\
eLUrffvzfdLoZMib3OcaeGsWfBb8kLejNcT3kMgX2JgqJE9z4iFFebRZy2NszIMGWr+\
c28diWbj5mzurpRMpmwqzCmIFbBmU9kNlGObp0uoCoTMXj2P7BEjHegtIMy08kEM2tihnFwpjbTE4w\
Lspz5FS8+3xJjYi0Jpg2nTkQnghW9i5opwlxPEmzL8cRWtrEZhfK2Q288oapiTLbXAsE7EGzxLlIPY\
6Z6lNlFSALAGpjCr20hn5rHaGIV4zgQRaQFNgU9snZh2zfg2OfB6cEZrFlqwnj+95/\
8Y6mBhpF7SuBocnYxHfr5wNJqFeutdO5FN4AO1k+f08r3f2y+ZuhFspg9GrHULpL4n7HeHb1+\
L7sUMYzIs0yqzmIlEBo2Yd6U5SIomrz1BRSFAtHgsNyRbn+zl2R8HbVHgV/\
6WZ7gXQQMWSzMbCBagDnYKMhVjVwuHvOM2cBlzh/IPqCqRXgGz7r8vc/qNxNK7t0+iU8vQ/\
WJ1ElmQFHkjAg8sHoYMokpbSOIu0iu+ZJM5SKoIoIzMt4/\
ztxGhloCpuloEBNw7eW1MJlZ8e1DnknVtnM3A+5729dugWzUrdYSXs/+\
qIODGkJOUh2TPrHpsHzs2YLxO1GX/zSmiEPxFzEKmZ4a/\
3a37WWzuyOqQG90Qw5INJIfPMEXQ5tu7I5DwsEeih6EUBaePE0EOyTbpzFm8INj5aQ77+\
HJBuYwyLPKOn57a8lL8AfK6hNQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->509350108,ExpressionUUID->"b1810657-48bd-4e25-96b6-71559637bdab"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["PacletDependencies", {False, "PacletDependencies"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpkiZqJeCEBLI4k75ClWxaiNSSKo7E2V3PJla89uKxmy7vw9vAW3BEPA\
Ozm91NKAWxlx3PeL75+\
zyj4yFvc59r4Eez4LPgh7wTrSBeg0yeYOtKIWnaUw8pJgfbc3KIrXnQQOenc7spjoWaP78RsQbPJGR\
gJJhYQeHTnYvN2N6TfIj9BaSZFh5IkbQqv1cThbG2GBzgFmKyj9DGVgRaE1KHvCbCi+\
QIu5dOpCXK4dbMvxxEK2sRmF8pZDbzyhqmEpbb4FhWZaYcxF7nTBn0Qmu651jIJCWETJicCSlV4Sh0\
5YJnbJsSEq7wTDgg51gHCZJtlF+\
RGthHqxPKh2GO1CgmLTPWMwefAgVkguLWBZ7xwbV1MDWJXcB900o8Hot4vXQ2GEmF9t45kV/\
BHWiXlN/P8+bmoKz8WrglFRG92CGU+nKUvyN8+1p8P3YIJ/\
MijDLLuZAqYNRuLL1pKpbA1Weoh0pQRzwWGmSF8/\
0ce6PgbSq8iv9STG8C1DFxS2Jr4QI0hm4xqYVYNlTibzkNhBpe4/\
ybCjVOv8CpWtBkWv2jcTRu5NPolEIN3lstI0vMAw/\
E6pOLO6GDKOKW1HkZaRWvWUJkSG05YBLT0s7fTI1WBur8ZpQNuHHw3pqay/zZn6kOeffG2Qycz3l/\
ryh6XbOSmljT/7+KosmYFTjlQe6JTZntB8ptsy+Iy+\
UQ2pdCIzw2ngeWZj789X7Oj5XXiawOqcE9Ngz5ydR4cJkj9LJ5vZHJebhFoB3SjwLSxamhHVPF3SmL\
9YKtD9aQbjAHpDcbwyLPaCttg/8CfOuqyQ=="},
 CellChangeTimes->{{3.932253147318411*^9, 3.932253147435182*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->777448214,ExpressionUUID->"3f657cf3-46bb-4146-a989-e839ebff2cfe"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCMgIXgd0cXARJQaRL4SKEeBJtAlIocIgEQYpkdTdHLri3e9jZk3\
x+DDd+AANu8gqpXNsP4DZw559nyOwd70QxP0gRNtydmZ355pufO9ofQBtcoRB2p7nLcjeAvXCJ0Qrj\
5DNqnUpiSXviMKVkp7ont6g1yxXy/\
fbMXPmrF8OdKQSR0Ylc5FY4yacd6szE1cg8QWKrgzmmmRIOWZC01o/\
uHUuKlKHcIk0hvPG8Ta0QlWI3e/\
zkWDiR7FJnbEVaurjVqDtzfOJKfY3FhUtjCAO3lBSYzLsLZBIUJrdBJiKFLoilxcipIogNUiB0EZiE\
7TFIjFLmSurFw/0/nv8enJlYJpJNOD1C51hBlUKs1g9zjsSPPUHbgG9Tp6S3Arw7F4sq++\
4od87o6tKYwB0oiLkOLcaonRQK+lCkF0bRDJNTqVc1+\
XQXluYKnGU44VJYETm0RK25zbGx2R8b7cYilaqAQ+DcIwxAaArOrWmMuiNBWALwuI8LzfYR4+\
6NT86tvOR6/TpJWNULc2sZ1A9C5QjdM8NZTy/RNpy3buDr+tihUcZ6DmaPRuXZPv32t+9+/\
Pn90H4lXn785ae3Q/vFl9B+8ezVsG6vLT/7FVGeTLhfle6hxeSbbaKaB31uIseycxHHvlbtsVDkc/\
u8hHyUZch06Qi5FtDxsR4LHf9vvELvzFic6MT4ptxIQ0SrhTU5h9qh7iMrilO8RGWT8vdp2Fj2ygY/\
E3YhNYV3N4J6eV2oDQ9vXvvfh2sP/ZkPwwnMRCxzCtvXRZmkYoEgn2JdNXa1C5FQGK/\
9vBtS9yh3JuUZjP4hme4xchnEBR9vEtPx7c+8NrsCvgYeMp6+2s+/jHvt5MA7WeffwFz/\
h6Nw1JwPw0Pfl4+\
NikPDqwUd8s7qn1xyh5YuvSO4FyoZrXiqbZAyiEAyCpuWengw0UpqrMFNM9Roq4arlxUcbuEcQIfLn\
KF1BRxspMOLc1ouGqqX23/KiGuil2ilw3jj2OTY3hJWNJ/EsqJ/3dx/U5gtTVMZuL+J+S+\
57fGY5qmmjSYYQH/\
CE2Uzy65L2rpHuoD8grfhAA7CnNhwovnbsQ56LfSfDWp9bzTLejOkclTmRcZfm/NylP8EK/RQTg==\
"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->1281624350,ExpressionUUID->"095740b7-c82e-4df8-a761-8ed3dcc82cce"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVU1vKzUUfX1N2qStUoSexNfGekiIBRViw+\
ItiJpp0hcpfY3GKQixAGfmTmLFY498PUnnLVmyZMMPQGLDX2DFGn4AW8SOj9/\
A9UwyTSOKWJBNPPb18bnnHl+fH53xJneFAn5wnbssd2f8MJhDtIA4eYSNkUSaaQ4dpJjsVd/\
JY2yEuQL63g/Nyn/\
6af7GyERCMSyQopnUDqyInDTa72yFYtUzt4AUfjyBNFPCAU0kjfXupxcSI2Uwt4AlEC9xhtswTWwEo\
BTBHdLWC+FEcoCtgRVpCfW4Xm5N4NaV6/tr+K/\
2grkxCMzNJTKTeUAmE1aY3LJMRAoci6WFyKmCxQaQCV0wk1A8sMQoZVZSz54d/frND6x/\
C1HuKITP6ThmLAtvXrDIpKnQMZYhN0jLxAGsJklgKVQunLHIllIwL+\
RuHvvYKstQ5XEwEbNKnHYvd87o6qMO4a/019j9Chp4hxfp1CgMIRlJvdgUCZ/\
wuVlxZ4l9MBdeSrCIjYnNoY45GhjtBiKVquCnnBSJgHGhkY2tqYPaPYFQEvC8LwpN8RHxPhn0x1Yui\
cMXw4SWToLcWtDuYyIGvH1lcoTrJdjaJ417/Nr+7MAoY70G4WWvHNuXH37/0Sef/d6174rv/vz801+\
69vV3ePPbr3/sbmy4g3NUCeXF5G9VBX1mIXl/\
V6h6Qyegg4nnWMQxiYPNgVDoc3u1pHyeZUBy6QioFrzlz3pO5f3fdOVf7pVO2Rgc2Uq6+\
Z1nlJxaYSVUfgpBxOidtrLSO88Zhs6CSMtJNHRfXRU5ErmO5hSSESmlQLEFAYLC9xjm0/\
XYb7oc3yA/uTIWhjox/sJsaSmixcyanPLdw/alFcUIlqBsUv7+6taRJ+XluxJ2JjUGT7Yy9/\
Mbt2wh/PyT//1xh9AJ/TGkYihimWPQvHPGMBUz4PIlbKxDUAecWgPEa5zfutg+\
z51JhZPRA8m0L4C8IKY0vF+dlr+DVNy6sfEPOJSdZoPzH1rSBuzYg611qOmu/\
4Ne0KvHp8GpvyTPjYoDQ20QyJKPsLO2J2F6IP5moGS0oMZjWUpkqJvSMC3X+\
dOhVlLDhuR1Bhps5f5NY+WvPcD3jLfIexlYV/DjrfSo619nVUaN+13+XzOjGuk5eEvGW8M61+\
bOZCV7P5ZVOdY37h8KtbNSV4q/\
vc35wRwPqYfkqcYtc5zxThmTWTqilLF9rgueTxHogTsOcqTAoaYHcH343aR/+\
7DxwmiaOwkBy3s8KTJ6Msdln/kb536d6A=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->999471040,ExpressionUUID->"712cfd22-0741-4dd2-9fc9-18f044945b6e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUhpH0Z606kLjiBov78gpTm24j0kanuC/gxietVceO/NMuPCO8BZeIZ+\
AkTdIyQMI3OT4/3/n7nNnllIbUlRJob+ld4d2U9qMtpDvg2Qsb3AuLmjB2kNvs5fGeXdgg8RLw/\
irRh+paqWm4dFswqB0k7DDXT2DRNFpBXkjmABVZ0Hi+\
XgibSm29AXsMCm0QgZQY3EfHBXMs69nBrWF5HXhxNFM745wwzoUTWjFJHDw5wixRABw4EYowlA8kRW\
eyBqkPxGnCdepzUOipyvNofqqCuC1DuwGitCMSi0Q4ttZ7+EjHD9pArDK9wmxt8/\
ZyztLdxmivOFY9vDOsvIc9SJPV5+\
d15zmu23hgZiOUjd6eEGp9PfzfEb59rc6PE8IkqdIItUkYF95GYWcZxjnbABVfoF0DQvVoyiTwBuf7\
tR3OvNM5cyL9RzPDBUhwbI1isDIeOsOgGvuKbbrl0/cU0mp+Lc4fq2xDR1Vo03VXXPON5tG8k6+\
iK0Qff9KSRxrJAg6QepObPZOeVanq1b+\
LpEh3JNOG5Jgad41iXtvph1hJoaAtaVmAAjP3zmnV0q9h55QOHo0uwLiSjs5KR9YviwrLtiT9rz5w/\
gpRBbLlTOw6C58pjyO9QQLWow5vmbTwtyU8s3RboG/Oa2466kda+\
lzZszVP6SRWDkxhELAe0XCmSurXFvA5jyJv0TFW+NybVCdl9dJt8Fkr1I0TsNqbFFZlgT+\
IR5Zigb8A9Fp9HQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->492682446,ExpressionUUID->"4a962e8e-8b31-4960-8996-6e3e84acaad7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7240eebf-d06f-4a81-8f56-e691cf1e1a43"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"777a0944-cac4-4cc2-9822-2a0081c8706b"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"a717e0c4-99fa-4236-9d85-5defd41303cc"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 1215},
WindowMargins->{{Automatic, 942}, {Automatic, 8}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.932301008327289`16.347221743806326*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "4", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L338,C51) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "59a5b158-6451-4cfd-a396-4e9544dbd245", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 338, 
                    "SourceColumnStart" -> 51, "SourceLineEnd" -> 338, 
                    "SourceColumnEnd" -> 52, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L338,C51) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{338, 51}, {338, 52}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L338,C51) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L339,C48) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e245864b-cd6e-4fbd-92e6-a764c84687bf", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 339, 
                    "SourceColumnStart" -> 48, "SourceLineEnd" -> 339, 
                    "SourceColumnEnd" -> 49, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L339,C48) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 48}, {339, 49}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L339,C48) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L339,C90) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "143ad678-4074-481f-a252-da58e946178f", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 339, 
                    "SourceColumnStart" -> 90, "SourceLineEnd" -> 339, 
                    "SourceColumnEnd" -> 91, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L339,C90) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 90}, {339, 91}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L339,C90) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L340,C49) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "88539cf7-10ad-485d-b608-b958dc2f20f2", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 340, 
                    "SourceColumnStart" -> 49, "SourceLineEnd" -> 340, 
                    "SourceColumnEnd" -> 50, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L340,C49) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{340, 49}, {340, 50}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L340,C49) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "7a2150e3-76e6-4cd0-bd6e-42f12efd3813"]]]]]], Appearance -> 
                   None, BoxID -> "7a2150e3-76e6-4cd0-bd6e-42f12efd3813", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.932301008327289`16.347221743806326*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "4", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L338,C51) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "59a5b158-6451-4cfd-a396-4e9544dbd245", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 338, 
                    "SourceColumnStart" -> 51, "SourceLineEnd" -> 338, 
                    "SourceColumnEnd" -> 52, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L338,C51) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{338, 51}, {338, 52}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L338,C51) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L339,C48) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e245864b-cd6e-4fbd-92e6-a764c84687bf", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 339, 
                    "SourceColumnStart" -> 48, "SourceLineEnd" -> 339, 
                    "SourceColumnEnd" -> 49, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L339,C48) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 48}, {339, 49}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L339,C48) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L339,C90) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "143ad678-4074-481f-a252-da58e946178f", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 339, 
                    "SourceColumnStart" -> 90, "SourceLineEnd" -> 339, 
                    "SourceColumnEnd" -> 91, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L339,C90) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 90}, {339, 91}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L339,C90) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Unscoped \"", 
                    StyleBox[
                    "Slot", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" error: \"", 
                    StyleBox[
                    "Slot[1]", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L340,C49) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "88539cf7-10ad-485d-b608-b958dc2f20f2", 263731301, 
                    "CodeInspectionFileIssue/UnscopedObjectError", <|
                    "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic, "SourceLineStart" -> 340, 
                    "SourceColumnStart" -> 49, "SourceLineEnd" -> 340, 
                    "SourceColumnEnd" -> 50, "Message" -> 
                    "Unscoped ``Slot`` error: ``Slot[1]``.\!\(\*StyleBox[\"\\\
\" (L340,C49) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{340, 49}, {340, 50}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L340,C49) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    263731301]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "7a2150e3-76e6-4cd0-bd6e-42f12efd3813"]]]]]], Appearance -> 
                   None, BoxID -> "7a2150e3-76e6-4cd0-bd6e-42f12efd3813", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"b7b790d8-3d7e-43d7-aefb-d17c373db38a\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"b7b790d8-3d7e-43d7-aefb-d17c373db38a\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.2\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"6205\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWF9vG0UQj+OzHTuua9ogBE/\
WKQLx4CptgBRegnOJ20hNa3ndAkJIXd/N2Svu9k67e0nNd+CJVx74VvAMH4CPALP3z845lYITBA++\
B5+1szPz29mZ+\
Y3OLcmtIb04Ct6AdCvynVOuQIQCFFUs4LjslmR1GOgNriGNZ0wqd1NWR3SCK6RGItsGKck2iXyfitl\
ToA4pfeuWZft4xqnP7LPAiTzQ6pu5epmAkq3RLAQJ6nUQAt/dlZU+\
9SRk0p1MCv4YHIJwYHeXVIZof4Z7tkfghx4uJggTw2V5d0A5EPDAVoG47NMYIozMSUXWngjmXFbO3j\
VtRIuqsn4UKZWFoZGeKLH7Qf9kINg5QnjdFwFXJ9wZggwiYQOp90+\
OmPJpKEk7DQwqvcBzgtDgNZRj8OgMHNlKXPQjbuuIvy06xkhEkB+\
j0QtDoIJyDL7xPOBzSf2ISiBq5oG7UTh7/\
eScehHFyMh6L1KBj1ds59LqGahp4JDGQADGVrHzBaM9j024D1xlAZVVC3SmZO/\
51lOfToCwHwAjVksjlmtd8lsZMR+k2Iif5pf5Cio2rUgINPwKAQO508f4WjR8Cmwy1RAqg+\
ACfZbkTm8sAy9SsLhf3jmjE85cZsc5bP2F173VF9SPL7Ust+Lw6PStmL///\
JOJBuvHTGDO6DOjfPjkyAq8QIj34ufXQ3E/fv44FF/Hz2+H1vv5iZtECRa+\
4Kc8jNQ8ixNhy0LoCGxAHYfxSVHciGHFeAr32IwlZ1RMGJeLaazf1oa1Ufz/\
dizVebJndkr5O6vtcrG2i0WWqpKWmaW5zlCTGOYXHZM00MwxuDTyFHk3TflTBX6P8yBpJaT854+/\
LLSOLXNAbQ+UmfcOvf8myKrmy5enx6sj+tAcH4wPPt9zHnf3nQPofoK/XQruuOs8PLD3D/\
ad8f5jWsCbRb6dhnipUrIdpIY5FflcLhwxKQrjGbjzbQbiXt5zRcE29BJ2EVBQTKu7KRiNMC7Fa2NZ\
9nN9QJlXElJb5/q1vVqb/9zZQp8zCn1uh0yDC10IfGJNsUnauk8VQ7T9PEJiEVhg3y/\
JWtjYsWSxIzCpG0h5fsux6RlX9E1StEXVfzkNyqMg/\
P8mQFvficc4DALJUjJLLrhklfJdCZP9JwxseYFcmYGLrXtNwWsKXoGCa2sKvmUKvgHeuvkKCwiBrA6\
5Zj58sPfg0e1hapkkGvtMalg3iWXV/OzR3qe3h6ttJhVqCYj9rY4sZoBbvMMz5GHseKsD+\
tj8BsupE8bV0BFpcXWY7IwBW0YnjMYek1Nwbi+aFRPlqyPeyVvAPFnWk+\
l6Ml1PpitMpvMpqTj0XTFTLZgnzbTe9LjqFcfK+5c+gCVjUTYQktJ3uD3/\
enZvuZh71S5pLtI8qSZk3SWG5liyex2m7JJaSnCkEtNUV2OeswsxNEd0Setya09mdFROOyv56Jr9cZ\
4ByUc4OvaWMmDrxGFXCu4lOl8xNU1HNpkA+Rtjyfh5"}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"AntonAntonov/ClassifierEnsembles\"", FontFamily -> 
                    Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztW31sW1cVt2Pn+\
6NJF4bYBjKvERpoTpwmxW2lzU6cOKloG8s3Wbf1gzw/\
X9uvsd9z732O4yJVgU1IY6MU2rIyWJcCRaN/\
oK4SUvedMtBAE0MqBSIKLFnXiWqsrdA2umow7r3vXfv5JVXcNmv3h48iv5x7z73nd849997nc+\
SYHdeExWyvOgFxrBK3rFM0iNIIaqImqwppjtlxVVilAjEndq6XsRarwFXDYpy0gKYwxGoGSXAosh1K\
GqgHmVRKRLlBKEaBfXPMgZv7coqYkqUNajSThHSWivwsDgA13DScS0MMtVE1DZW2NlwZFJMY8t5W3g\
tTERgFBBVsawOVYTJ/\
jsjUD8NUOkkadaD6xA68LCQqEMAkgaSiYp3OMIHBlVTi6gEkR4sH82c1nYR2VeHa3oymcW/\
UGRbp894W7A8heZxAGA0iVdH6lSj3CagN9vfKWkpMY9BsOIYMGiJ2QkTBUyh9MCnmYBQ36SqCGUWij\
r+Sd5zDKAPzZtT1pNNQRKIiQezcqCqFntpeEUOg5ZIwZrPYXts/\
LiYzIvEMru3JaGqKrLSU763aALWEGgV1IQSJbzV53DRpT1KOKymoaNyhuCoAacDwZ0F0XUqMQyDvhM\
Rj1YbH8qOK9FYOyymIkY1Rgz/fQgY2BDIIkYnvJYAhaAwS/\
wbE9CCU4wkKoTKkZolOO27tiWA1mdGgWR43bhDjihyTJRbKgY/ImtYwl+grVz+\
AxHRCljBlWwwn2XHtMGkbUyDG6GutvxiY2xn15cOH7JWgKMGgilL5NjJpeKA3oCZVhF56kdJ5H/\
IwmvWhzzD6nY96YSgtSrKWMyy9SKdtCsrJJIwS2OPQtMNO2CoqHbYKm81e+\
LtCW5W1TW9upM12h4Nwlk8Lm1e5oqKqggGbkv3kc7bi51/2m/\
gtTz64nT7Te6cVxqNciskJLVn6VHa4sZmfeeW+rX7rfHklJ9+\
5xzxoT9InmSe12UYTZqWcz4MyxueVmOcjSqp1S2xM8+6DP8npyE6M0+drtuNYt8TFLPlwz27Fb5K/\
48UDYzqo16Wi/nPv95jHF81PlN5RwZQ8zMzfPfhfQyikCw3276TPy7s+x/\
j27wHGV319LmHmbbajCbO87WTKWzTfq3OrGIj/nceG5d30uXHfqSI+D9Lg73NMbTHzE790bzHPN1H/\
681mfQfe/NZmM57Jtk0r6HPs+d8yfnQACUxv5E3Gu26zCWancP7YE7eb+cn9Aa9sHs/9w+fn/\
uP6Q2cOZc34ZoWns2b8nOf2cZ7bz3nuHz4f91/RepW8z489TWnOh76/\
n9JZH7r8AaVzJe7zEzaH3Vm0cU+scNgr9aid7GfAvvMn3bHH3nmAOezyF6Nm3r/78IjfJD/5zIfb/\
NbxJRvUyuiUD32W0d99aN9eSmeu36DJ0zMxs0Gc54BnnQ9tNRvEeW5w0fiSDfrgEqV/+tCPfkjpbR/\
axuj89Rs0dXo1C7WpS0+yc2E22MUAXnzgXRbKvH/yN4OQrQi4dXChfja+ZINuZfSWD/\
3xJKU3ljDkJs/7Rymg6b/OZZhBR+5nK/XTyUewmW8+9AI7nbn8U19atcNvHV+yQQefoEQi7dOM/\
rKUIXfhH2mzQZzngKeEw7LZIM5zg4vGl2zQFkb/8qFnn6F0zod2MVqCkJuNfcRWwP/\
8KxMMcMujDGBbZAe70nj/nQ23a8yAI2+\
NLtTPxpds0CpGZ00GrWT0xhKs0P4udsfO7tCvj1DkoL4yz/mjZt528N/sUODy03Vrv+q3ji/\
ZIP0sOO1DgNEZn7Gr/nz9BvmzA+NmgzjPAR99vReZDeI8N7hofMkGbWZEDrd7GJEXz8d/\
QGkp7qFDF9kK+G85zE65PavfY3vJttWuv5IZ/dM/\
28pOudnlM2ML9bPxNzTkHAWDqDVOas30uO7eyccuMXSehx9i7j/+Xlj1m/\
r3BE7t8Fvlbzr6fPS7HmI3R+j4FoYyFP0DMO8G24ODQb9V/oa+1CyIvvER/c3k7scY2ulv/l6/0B/\
tY9Y89Y1XGT/9+Gv6m4xZ/qajnxXn7qdoXBfa9Uh5+ccMpWdghkWS69QRxk/\
gl9maFMnf0Nt9IfRTu7zMl9Mz5+junTrb3cX4oyPf1c/bxk0b6XPmby+wm69I/\
uajfx8ylKPaXvo80FQbZ3z6P2+\
zs2jfu3ey52D6JR29WT5Wbcl71PfgNJS0MM0GBOz5ZmfPBPmun886GYmVXlEaiyM1o0QtiZXKIBJT1\
mxLHWsclqUxbM3DfBLzIAuAm48osCIv1xgQpQTk6RKrrxqAhuT0kLJOSWc03llVyKw5CutgRBPPJxZ\
6eD6xRthIHLnWJYBPGQmzdRpM9SiKqucjgePCt6cK8tYMoDEhEIQeRVMV9qGOdwSSIsbEARD1KximI\
gS0AByCS7CONyACp/\
Cr5wSwLaFpaby2owMZCT3cnlWTMbLUUlLNRNslNdUREqUk1MIwrWJZU1GuINuxGATQMJhLQ5SUlbGR\
8HpQR5zSB2NiJllIo1LjTd6pEARrVykupSnEkl1K5HWbilURqd3PlqRvmdAHsUQigk5eulqfEECQ9b\
jUmNslKlGXZPhMj1tXVtYSLsi9R6TyAhDhK6BlAdpsROK87CWXANXkHMukFJzPAhtP8gljBTEnMXq+\
zAJJ1Dra1AeJF6F1tywzwDCYpp23OJb5ekoHxLUCehYrcVyy1kDF1Ssz5Z6dljO4FSTULD0vlHggIS\
JRorljq4vqN2ZSEYg2iGhsXl9TiIzVQghKMqaHmaOwymzqnKKJE0z3vKEfcxg4htX0JzcAmumakKMG\
huhBpRcY9AW2m+\
9CVl24KVWRQFLF11wVsd7e5bJIuSxSLouUyyLlski5LFIui5TLIte2QuWySLksUi6LlMsi5bJIuSxS\
LouUyyLlski5LLJ0ZZHaclmkXBa5SWWRRdE2CF+BuayKovhqgu4K4VdjhI/\
9LhJddwmgWQgUmSAQdYVAEECdwIOBqDb15K0UiDfDQwFXzEgLEzOXCxvIZpQV6FoPRaTISlwALcS8T\
cQ7AKZFxBK7uBIkVFQcSMBWkkdahD5VytAkr3hVK3ilvTQqfLzb6Ebv02twaaswhOS4rIhJVxgmoYi\
vYjs2Cp0eV08m7lrpWdktXNuCridLgjXXSDpK/\
rmRquuFe8nevKpzoFrobPe0e65JXY0wMrKur3RdXxAi3oh3jSe62t0V9UJ3N/\
l0izAWcUc7vVKXtysa6VotLgSlXG4tl1vL5dZFy62FV15rJXOBd1DT9KDB2HG0BpuMWWqltxT90k5/\
x+VVTmDfSrRafq3XU+\
MGTvpiCVyLHfZEkJ4hoK2Uk8ENGrgiah2o0m8ZN6g2jj1QyQ4zN6g3vROBu6/\
rTccNlheusfWqPoTY7KCXk5dfhdlsdv4lqEa2F+69HCaB0iGm5Y5OirBOx06+mNFvKvUBOsj4rWP/\
opN2Rju7o52d0A09sMvd7Vnlca/2eCW3x+\
vp9MLulZ1rute4Ad1jdFED5OsLnNDA582LMbrAYowW4l7/jaMYSc6L+5r+\
qLxgx3J9DH0xYhoVDet1//8DdyonRQ=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.932301008327289`16.347221743806326*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{
                Annotation[
                 Grid[{{
                    Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                    "Heavy"], "", "Your paclet resource is being published"}},
                   Alignment -> {Left, Baseline}, 
                  Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
                 DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
                 "Your paclet resource is being published"]], ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style["", LineBreakWithin -> Automatic, LineIndent -> 0], 
            ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "4", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, 
                    "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Unscoped ", 
                   Style[
                    RawBoxes["Slot"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " error: ", 
                   Style[
                    RawBoxes["Slot[1]"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L338,C51) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "59a5b158-6451-4cfd-a396-4e9544dbd245", 263731301, 
                  "CodeInspectionFileIssue/UnscopedObjectError", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                    "Editor" -> Automatic, "SourceLineStart" -> 338, 
                   "SourceColumnStart" -> 51, "SourceLineEnd" -> 338, 
                   "SourceColumnEnd" -> 52, "Message" -> 
                   "Unscoped ``Slot`` error: \
``Slot[1]``.\!\(\*StyleBox[\"\\\" (L338,C51) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{338, 51}, {338, 52}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L338,C51) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[263731301]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Unscoped ", 
                   Style[
                    RawBoxes["Slot"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " error: ", 
                   Style[
                    RawBoxes["Slot[1]"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L339,C48) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "e245864b-cd6e-4fbd-92e6-a764c84687bf", 263731301, 
                  "CodeInspectionFileIssue/UnscopedObjectError", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                    "Editor" -> Automatic, "SourceLineStart" -> 339, 
                   "SourceColumnStart" -> 48, "SourceLineEnd" -> 339, 
                   "SourceColumnEnd" -> 49, "Message" -> 
                   "Unscoped ``Slot`` error: \
``Slot[1]``.\!\(\*StyleBox[\"\\\" (L339,C48) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 48}, {339, 49}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L339,C48) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[263731301]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Unscoped ", 
                   Style[
                    RawBoxes["Slot"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " error: ", 
                   Style[
                    RawBoxes["Slot[1]"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L339,C90) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "143ad678-4074-481f-a252-da58e946178f", 263731301, 
                  "CodeInspectionFileIssue/UnscopedObjectError", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                    "Editor" -> Automatic, "SourceLineStart" -> 339, 
                   "SourceColumnStart" -> 90, "SourceLineEnd" -> 339, 
                   "SourceColumnEnd" -> 91, "Message" -> 
                   "Unscoped ``Slot`` error: \
``Slot[1]``.\!\(\*StyleBox[\"\\\" (L339,C90) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{339, 90}, {339, 91}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L339,C90) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[263731301]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Unscoped ", 
                   Style[
                    RawBoxes["Slot"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " error: ", 
                   Style[
                    RawBoxes["Slot[1]"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L340,C49) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "88539cf7-10ad-485d-b608-b958dc2f20f2", 263731301, 
                  "CodeInspectionFileIssue/UnscopedObjectError", <|
                  "File" -> 
                   "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                    "Editor" -> Automatic, "SourceLineStart" -> 340, 
                   "SourceColumnStart" -> 49, "SourceLineEnd" -> 340, 
                   "SourceColumnEnd" -> 50, "Message" -> 
                   "Unscoped ``Slot`` error: \
``Slot[1]``.\!\(\*StyleBox[\"\\\" (L340,C49) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "UnscopedObjectError", 
                    "Unscoped ``Slot`` error: ``Slot[1]``.", "Error", <|
                    CodeParser`Source -> {{340, 49}, {340, 50}}, 
                    ConfidenceLevel -> 0.8, "File" -> 
                    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/Kernel/ClassifierEnsembles.wl",
                     "Editor" -> Automatic|>], "Hash" -> 780338601371504041, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L340,C49) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[263731301]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "7a2150e3-76e6-4cd0-bd6e-42f12efd3813"]]]]]], Appearance -> 
             None, BoxID -> "7a2150e3-76e6-4cd0-bd6e-42f12efd3813"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"b7b790d8-3d7e-43d7-aefb-d17c373db38a\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"b7b790d8-3d7e-43d7-aefb-d17c373db38a\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.2\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"6205\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWF9vG0UQj+OzHTuua9ogBE/\
WKQLx4CptgBRegnOJ20hNa3ndAkJIXd/N2Svu9k67e0nNd+CJVx74VvAMH4CPALP3z845lYITBA++\
B5+1szPz29mZ+\
Y3OLcmtIb04Ct6AdCvynVOuQIQCFFUs4LjslmR1GOgNriGNZ0wqd1NWR3SCK6RGItsGKck2iXyfitl\
ToA4pfeuWZft4xqnP7LPAiTzQ6pu5epmAkq3RLAQJ6nUQAt/dlZU+\
9SRk0p1MCv4YHIJwYHeXVIZof4Z7tkfghx4uJggTw2V5d0A5EPDAVoG47NMYIozMSUXWngjmXFbO3j\
VtRIuqsn4UKZWFoZGeKLH7Qf9kINg5QnjdFwFXJ9wZggwiYQOp90+\
OmPJpKEk7DQwqvcBzgtDgNZRj8OgMHNlKXPQjbuuIvy06xkhEkB+\
j0QtDoIJyDL7xPOBzSf2ISiBq5oG7UTh7/\
eScehHFyMh6L1KBj1ds59LqGahp4JDGQADGVrHzBaM9j024D1xlAZVVC3SmZO/\
51lOfToCwHwAjVksjlmtd8lsZMR+k2Iif5pf5Cio2rUgINPwKAQO508f4WjR8Cmwy1RAqg+\
ACfZbkTm8sAy9SsLhf3jmjE85cZsc5bP2F173VF9SPL7Ust+Lw6PStmL///\
JOJBuvHTGDO6DOjfPjkyAq8QIj34ufXQ3E/fv44FF/Hz2+H1vv5iZtECRa+\
4Kc8jNQ8ixNhy0LoCGxAHYfxSVHciGHFeAr32IwlZ1RMGJeLaazf1oa1Ufz/\
dizVebJndkr5O6vtcrG2i0WWqpKWmaW5zlCTGOYXHZM00MwxuDTyFHk3TflTBX6P8yBpJaT854+/\
LLSOLXNAbQ+UmfcOvf8myKrmy5enx6sj+tAcH4wPPt9zHnf3nQPofoK/XQruuOs8PLD3D/\
ad8f5jWsCbRb6dhnipUrIdpIY5FflcLhwxKQrjGbjzbQbiXt5zRcE29BJ2EVBQTKu7KRiNMC7Fa2NZ\
9nN9QJlXElJb5/q1vVqb/9zZQp8zCn1uh0yDC10IfGJNsUnauk8VQ7T9PEJiEVhg3y/\
JWtjYsWSxIzCpG0h5fsux6RlX9E1StEXVfzkNyqMg/\
P8mQFvficc4DALJUjJLLrhklfJdCZP9JwxseYFcmYGLrXtNwWsKXoGCa2sKvmUKvgHeuvkKCwiBrA6\
5Zj58sPfg0e1hapkkGvtMalg3iWXV/OzR3qe3h6ttJhVqCYj9rY4sZoBbvMMz5GHseKsD+\
tj8BsupE8bV0BFpcXWY7IwBW0YnjMYek1Nwbi+aFRPlqyPeyVvAPFnWk+\
l6Ml1PpitMpvMpqTj0XTFTLZgnzbTe9LjqFcfK+5c+gCVjUTYQktJ3uD3/\
enZvuZh71S5pLtI8qSZk3SWG5liyex2m7JJaSnCkEtNUV2OeswsxNEd0Setya09mdFROOyv56Jr9cZ\
4ByUc4OvaWMmDrxGFXCu4lOl8xNU1HNpkA+Rtjyfh5"}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"AntonAntonov/ClassifierEnsembles\"", FontFamily -> 
                    Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztW31sW1cVt2Pn+\
6NJF4bYBjKvERpoTpwmxW2lzU6cOKloG8s3Wbf1gzw/\
X9uvsd9z732O4yJVgU1IY6MU2rIyWJcCRaN/\
oK4SUvedMtBAE0MqBSIKLFnXiWqsrdA2umow7r3vXfv5JVXcNmv3h48iv5x7z73nd849997nc+\
SYHdeExWyvOgFxrBK3rFM0iNIIaqImqwppjtlxVVilAjEndq6XsRarwFXDYpy0gKYwxGoGSXAosh1K\
GqgHmVRKRLlBKEaBfXPMgZv7coqYkqUNajSThHSWivwsDgA13DScS0MMtVE1DZW2NlwZFJMY8t5W3g\
tTERgFBBVsawOVYTJ/\
jsjUD8NUOkkadaD6xA68LCQqEMAkgaSiYp3OMIHBlVTi6gEkR4sH82c1nYR2VeHa3oymcW/\
UGRbp894W7A8heZxAGA0iVdH6lSj3CagN9vfKWkpMY9BsOIYMGiJ2QkTBUyh9MCnmYBQ36SqCGUWij\
r+Sd5zDKAPzZtT1pNNQRKIiQezcqCqFntpeEUOg5ZIwZrPYXts/\
LiYzIvEMru3JaGqKrLSU763aALWEGgV1IQSJbzV53DRpT1KOKymoaNyhuCoAacDwZ0F0XUqMQyDvhM\
Rj1YbH8qOK9FYOyymIkY1Rgz/fQgY2BDIIkYnvJYAhaAwS/\
wbE9CCU4wkKoTKkZolOO27tiWA1mdGgWR43bhDjihyTJRbKgY/ImtYwl+grVz+\
AxHRCljBlWwwn2XHtMGkbUyDG6GutvxiY2xn15cOH7JWgKMGgilL5NjJpeKA3oCZVhF56kdJ5H/\
IwmvWhzzD6nY96YSgtSrKWMyy9SKdtCsrJJIwS2OPQtMNO2CoqHbYKm81e+\
LtCW5W1TW9upM12h4Nwlk8Lm1e5oqKqggGbkv3kc7bi51/2m/\
gtTz64nT7Te6cVxqNciskJLVn6VHa4sZmfeeW+rX7rfHklJ9+\
5xzxoT9InmSe12UYTZqWcz4MyxueVmOcjSqp1S2xM8+6DP8npyE6M0+drtuNYt8TFLPlwz27Fb5K/\
48UDYzqo16Wi/nPv95jHF81PlN5RwZQ8zMzfPfhfQyikCw3276TPy7s+x/\
j27wHGV319LmHmbbajCbO87WTKWzTfq3OrGIj/nceG5d30uXHfqSI+D9Lg73NMbTHzE790bzHPN1H/\
681mfQfe/NZmM57Jtk0r6HPs+d8yfnQACUxv5E3Gu26zCWancP7YE7eb+cn9Aa9sHs/9w+fn/\
uP6Q2cOZc34ZoWns2b8nOf2cZ7bz3nuHz4f91/RepW8z489TWnOh76/\
n9JZH7r8AaVzJe7zEzaH3Vm0cU+scNgr9aid7GfAvvMn3bHH3nmAOezyF6Nm3r/78IjfJD/5zIfb/\
NbxJRvUyuiUD32W0d99aN9eSmeu36DJ0zMxs0Gc54BnnQ9tNRvEeW5w0fiSDfrgEqV/+tCPfkjpbR/\
axuj89Rs0dXo1C7WpS0+yc2E22MUAXnzgXRbKvH/yN4OQrQi4dXChfja+ZINuZfSWD/\
3xJKU3ljDkJs/7Rymg6b/OZZhBR+5nK/XTyUewmW8+9AI7nbn8U19atcNvHV+yQQefoEQi7dOM/\
rKUIXfhH2mzQZzngKeEw7LZIM5zg4vGl2zQFkb/8qFnn6F0zod2MVqCkJuNfcRWwP/\
8KxMMcMujDGBbZAe70nj/nQ23a8yAI2+\
NLtTPxpds0CpGZ00GrWT0xhKs0P4udsfO7tCvj1DkoL4yz/mjZt528N/sUODy03Vrv+q3ji/\
ZIP0sOO1DgNEZn7Gr/nz9BvmzA+NmgzjPAR99vReZDeI8N7hofMkGbWZEDrd7GJEXz8d/\
QGkp7qFDF9kK+G85zE65PavfY3vJttWuv5IZ/dM/\
28pOudnlM2ML9bPxNzTkHAWDqDVOas30uO7eyccuMXSehx9i7j/+Xlj1m/\
r3BE7t8Fvlbzr6fPS7HmI3R+j4FoYyFP0DMO8G24ODQb9V/oa+1CyIvvER/c3k7scY2ulv/l6/0B/\
tY9Y89Y1XGT/9+Gv6m4xZ/qajnxXn7qdoXBfa9Uh5+ccMpWdghkWS69QRxk/\
gl9maFMnf0Nt9IfRTu7zMl9Mz5+junTrb3cX4oyPf1c/bxk0b6XPmby+wm69I/\
uajfx8ylKPaXvo80FQbZ3z6P2+\
zs2jfu3ey52D6JR29WT5Wbcl71PfgNJS0MM0GBOz5ZmfPBPmun886GYmVXlEaiyM1o0QtiZXKIBJT1\
mxLHWsclqUxbM3DfBLzIAuAm48osCIv1xgQpQTk6RKrrxqAhuT0kLJOSWc03llVyKw5CutgRBPPJxZ\
6eD6xRthIHLnWJYBPGQmzdRpM9SiKqucjgePCt6cK8tYMoDEhEIQeRVMV9qGOdwSSIsbEARD1KximI\
gS0AByCS7CONyACp/\
Cr5wSwLaFpaby2owMZCT3cnlWTMbLUUlLNRNslNdUREqUk1MIwrWJZU1GuINuxGATQMJhLQ5SUlbGR\
8HpQR5zSB2NiJllIo1LjTd6pEARrVykupSnEkl1K5HWbilURqd3PlqRvmdAHsUQigk5eulqfEECQ9b\
jUmNslKlGXZPhMj1tXVtYSLsi9R6TyAhDhK6BlAdpsROK87CWXANXkHMukFJzPAhtP8gljBTEnMXq+\
zAJJ1Dra1AeJF6F1tywzwDCYpp23OJb5ekoHxLUCehYrcVyy1kDF1Ssz5Z6dljO4FSTULD0vlHggIS\
JRorljq4vqN2ZSEYg2iGhsXl9TiIzVQghKMqaHmaOwymzqnKKJE0z3vKEfcxg4htX0JzcAmumakKMG\
huhBpRcY9AW2m+\
9CVl24KVWRQFLF11wVsd7e5bJIuSxSLouUyyLlski5LFIui5TLIte2QuWySLksUi6LlMsi5bJIuSxS\
LouUyyLlski5LLJ0ZZHaclmkXBa5SWWRRdE2CF+BuayKovhqgu4K4VdjhI/\
9LhJddwmgWQgUmSAQdYVAEECdwIOBqDb15K0UiDfDQwFXzEgLEzOXCxvIZpQV6FoPRaTISlwALcS8T\
cQ7AKZFxBK7uBIkVFQcSMBWkkdahD5VytAkr3hVK3ilvTQqfLzb6Ebv02twaaswhOS4rIhJVxgmoYi\
vYjs2Cp0eV08m7lrpWdktXNuCridLgjXXSDpK/\
rmRquuFe8nevKpzoFrobPe0e65JXY0wMrKur3RdXxAi3oh3jSe62t0V9UJ3N/\
l0izAWcUc7vVKXtysa6VotLgSlXG4tl1vL5dZFy62FV15rJXOBd1DT9KDB2HG0BpuMWWqltxT90k5/\
x+VVTmDfSrRafq3XU+\
MGTvpiCVyLHfZEkJ4hoK2Uk8ENGrgiah2o0m8ZN6g2jj1QyQ4zN6g3vROBu6/\
rTccNlheusfWqPoTY7KCXk5dfhdlsdv4lqEa2F+69HCaB0iGm5Y5OirBOx06+mNFvKvUBOsj4rWP/\
opN2Rju7o52d0A09sMvd7Vnlca/2eCW3x+\
vp9MLulZ1rute4Ad1jdFED5OsLnNDA582LMbrAYowW4l7/jaMYSc6L+5r+\
qLxgx3J9DH0xYhoVDet1//8DdyonRQ=="}, "ClickToCopyTemplate"]]}}, Alignment -> 
             Left, ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
            FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.892541454391597`16.34280823552989*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> False, 
  "UpdatedTimestamp" -> 3.93225155823911`16.347216282363924*^9, 
  "TemplateVersion" -> "2023.03.03", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"1" -> Closed}}, 
  "Paclet" -> "None", 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Volumes/Macintosh \
HD/Users/antonov/WL-ClassifierEnsembles-paclet/build/AntonAntonov__\
ClassifierEnsembles-1.0.2.paclet", "FileHashes" -> ByteArray[CompressedData["
1:eJwBwwM8/CFib1JiAQAAALYDAAA4Qzp4nHOU1Q02c8lPLs1NzStJLMnMz9N3
zUvPySzO0HcvzUxJLQZyi1Nzk3JSi/PTknMSi4sz0zJTi4r18pIcmXSD2YLz
S4uSU30+pUbzndqWogsUCUksSk8t8dF63Fr56AqHim6wEnbjPfNSUiv04w30
ktOKkYwqZvHLz0tFmJP9verb1tlXOHWD1fCZU5yaDpIqjjfGY1be5o71l7LO
uOgGaxBjll56ah4e095q1AnoPn1irhvsjN20oNS01KLUvOTUgMR0YEAGV+Ym
5ecU6ztDQrHSqTIkoyi1OCM/JwUtNKfkMjFeYJS3Rdhl2nT6S+Xlv966wYEk
2QWLPGd4zDnn56WVFgO1+iaWFGVWoNnsyvmWizFgsRDC5sbkSRVKL8+Z6Qb7
UWizb2picWlRKiRoUa31dl4cGTGvXBxhLesM3c0ffqa66wY7UWgtmlWzJ74N
OnAjLg5hFWNKbSxTTATQh/4UWhVQlJ+UmJSZk1mSmYruxUMlX2an6RkXIOyd
3Gf6Xv7hNGXdYE8K7Q3yd3ZJLElEs/Fo3IqlbFLrkAKVU+214OUuU2CK9aLc
xoCcfIx4tHldn+Z/SQcpk5zboBno+Y6dUTfYnUIrw/JLMAI16ZJUya6ySGWE
fTlXWb/NWPRAWDfYmxL78GROm1xHKcO2tzIIO+UWyjxMj1EEBqsDRXaiWZTb
fJJtcnwaO8Iib6OnVlV/lPx0g31IsigotTgxtyAnMy+dYPYwZVhfH6jz2R5h
aUKtu+iHnb0cusFa2C0NTk0sSs6AFJ2mkAI9FU+x2fr59FHphz/0STEPXwWh
E5Wrd0haVFU3WJNI84oz8Rj3r3f+lkIzA2BNpkuMccAgzEkp1ivPwWPkOytL
W5Gi/cA8YEKMkZkg2je1JDEFlKfxmtxQqjzHLvEu0O96xJgMrySN8Jh5f91Z
l2i2thIizSwvyixJ1cvJT87GY+ZF60lPLvi1s+oGq+MwsyA1JwfaIjAnEOGC
8Y+rBaO1w3HHEMIwIqvybqtErUvCwk66wdpEGxmfgcfA6jXPNAWdPwFbP4nY
DQwpLckvykwEZU5/57T8IkTTKhXW3krKBxawJUWJBQXAjJuSmJuYDqQT81Iy
80pSiwryc8AGomXfdy8OnXx0MsQU4ZKZZScP3uJRsdQNlvVOLcpLzdFH5H14
0w41lfnk79rIzHrvazLCFIQIb0Bick5qiWdeWj6arqSj04vsWUqQalaEiCBE
l29iXmZaanEJ/lTtcW/VxNL3z2IAHGPsPs981mI=
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X ARM (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"027daaf6-f46e-4dae-8d22-74862f933d26"
]

